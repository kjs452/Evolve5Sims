# PHOTON ASCII

struct ORGANIC[N] {
	X
	Y
	ENERGY
}

struct BARRIER[N] {
	X
	Y
}

struct ER {
	FIDX
	RIDX
	STATE[N] {
		VALUE
	}
}

struct SIMULATION_OPTIONS {
	MODE
}

struct STRAIN_OPTIONS[N] {
	ENABLED
	NAME
	LOOK_MODE
	EAT_MODE
	MAKE_SPORE_MODE
	MAKE_SPORE_ENERGY
	CMOVE_MODE
	OMOVE_MODE
	GROW_MODE
	GROW_ENERGY
	GROW_SIZE
	ROTATE_MODE
	CSHIFT_MODE
	MAKE_ORGANIC_MODE
	MAKE_BARRIER_MODE
	EXUDE_MODE
	SHOUT_MODE
	SPAWN_MODE
	LISTEN_MODE
	BROADCAST_MODE
	SAY_MODE
	READ_MODE
	WRITE_MODE
	KEY_PRESS_MODE
	SEND_MODE
	SEND_ENERGY_MODE
}

struct KFMO[N] {
	MAX_APPLY
	PROB_MUTATE_CODEBLOCK
	PROB_DUPLICATE
	PROB_DELETE
	PROB_INSERT
	PROB_TRANSPOSE
	PROB_MODIFY
	MERGE_MODE
	XLEN
	PROTECTED_CODEBLOCKS
	MAX_CODE_BLOCKS
}

struct STRAIN_OPCODES[N] {
	NPROTECTED
	TABLE[M] {
		NAME
	}
}

struct SPORE {
	X
	Y
	ENERGY
	PARENT
	STRAIN
	SFLAGS
	PROGRAM[N] {
		TEXT_LINE
	}
}

struct CELL {
	ORGANISM_ID
	X
	Y
	MOOD
	MESSAGE

	MACHINE {
		TERMINATED
		CB
		PC
		R[N] {
			VALUE
		}

		CALL_STACK[N] {
			CB
			PC
		}

		DATA_STACK[N] {
			VALUE
		}
	}
}

struct ORGANISM {
	ORGANISM_ID
	STRAIN
	SIM_COUNT
	OFLAGS
	PARENT1
	PARENT2
	GENERATION
	ENERGY
	AGE
	PROGRAM[N] {
		TEXT_LINE
	}
}

struct UNIVERSE {
	SEED
	STEP
	AGE
	CURRENT_CELL { X Y }    # -1 -1 means NULL
	NEXT_ID
	NBORN
	NDIE
	WIDTH
	HEIGHT
	G0
	KEY
	MOUSE_X
	MOUSE_Y
	S0[N] { V }}

struct CELL_LIST[N] {
	X Y 
}

struct ODOR_MAP[N] {
	X Y LEN VALUE
}

UNIVERSE 53023876             # seed
         0           # step
         0           # age
         206 255          # current cell location (x,y)
         7           # next id
         0 0      # number births, deaths
         700 400          # dimensions: width x height
         0             # global register G0
         0             # key
         -1             # mouse_x
         -1             # mouse_y
       { 0 0 0 0 0 0 0 0 }  # S0's for each strain

ER 1 0 63
	91817470	3114847214	2418367600	3170270707
	3821841753	999660627	3026047898	3214537651
	493279184	521668466	1035775848	4282228915
	358716264	2749167194	3560237930	1567071573
	2569829689	2234936107	4195774808	3912662385
	3651329160	1699442138	939702659	1139790713
	2913603635	2153022041	2629471732	151459115
	1165887913	3184351770	3875674657	2197208421
	119962885	3308149629	1837430564	580097551
	121415213	2096879132	2334110818	1656049038
	3515688696	3634663471	3293887393	1417566238
	3907053082	1362243759	4037366882	3582408141
	1105451969	618970409	1322344902	3264573188
	3735059490	923490221	4282909362	631105266
	3645002766	1321110061	2248528506	3959614645
	552072807	658301331	4194552116

SIMULATION_OPTIONS 0   # mode


STRAIN_OPTIONS {
	# Strain 0
	1        # enabled
	"ShootNew"        # strain name these settings were based on
	0        # LOOK mode
	640        # EAT mode
	0        # MAKE-SPORE mode
	100        # MAKE-SPORE energy
	0        # CMOVE mode
	0        # OMOVE mode
	0        # GROW mode
	100        # GROW energy
	20        # GROW size
	0        # ROTATE mode
	0        # CSHIFT mode
	0        # MAKE-ORGANIC mode
	0        # MAKE-BARRIER mode
	0        # EXUDE mode
	0        # SHOUT mode
	45        # SPAWN mode
	0        # LISTEN mode
	2        # BROADCAST mode
	32        # SAY mode
	0        # READ mode
	0        # WRITE mode
	0        # KEY-PRESS mode
	0        # SEND mode
	0        # SEND-ENERGY mode

	# Strain 1
	0        # enabled
	""        # strain name these settings were based on
	0        # LOOK mode
	0        # EAT mode
	0        # MAKE-SPORE mode
	0        # MAKE-SPORE energy
	0        # CMOVE mode
	0        # OMOVE mode
	0        # GROW mode
	0        # GROW energy
	0        # GROW size
	0        # ROTATE mode
	0        # CSHIFT mode
	0        # MAKE-ORGANIC mode
	0        # MAKE-BARRIER mode
	0        # EXUDE mode
	0        # SHOUT mode
	0        # SPAWN mode
	0        # LISTEN mode
	0        # BROADCAST mode
	0        # SAY mode
	0        # READ mode
	0        # WRITE mode
	0        # KEY-PRESS mode
	0        # SEND mode
	0        # SEND-ENERGY mode

	# Strain 2
	0        # enabled
	""        # strain name these settings were based on
	0        # LOOK mode
	0        # EAT mode
	0        # MAKE-SPORE mode
	0        # MAKE-SPORE energy
	0        # CMOVE mode
	0        # OMOVE mode
	0        # GROW mode
	0        # GROW energy
	0        # GROW size
	0        # ROTATE mode
	0        # CSHIFT mode
	0        # MAKE-ORGANIC mode
	0        # MAKE-BARRIER mode
	0        # EXUDE mode
	0        # SHOUT mode
	0        # SPAWN mode
	0        # LISTEN mode
	0        # BROADCAST mode
	0        # SAY mode
	0        # READ mode
	0        # WRITE mode
	0        # KEY-PRESS mode
	0        # SEND mode
	0        # SEND-ENERGY mode

	# Strain 3
	0        # enabled
	""        # strain name these settings were based on
	0        # LOOK mode
	0        # EAT mode
	0        # MAKE-SPORE mode
	0        # MAKE-SPORE energy
	0        # CMOVE mode
	0        # OMOVE mode
	0        # GROW mode
	0        # GROW energy
	0        # GROW size
	0        # ROTATE mode
	0        # CSHIFT mode
	0        # MAKE-ORGANIC mode
	0        # MAKE-BARRIER mode
	0        # EXUDE mode
	0        # SHOUT mode
	0        # SPAWN mode
	0        # LISTEN mode
	0        # BROADCAST mode
	0        # SAY mode
	0        # READ mode
	0        # WRITE mode
	0        # KEY-PRESS mode
	0        # SEND mode
	0        # SEND-ENERGY mode

	# Strain 4
	0        # enabled
	""        # strain name these settings were based on
	0        # LOOK mode
	0        # EAT mode
	0        # MAKE-SPORE mode
	0        # MAKE-SPORE energy
	0        # CMOVE mode
	0        # OMOVE mode
	0        # GROW mode
	0        # GROW energy
	0        # GROW size
	0        # ROTATE mode
	0        # CSHIFT mode
	0        # MAKE-ORGANIC mode
	0        # MAKE-BARRIER mode
	0        # EXUDE mode
	0        # SHOUT mode
	0        # SPAWN mode
	0        # LISTEN mode
	0        # BROADCAST mode
	0        # SAY mode
	0        # READ mode
	0        # WRITE mode
	0        # KEY-PRESS mode
	0        # SEND mode
	0        # SEND-ENERGY mode

	# Strain 5
	1        # enabled
	"bullet2"        # strain name these settings were based on
	1        # LOOK mode
	520        # EAT mode
	0        # MAKE-SPORE mode
	0        # MAKE-SPORE energy
	0        # CMOVE mode
	0        # OMOVE mode
	0        # GROW mode
	0        # GROW energy
	0        # GROW size
	1        # ROTATE mode
	0        # CSHIFT mode
	0        # MAKE-ORGANIC mode
	0        # MAKE-BARRIER mode
	0        # EXUDE mode
	0        # SHOUT mode
	0        # SPAWN mode
	0        # LISTEN mode
	0        # BROADCAST mode
	0        # SAY mode
	0        # READ mode
	0        # WRITE mode
	0        # KEY-PRESS mode
	0        # SEND mode
	1024        # SEND-ENERGY mode

	# Strain 6
	0        # enabled
	""        # strain name these settings were based on
	0        # LOOK mode
	0        # EAT mode
	0        # MAKE-SPORE mode
	0        # MAKE-SPORE energy
	0        # CMOVE mode
	0        # OMOVE mode
	0        # GROW mode
	0        # GROW energy
	0        # GROW size
	0        # ROTATE mode
	0        # CSHIFT mode
	0        # MAKE-ORGANIC mode
	0        # MAKE-BARRIER mode
	0        # EXUDE mode
	0        # SHOUT mode
	0        # SPAWN mode
	0        # LISTEN mode
	0        # BROADCAST mode
	0        # SAY mode
	0        # READ mode
	0        # WRITE mode
	0        # KEY-PRESS mode
	0        # SEND mode
	0        # SEND-ENERGY mode

	# Strain 7
	0        # enabled
	""        # strain name these settings were based on
	0        # LOOK mode
	0        # EAT mode
	0        # MAKE-SPORE mode
	0        # MAKE-SPORE energy
	0        # CMOVE mode
	0        # OMOVE mode
	0        # GROW mode
	0        # GROW energy
	0        # GROW size
	0        # ROTATE mode
	0        # CSHIFT mode
	0        # MAKE-ORGANIC mode
	0        # MAKE-BARRIER mode
	0        # EXUDE mode
	0        # SHOUT mode
	0        # SPAWN mode
	0        # LISTEN mode
	0        # BROADCAST mode
	0        # SAY mode
	0        # READ mode
	0        # WRITE mode
	0        # KEY-PRESS mode
	0        # SEND mode
	0        # SEND-ENERGY mode

}


KFMO {
	# Strain 0
	10		# max apply
	2500		# prob. mutate codeblock
	200		# prob_duplicate
	400		# prob_delete
	200		# prob_insert
	200		# prob_transpose
	200		# prob_modify
	0		# merge_mode
	4		# xlen 
	11		# protected_codeblocks 
	50		# max_code_blocks 

	# Strain 1
	10		# max apply
	2500		# prob. mutate codeblock
	200		# prob_duplicate
	400		# prob_delete
	200		# prob_insert
	200		# prob_transpose
	200		# prob_modify
	0		# merge_mode
	4		# xlen 
	0		# protected_codeblocks 
	100		# max_code_blocks 

	# Strain 2
	10		# max apply
	2500		# prob. mutate codeblock
	200		# prob_duplicate
	400		# prob_delete
	200		# prob_insert
	200		# prob_transpose
	200		# prob_modify
	0		# merge_mode
	4		# xlen 
	0		# protected_codeblocks 
	100		# max_code_blocks 

	# Strain 3
	10		# max apply
	2500		# prob. mutate codeblock
	200		# prob_duplicate
	400		# prob_delete
	200		# prob_insert
	200		# prob_transpose
	200		# prob_modify
	0		# merge_mode
	4		# xlen 
	0		# protected_codeblocks 
	100		# max_code_blocks 

	# Strain 4
	10		# max apply
	2500		# prob. mutate codeblock
	200		# prob_duplicate
	400		# prob_delete
	200		# prob_insert
	200		# prob_transpose
	200		# prob_modify
	0		# merge_mode
	4		# xlen 
	0		# protected_codeblocks 
	100		# max_code_blocks 

	# Strain 5
	10		# max apply
	2500		# prob. mutate codeblock
	200		# prob_duplicate
	400		# prob_delete
	200		# prob_insert
	200		# prob_transpose
	200		# prob_modify
	0		# merge_mode
	4		# xlen 
	0		# protected_codeblocks 
	100		# max_code_blocks 

	# Strain 6
	10		# max apply
	2500		# prob. mutate codeblock
	200		# prob_duplicate
	400		# prob_delete
	200		# prob_insert
	200		# prob_transpose
	200		# prob_modify
	0		# merge_mode
	4		# xlen 
	0		# protected_codeblocks 
	100		# max_code_blocks 

	# Strain 7
	10		# max apply
	2500		# prob. mutate codeblock
	200		# prob_duplicate
	400		# prob_delete
	200		# prob_insert
	200		# prob_transpose
	200		# prob_modify
	0		# merge_mode
	4		# xlen 
	0		# protected_codeblocks 
	100		# max_code_blocks 

}


STRAIN_OPCODES {

	4  # number of protected instructions at start of table
	# instruction table for strain 0
	{
		"MAKE-BARRIER"      			# opcode 0
		"BROADCAST"         			# opcode 1
		"SAY"               			# opcode 2
		"SPAWN"             			# opcode 3
		"call"              			# opcode 4
		"if"                			# opcode 5
		"ifelse"            			# opcode 6
		"?loop"             			# opcode 7
		"?exit"             			# opcode 8
		"pop"               			# opcode 9
		"dup"               			# opcode 10
		"swap"              			# opcode 11
		"over"              			# opcode 12
		"rot"               			# opcode 13
		"?dup"              			# opcode 14
		"-rot"              			# opcode 15
		"2swap"             			# opcode 16
		"2over"             			# opcode 17
		"2dup"              			# opcode 18
		"2pop"              			# opcode 19
		"nip"               			# opcode 20
		"tuck"              			# opcode 21
		"1+"                			# opcode 22
		"1-"                			# opcode 23
		"2+"                			# opcode 24
		"2-"                			# opcode 25
		"2/"                			# opcode 26
		"2*"                			# opcode 27
		"abs"               			# opcode 28
		"sqrt"              			# opcode 29
		"+"                 			# opcode 30
		"-"                 			# opcode 31
		"*"                 			# opcode 32
		"/"                 			# opcode 33
		"mod"               			# opcode 34
		"/mod"              			# opcode 35
		"negate"            			# opcode 36
		"2negate"           			# opcode 37
		"<<"                			# opcode 38
		">>"                			# opcode 39
		"="                 			# opcode 40
		"<>"                			# opcode 41
		"<"                 			# opcode 42
		">"                 			# opcode 43
		"<="                			# opcode 44
		">="                			# opcode 45
		"0="                			# opcode 46
		"or"                			# opcode 47
		"and"               			# opcode 48
		"not"               			# opcode 49
		"invert"            			# opcode 50
		"xor"               			# opcode 51
		"min"               			# opcode 52
		"max"               			# opcode 53
		"CB"                			# opcode 54
		"CBLEN"             			# opcode 55
		"CSLEN"             			# opcode 56
		"DSLEN"             			# opcode 57
		"R0"                			# opcode 58
		"R1"                			# opcode 59
		"R2"                			# opcode 60
		"R3"                			# opcode 61
		"R4"                			# opcode 62
		"R5"                			# opcode 63
		"R6"                			# opcode 64
		"R7"                			# opcode 65
		"R8"                			# opcode 66
		"R9"                			# opcode 67
		"R0!"               			# opcode 68
		"R1!"               			# opcode 69
		"R2!"               			# opcode 70
		"R3!"               			# opcode 71
		"R4!"               			# opcode 72
		"R5!"               			# opcode 73
		"R6!"               			# opcode 74
		"R7!"               			# opcode 75
		"R8!"               			# opcode 76
		"R9!"               			# opcode 77
		"R0++"              			# opcode 78
		"R1++"              			# opcode 79
		"R2++"              			# opcode 80
		"R3++"              			# opcode 81
		"R4++"              			# opcode 82
		"R5++"              			# opcode 83
		"R6++"              			# opcode 84
		"R7++"              			# opcode 85
		"R8++"              			# opcode 86
		"R9++"              			# opcode 87
		"--R0"              			# opcode 88
		"--R1"              			# opcode 89
		"--R2"              			# opcode 90
		"--R3"              			# opcode 91
		"--R4"              			# opcode 92
		"--R5"              			# opcode 93
		"--R6"              			# opcode 94
		"--R7"              			# opcode 95
		"--R8"              			# opcode 96
		"--R9"              			# opcode 97
		"PEEK"              			# opcode 98
		"POKE"              			# opcode 99
		"NUMBER"            			# opcode 100
		"NUMBER!"           			# opcode 101
		"?NUMBER!"          			# opcode 102
		"OPCODE"            			# opcode 103
		"OPCODE!"           			# opcode 104
		"OPCODE'"           			# opcode 105
		"TRAP1"             			# opcode 106
		"TRAP2"             			# opcode 107
		"TRAP3"             			# opcode 108
		"TRAP4"             			# opcode 109
		"TRAP5"             			# opcode 110
		"TRAP6"             			# opcode 111
		"TRAP7"             			# opcode 112
		"TRAP8"             			# opcode 113
		"TRAP9"             			# opcode 114
		"sign"              			# opcode 115
		"pack2"             			# opcode 116
		"unpack2"           			# opcode 117
		"MAX_INT"           			# opcode 118
		"MIN_INT"           			# opcode 119
		"HALT"              			# opcode 120
		"nop"               			# opcode 121
		"CMOVE"             			# opcode 122
		"OMOVE"             			# opcode 123
		"ROTATE"            			# opcode 124
		"EAT"               			# opcode 125
		"MAKE-SPORE"        			# opcode 126
		"MAKE-ORGANIC"      			# opcode 127
		"GROW"              			# opcode 128
		"GROW.CB"           			# opcode 129
		"CSHIFT"            			# opcode 130
		"EXUDE"             			# opcode 131
		"LOOK"              			# opcode 132
		"NEAREST"           			# opcode 133
		"FARTHEST"          			# opcode 134
		"SIZE"              			# opcode 135
		"BIGGEST"           			# opcode 136
		"SMALLEST"          			# opcode 137
		"TEMPERATURE"       			# opcode 138
		"HOTTEST"           			# opcode 139
		"COLDEST"           			# opcode 140
		"SMELL"             			# opcode 141
		"MOOD"              			# opcode 142
		"MOOD!"             			# opcode 143
		"SEND"              			# opcode 144
		"RECV"              			# opcode 145
		"ENERGY"            			# opcode 146
		"AGE"               			# opcode 147
		"NUM-CELLS"         			# opcode 148
		"HAS-NEIGHBOR"      			# opcode 149
		"DIST"              			# opcode 150
		"CHOOSE"            			# opcode 151
		"RND"               			# opcode 152
		"SEND-ENERGY"       			# opcode 153
		"POPULATION"        			# opcode 154
		"POPULATION.S"      			# opcode 155
		"GPS"               			# opcode 156
		"NEIGHBORS"         			# opcode 157
		"SHOUT"             			# opcode 158
		"LISTEN"            			# opcode 159
		"READ"              			# opcode 160
		"WRITE"             			# opcode 161
		"KEY-PRESS"         			# opcode 162
		"MOUSE-POS"         			# opcode 163
		"S0"                			# opcode 164
		"S0!"               			# opcode 165
		"G0"                			# opcode 166
		"G0!"               			# opcode 167
	}

	0  # number of protected instructions at start of table
	# instruction table for strain 1
	{
		"call"              			# opcode 0
		"if"                			# opcode 1
		"ifelse"            			# opcode 2
		"?loop"             			# opcode 3
		"?exit"             			# opcode 4
		"pop"               			# opcode 5
		"dup"               			# opcode 6
		"swap"              			# opcode 7
		"over"              			# opcode 8
		"rot"               			# opcode 9
		"?dup"              			# opcode 10
		"-rot"              			# opcode 11
		"2swap"             			# opcode 12
		"2over"             			# opcode 13
		"2dup"              			# opcode 14
		"2pop"              			# opcode 15
		"nip"               			# opcode 16
		"tuck"              			# opcode 17
		"1+"                			# opcode 18
		"1-"                			# opcode 19
		"2+"                			# opcode 20
		"2-"                			# opcode 21
		"2/"                			# opcode 22
		"2*"                			# opcode 23
		"abs"               			# opcode 24
		"sqrt"              			# opcode 25
		"+"                 			# opcode 26
		"-"                 			# opcode 27
		"*"                 			# opcode 28
		"/"                 			# opcode 29
		"mod"               			# opcode 30
		"/mod"              			# opcode 31
		"negate"            			# opcode 32
		"2negate"           			# opcode 33
		"<<"                			# opcode 34
		">>"                			# opcode 35
		"="                 			# opcode 36
		"<>"                			# opcode 37
		"<"                 			# opcode 38
		">"                 			# opcode 39
		"<="                			# opcode 40
		">="                			# opcode 41
		"0="                			# opcode 42
		"or"                			# opcode 43
		"and"               			# opcode 44
		"not"               			# opcode 45
		"invert"            			# opcode 46
		"xor"               			# opcode 47
		"min"               			# opcode 48
		"max"               			# opcode 49
		"CB"                			# opcode 50
		"CBLEN"             			# opcode 51
		"CSLEN"             			# opcode 52
		"DSLEN"             			# opcode 53
		"R0"                			# opcode 54
		"R1"                			# opcode 55
		"R2"                			# opcode 56
		"R3"                			# opcode 57
		"R4"                			# opcode 58
		"R5"                			# opcode 59
		"R6"                			# opcode 60
		"R7"                			# opcode 61
		"R8"                			# opcode 62
		"R9"                			# opcode 63
		"R0!"               			# opcode 64
		"R1!"               			# opcode 65
		"R2!"               			# opcode 66
		"R3!"               			# opcode 67
		"R4!"               			# opcode 68
		"R5!"               			# opcode 69
		"R6!"               			# opcode 70
		"R7!"               			# opcode 71
		"R8!"               			# opcode 72
		"R9!"               			# opcode 73
		"R0++"              			# opcode 74
		"R1++"              			# opcode 75
		"R2++"              			# opcode 76
		"R3++"              			# opcode 77
		"R4++"              			# opcode 78
		"R5++"              			# opcode 79
		"R6++"              			# opcode 80
		"R7++"              			# opcode 81
		"R8++"              			# opcode 82
		"R9++"              			# opcode 83
		"--R0"              			# opcode 84
		"--R1"              			# opcode 85
		"--R2"              			# opcode 86
		"--R3"              			# opcode 87
		"--R4"              			# opcode 88
		"--R5"              			# opcode 89
		"--R6"              			# opcode 90
		"--R7"              			# opcode 91
		"--R8"              			# opcode 92
		"--R9"              			# opcode 93
		"PEEK"              			# opcode 94
		"POKE"              			# opcode 95
		"NUMBER"            			# opcode 96
		"NUMBER!"           			# opcode 97
		"?NUMBER!"          			# opcode 98
		"OPCODE"            			# opcode 99
		"OPCODE!"           			# opcode 100
		"OPCODE'"           			# opcode 101
		"TRAP1"             			# opcode 102
		"TRAP2"             			# opcode 103
		"TRAP3"             			# opcode 104
		"TRAP4"             			# opcode 105
		"TRAP5"             			# opcode 106
		"TRAP6"             			# opcode 107
		"TRAP7"             			# opcode 108
		"TRAP8"             			# opcode 109
		"TRAP9"             			# opcode 110
		"sign"              			# opcode 111
		"pack2"             			# opcode 112
		"unpack2"           			# opcode 113
		"MAX_INT"           			# opcode 114
		"MIN_INT"           			# opcode 115
		"HALT"              			# opcode 116
		"nop"               			# opcode 117
		"CMOVE"             			# opcode 118
		"OMOVE"             			# opcode 119
		"ROTATE"            			# opcode 120
		"EAT"               			# opcode 121
		"MAKE-SPORE"        			# opcode 122
		"MAKE-ORGANIC"      			# opcode 123
		"MAKE-BARRIER"      			# opcode 124
		"GROW"              			# opcode 125
		"GROW.CB"           			# opcode 126
		"CSHIFT"            			# opcode 127
		"EXUDE"             			# opcode 128
		"LOOK"              			# opcode 129
		"NEAREST"           			# opcode 130
		"FARTHEST"          			# opcode 131
		"SIZE"              			# opcode 132
		"BIGGEST"           			# opcode 133
		"SMALLEST"          			# opcode 134
		"TEMPERATURE"       			# opcode 135
		"HOTTEST"           			# opcode 136
		"COLDEST"           			# opcode 137
		"SMELL"             			# opcode 138
		"MOOD"              			# opcode 139
		"MOOD!"             			# opcode 140
		"BROADCAST"         			# opcode 141
		"SEND"              			# opcode 142
		"RECV"              			# opcode 143
		"ENERGY"            			# opcode 144
		"AGE"               			# opcode 145
		"NUM-CELLS"         			# opcode 146
		"HAS-NEIGHBOR"      			# opcode 147
		"DIST"              			# opcode 148
		"CHOOSE"            			# opcode 149
		"RND"               			# opcode 150
		"SEND-ENERGY"       			# opcode 151
		"POPULATION"        			# opcode 152
		"POPULATION.S"      			# opcode 153
		"GPS"               			# opcode 154
		"NEIGHBORS"         			# opcode 155
		"SHOUT"             			# opcode 156
		"LISTEN"            			# opcode 157
		"SAY"               			# opcode 158
		"READ"              			# opcode 159
		"WRITE"             			# opcode 160
		"KEY-PRESS"         			# opcode 161
		"MOUSE-POS"         			# opcode 162
		"SPAWN"             			# opcode 163
		"S0"                			# opcode 164
		"S0!"               			# opcode 165
		"G0"                			# opcode 166
		"G0!"               			# opcode 167
	}

	0  # number of protected instructions at start of table
	# instruction table for strain 2
	{
		"call"              			# opcode 0
		"if"                			# opcode 1
		"ifelse"            			# opcode 2
		"?loop"             			# opcode 3
		"?exit"             			# opcode 4
		"pop"               			# opcode 5
		"dup"               			# opcode 6
		"swap"              			# opcode 7
		"over"              			# opcode 8
		"rot"               			# opcode 9
		"?dup"              			# opcode 10
		"-rot"              			# opcode 11
		"2swap"             			# opcode 12
		"2over"             			# opcode 13
		"2dup"              			# opcode 14
		"2pop"              			# opcode 15
		"nip"               			# opcode 16
		"tuck"              			# opcode 17
		"1+"                			# opcode 18
		"1-"                			# opcode 19
		"2+"                			# opcode 20
		"2-"                			# opcode 21
		"2/"                			# opcode 22
		"2*"                			# opcode 23
		"abs"               			# opcode 24
		"sqrt"              			# opcode 25
		"+"                 			# opcode 26
		"-"                 			# opcode 27
		"*"                 			# opcode 28
		"/"                 			# opcode 29
		"mod"               			# opcode 30
		"/mod"              			# opcode 31
		"negate"            			# opcode 32
		"2negate"           			# opcode 33
		"<<"                			# opcode 34
		">>"                			# opcode 35
		"="                 			# opcode 36
		"<>"                			# opcode 37
		"<"                 			# opcode 38
		">"                 			# opcode 39
		"<="                			# opcode 40
		">="                			# opcode 41
		"0="                			# opcode 42
		"or"                			# opcode 43
		"and"               			# opcode 44
		"not"               			# opcode 45
		"invert"            			# opcode 46
		"xor"               			# opcode 47
		"min"               			# opcode 48
		"max"               			# opcode 49
		"CB"                			# opcode 50
		"CBLEN"             			# opcode 51
		"CSLEN"             			# opcode 52
		"DSLEN"             			# opcode 53
		"R0"                			# opcode 54
		"R1"                			# opcode 55
		"R2"                			# opcode 56
		"R3"                			# opcode 57
		"R4"                			# opcode 58
		"R5"                			# opcode 59
		"R6"                			# opcode 60
		"R7"                			# opcode 61
		"R8"                			# opcode 62
		"R9"                			# opcode 63
		"R0!"               			# opcode 64
		"R1!"               			# opcode 65
		"R2!"               			# opcode 66
		"R3!"               			# opcode 67
		"R4!"               			# opcode 68
		"R5!"               			# opcode 69
		"R6!"               			# opcode 70
		"R7!"               			# opcode 71
		"R8!"               			# opcode 72
		"R9!"               			# opcode 73
		"R0++"              			# opcode 74
		"R1++"              			# opcode 75
		"R2++"              			# opcode 76
		"R3++"              			# opcode 77
		"R4++"              			# opcode 78
		"R5++"              			# opcode 79
		"R6++"              			# opcode 80
		"R7++"              			# opcode 81
		"R8++"              			# opcode 82
		"R9++"              			# opcode 83
		"--R0"              			# opcode 84
		"--R1"              			# opcode 85
		"--R2"              			# opcode 86
		"--R3"              			# opcode 87
		"--R4"              			# opcode 88
		"--R5"              			# opcode 89
		"--R6"              			# opcode 90
		"--R7"              			# opcode 91
		"--R8"              			# opcode 92
		"--R9"              			# opcode 93
		"PEEK"              			# opcode 94
		"POKE"              			# opcode 95
		"NUMBER"            			# opcode 96
		"NUMBER!"           			# opcode 97
		"?NUMBER!"          			# opcode 98
		"OPCODE"            			# opcode 99
		"OPCODE!"           			# opcode 100
		"OPCODE'"           			# opcode 101
		"TRAP1"             			# opcode 102
		"TRAP2"             			# opcode 103
		"TRAP3"             			# opcode 104
		"TRAP4"             			# opcode 105
		"TRAP5"             			# opcode 106
		"TRAP6"             			# opcode 107
		"TRAP7"             			# opcode 108
		"TRAP8"             			# opcode 109
		"TRAP9"             			# opcode 110
		"sign"              			# opcode 111
		"pack2"             			# opcode 112
		"unpack2"           			# opcode 113
		"MAX_INT"           			# opcode 114
		"MIN_INT"           			# opcode 115
		"HALT"              			# opcode 116
		"nop"               			# opcode 117
		"CMOVE"             			# opcode 118
		"OMOVE"             			# opcode 119
		"ROTATE"            			# opcode 120
		"EAT"               			# opcode 121
		"MAKE-SPORE"        			# opcode 122
		"MAKE-ORGANIC"      			# opcode 123
		"MAKE-BARRIER"      			# opcode 124
		"GROW"              			# opcode 125
		"GROW.CB"           			# opcode 126
		"CSHIFT"            			# opcode 127
		"EXUDE"             			# opcode 128
		"LOOK"              			# opcode 129
		"NEAREST"           			# opcode 130
		"FARTHEST"          			# opcode 131
		"SIZE"              			# opcode 132
		"BIGGEST"           			# opcode 133
		"SMALLEST"          			# opcode 134
		"TEMPERATURE"       			# opcode 135
		"HOTTEST"           			# opcode 136
		"COLDEST"           			# opcode 137
		"SMELL"             			# opcode 138
		"MOOD"              			# opcode 139
		"MOOD!"             			# opcode 140
		"BROADCAST"         			# opcode 141
		"SEND"              			# opcode 142
		"RECV"              			# opcode 143
		"ENERGY"            			# opcode 144
		"AGE"               			# opcode 145
		"NUM-CELLS"         			# opcode 146
		"HAS-NEIGHBOR"      			# opcode 147
		"DIST"              			# opcode 148
		"CHOOSE"            			# opcode 149
		"RND"               			# opcode 150
		"SEND-ENERGY"       			# opcode 151
		"POPULATION"        			# opcode 152
		"POPULATION.S"      			# opcode 153
		"GPS"               			# opcode 154
		"NEIGHBORS"         			# opcode 155
		"SHOUT"             			# opcode 156
		"LISTEN"            			# opcode 157
		"SAY"               			# opcode 158
		"READ"              			# opcode 159
		"WRITE"             			# opcode 160
		"KEY-PRESS"         			# opcode 161
		"MOUSE-POS"         			# opcode 162
		"SPAWN"             			# opcode 163
		"S0"                			# opcode 164
		"S0!"               			# opcode 165
		"G0"                			# opcode 166
		"G0!"               			# opcode 167
	}

	0  # number of protected instructions at start of table
	# instruction table for strain 3
	{
		"call"              			# opcode 0
		"if"                			# opcode 1
		"ifelse"            			# opcode 2
		"?loop"             			# opcode 3
		"?exit"             			# opcode 4
		"pop"               			# opcode 5
		"dup"               			# opcode 6
		"swap"              			# opcode 7
		"over"              			# opcode 8
		"rot"               			# opcode 9
		"?dup"              			# opcode 10
		"-rot"              			# opcode 11
		"2swap"             			# opcode 12
		"2over"             			# opcode 13
		"2dup"              			# opcode 14
		"2pop"              			# opcode 15
		"nip"               			# opcode 16
		"tuck"              			# opcode 17
		"1+"                			# opcode 18
		"1-"                			# opcode 19
		"2+"                			# opcode 20
		"2-"                			# opcode 21
		"2/"                			# opcode 22
		"2*"                			# opcode 23
		"abs"               			# opcode 24
		"sqrt"              			# opcode 25
		"+"                 			# opcode 26
		"-"                 			# opcode 27
		"*"                 			# opcode 28
		"/"                 			# opcode 29
		"mod"               			# opcode 30
		"/mod"              			# opcode 31
		"negate"            			# opcode 32
		"2negate"           			# opcode 33
		"<<"                			# opcode 34
		">>"                			# opcode 35
		"="                 			# opcode 36
		"<>"                			# opcode 37
		"<"                 			# opcode 38
		">"                 			# opcode 39
		"<="                			# opcode 40
		">="                			# opcode 41
		"0="                			# opcode 42
		"or"                			# opcode 43
		"and"               			# opcode 44
		"not"               			# opcode 45
		"invert"            			# opcode 46
		"xor"               			# opcode 47
		"min"               			# opcode 48
		"max"               			# opcode 49
		"CB"                			# opcode 50
		"CBLEN"             			# opcode 51
		"CSLEN"             			# opcode 52
		"DSLEN"             			# opcode 53
		"R0"                			# opcode 54
		"R1"                			# opcode 55
		"R2"                			# opcode 56
		"R3"                			# opcode 57
		"R4"                			# opcode 58
		"R5"                			# opcode 59
		"R6"                			# opcode 60
		"R7"                			# opcode 61
		"R8"                			# opcode 62
		"R9"                			# opcode 63
		"R0!"               			# opcode 64
		"R1!"               			# opcode 65
		"R2!"               			# opcode 66
		"R3!"               			# opcode 67
		"R4!"               			# opcode 68
		"R5!"               			# opcode 69
		"R6!"               			# opcode 70
		"R7!"               			# opcode 71
		"R8!"               			# opcode 72
		"R9!"               			# opcode 73
		"R0++"              			# opcode 74
		"R1++"              			# opcode 75
		"R2++"              			# opcode 76
		"R3++"              			# opcode 77
		"R4++"              			# opcode 78
		"R5++"              			# opcode 79
		"R6++"              			# opcode 80
		"R7++"              			# opcode 81
		"R8++"              			# opcode 82
		"R9++"              			# opcode 83
		"--R0"              			# opcode 84
		"--R1"              			# opcode 85
		"--R2"              			# opcode 86
		"--R3"              			# opcode 87
		"--R4"              			# opcode 88
		"--R5"              			# opcode 89
		"--R6"              			# opcode 90
		"--R7"              			# opcode 91
		"--R8"              			# opcode 92
		"--R9"              			# opcode 93
		"PEEK"              			# opcode 94
		"POKE"              			# opcode 95
		"NUMBER"            			# opcode 96
		"NUMBER!"           			# opcode 97
		"?NUMBER!"          			# opcode 98
		"OPCODE"            			# opcode 99
		"OPCODE!"           			# opcode 100
		"OPCODE'"           			# opcode 101
		"TRAP1"             			# opcode 102
		"TRAP2"             			# opcode 103
		"TRAP3"             			# opcode 104
		"TRAP4"             			# opcode 105
		"TRAP5"             			# opcode 106
		"TRAP6"             			# opcode 107
		"TRAP7"             			# opcode 108
		"TRAP8"             			# opcode 109
		"TRAP9"             			# opcode 110
		"sign"              			# opcode 111
		"pack2"             			# opcode 112
		"unpack2"           			# opcode 113
		"MAX_INT"           			# opcode 114
		"MIN_INT"           			# opcode 115
		"HALT"              			# opcode 116
		"nop"               			# opcode 117
		"CMOVE"             			# opcode 118
		"OMOVE"             			# opcode 119
		"ROTATE"            			# opcode 120
		"EAT"               			# opcode 121
		"MAKE-SPORE"        			# opcode 122
		"MAKE-ORGANIC"      			# opcode 123
		"MAKE-BARRIER"      			# opcode 124
		"GROW"              			# opcode 125
		"GROW.CB"           			# opcode 126
		"CSHIFT"            			# opcode 127
		"EXUDE"             			# opcode 128
		"LOOK"              			# opcode 129
		"NEAREST"           			# opcode 130
		"FARTHEST"          			# opcode 131
		"SIZE"              			# opcode 132
		"BIGGEST"           			# opcode 133
		"SMALLEST"          			# opcode 134
		"TEMPERATURE"       			# opcode 135
		"HOTTEST"           			# opcode 136
		"COLDEST"           			# opcode 137
		"SMELL"             			# opcode 138
		"MOOD"              			# opcode 139
		"MOOD!"             			# opcode 140
		"BROADCAST"         			# opcode 141
		"SEND"              			# opcode 142
		"RECV"              			# opcode 143
		"ENERGY"            			# opcode 144
		"AGE"               			# opcode 145
		"NUM-CELLS"         			# opcode 146
		"HAS-NEIGHBOR"      			# opcode 147
		"DIST"              			# opcode 148
		"CHOOSE"            			# opcode 149
		"RND"               			# opcode 150
		"SEND-ENERGY"       			# opcode 151
		"POPULATION"        			# opcode 152
		"POPULATION.S"      			# opcode 153
		"GPS"               			# opcode 154
		"NEIGHBORS"         			# opcode 155
		"SHOUT"             			# opcode 156
		"LISTEN"            			# opcode 157
		"SAY"               			# opcode 158
		"READ"              			# opcode 159
		"WRITE"             			# opcode 160
		"KEY-PRESS"         			# opcode 161
		"MOUSE-POS"         			# opcode 162
		"SPAWN"             			# opcode 163
		"S0"                			# opcode 164
		"S0!"               			# opcode 165
		"G0"                			# opcode 166
		"G0!"               			# opcode 167
	}

	0  # number of protected instructions at start of table
	# instruction table for strain 4
	{
		"call"              			# opcode 0
		"if"                			# opcode 1
		"ifelse"            			# opcode 2
		"?loop"             			# opcode 3
		"?exit"             			# opcode 4
		"pop"               			# opcode 5
		"dup"               			# opcode 6
		"swap"              			# opcode 7
		"over"              			# opcode 8
		"rot"               			# opcode 9
		"?dup"              			# opcode 10
		"-rot"              			# opcode 11
		"2swap"             			# opcode 12
		"2over"             			# opcode 13
		"2dup"              			# opcode 14
		"2pop"              			# opcode 15
		"nip"               			# opcode 16
		"tuck"              			# opcode 17
		"1+"                			# opcode 18
		"1-"                			# opcode 19
		"2+"                			# opcode 20
		"2-"                			# opcode 21
		"2/"                			# opcode 22
		"2*"                			# opcode 23
		"abs"               			# opcode 24
		"sqrt"              			# opcode 25
		"+"                 			# opcode 26
		"-"                 			# opcode 27
		"*"                 			# opcode 28
		"/"                 			# opcode 29
		"mod"               			# opcode 30
		"/mod"              			# opcode 31
		"negate"            			# opcode 32
		"2negate"           			# opcode 33
		"<<"                			# opcode 34
		">>"                			# opcode 35
		"="                 			# opcode 36
		"<>"                			# opcode 37
		"<"                 			# opcode 38
		">"                 			# opcode 39
		"<="                			# opcode 40
		">="                			# opcode 41
		"0="                			# opcode 42
		"or"                			# opcode 43
		"and"               			# opcode 44
		"not"               			# opcode 45
		"invert"            			# opcode 46
		"xor"               			# opcode 47
		"min"               			# opcode 48
		"max"               			# opcode 49
		"CB"                			# opcode 50
		"CBLEN"             			# opcode 51
		"CSLEN"             			# opcode 52
		"DSLEN"             			# opcode 53
		"R0"                			# opcode 54
		"R1"                			# opcode 55
		"R2"                			# opcode 56
		"R3"                			# opcode 57
		"R4"                			# opcode 58
		"R5"                			# opcode 59
		"R6"                			# opcode 60
		"R7"                			# opcode 61
		"R8"                			# opcode 62
		"R9"                			# opcode 63
		"R0!"               			# opcode 64
		"R1!"               			# opcode 65
		"R2!"               			# opcode 66
		"R3!"               			# opcode 67
		"R4!"               			# opcode 68
		"R5!"               			# opcode 69
		"R6!"               			# opcode 70
		"R7!"               			# opcode 71
		"R8!"               			# opcode 72
		"R9!"               			# opcode 73
		"R0++"              			# opcode 74
		"R1++"              			# opcode 75
		"R2++"              			# opcode 76
		"R3++"              			# opcode 77
		"R4++"              			# opcode 78
		"R5++"              			# opcode 79
		"R6++"              			# opcode 80
		"R7++"              			# opcode 81
		"R8++"              			# opcode 82
		"R9++"              			# opcode 83
		"--R0"              			# opcode 84
		"--R1"              			# opcode 85
		"--R2"              			# opcode 86
		"--R3"              			# opcode 87
		"--R4"              			# opcode 88
		"--R5"              			# opcode 89
		"--R6"              			# opcode 90
		"--R7"              			# opcode 91
		"--R8"              			# opcode 92
		"--R9"              			# opcode 93
		"PEEK"              			# opcode 94
		"POKE"              			# opcode 95
		"NUMBER"            			# opcode 96
		"NUMBER!"           			# opcode 97
		"?NUMBER!"          			# opcode 98
		"OPCODE"            			# opcode 99
		"OPCODE!"           			# opcode 100
		"OPCODE'"           			# opcode 101
		"TRAP1"             			# opcode 102
		"TRAP2"             			# opcode 103
		"TRAP3"             			# opcode 104
		"TRAP4"             			# opcode 105
		"TRAP5"             			# opcode 106
		"TRAP6"             			# opcode 107
		"TRAP7"             			# opcode 108
		"TRAP8"             			# opcode 109
		"TRAP9"             			# opcode 110
		"sign"              			# opcode 111
		"pack2"             			# opcode 112
		"unpack2"           			# opcode 113
		"MAX_INT"           			# opcode 114
		"MIN_INT"           			# opcode 115
		"HALT"              			# opcode 116
		"nop"               			# opcode 117
		"CMOVE"             			# opcode 118
		"OMOVE"             			# opcode 119
		"ROTATE"            			# opcode 120
		"EAT"               			# opcode 121
		"MAKE-SPORE"        			# opcode 122
		"MAKE-ORGANIC"      			# opcode 123
		"MAKE-BARRIER"      			# opcode 124
		"GROW"              			# opcode 125
		"GROW.CB"           			# opcode 126
		"CSHIFT"            			# opcode 127
		"EXUDE"             			# opcode 128
		"LOOK"              			# opcode 129
		"NEAREST"           			# opcode 130
		"FARTHEST"          			# opcode 131
		"SIZE"              			# opcode 132
		"BIGGEST"           			# opcode 133
		"SMALLEST"          			# opcode 134
		"TEMPERATURE"       			# opcode 135
		"HOTTEST"           			# opcode 136
		"COLDEST"           			# opcode 137
		"SMELL"             			# opcode 138
		"MOOD"              			# opcode 139
		"MOOD!"             			# opcode 140
		"BROADCAST"         			# opcode 141
		"SEND"              			# opcode 142
		"RECV"              			# opcode 143
		"ENERGY"            			# opcode 144
		"AGE"               			# opcode 145
		"NUM-CELLS"         			# opcode 146
		"HAS-NEIGHBOR"      			# opcode 147
		"DIST"              			# opcode 148
		"CHOOSE"            			# opcode 149
		"RND"               			# opcode 150
		"SEND-ENERGY"       			# opcode 151
		"POPULATION"        			# opcode 152
		"POPULATION.S"      			# opcode 153
		"GPS"               			# opcode 154
		"NEIGHBORS"         			# opcode 155
		"SHOUT"             			# opcode 156
		"LISTEN"            			# opcode 157
		"SAY"               			# opcode 158
		"READ"              			# opcode 159
		"WRITE"             			# opcode 160
		"KEY-PRESS"         			# opcode 161
		"MOUSE-POS"         			# opcode 162
		"SPAWN"             			# opcode 163
		"S0"                			# opcode 164
		"S0!"               			# opcode 165
		"G0"                			# opcode 166
		"G0!"               			# opcode 167
	}

	2  # number of protected instructions at start of table
	# instruction table for strain 5
	{
		"MAKE-BARRIER"      			# opcode 0
		"SPAWN"             			# opcode 1
		"call"              			# opcode 2
		"if"                			# opcode 3
		"ifelse"            			# opcode 4
		"?loop"             			# opcode 5
		"?exit"             			# opcode 6
		"pop"               			# opcode 7
		"dup"               			# opcode 8
		"swap"              			# opcode 9
		"over"              			# opcode 10
		"rot"               			# opcode 11
		"?dup"              			# opcode 12
		"-rot"              			# opcode 13
		"2swap"             			# opcode 14
		"2over"             			# opcode 15
		"2dup"              			# opcode 16
		"2pop"              			# opcode 17
		"nip"               			# opcode 18
		"tuck"              			# opcode 19
		"1+"                			# opcode 20
		"1-"                			# opcode 21
		"2+"                			# opcode 22
		"2-"                			# opcode 23
		"2/"                			# opcode 24
		"2*"                			# opcode 25
		"abs"               			# opcode 26
		"sqrt"              			# opcode 27
		"+"                 			# opcode 28
		"-"                 			# opcode 29
		"*"                 			# opcode 30
		"/"                 			# opcode 31
		"mod"               			# opcode 32
		"/mod"              			# opcode 33
		"negate"            			# opcode 34
		"2negate"           			# opcode 35
		"<<"                			# opcode 36
		">>"                			# opcode 37
		"="                 			# opcode 38
		"<>"                			# opcode 39
		"<"                 			# opcode 40
		">"                 			# opcode 41
		"<="                			# opcode 42
		">="                			# opcode 43
		"0="                			# opcode 44
		"or"                			# opcode 45
		"and"               			# opcode 46
		"not"               			# opcode 47
		"invert"            			# opcode 48
		"xor"               			# opcode 49
		"min"               			# opcode 50
		"max"               			# opcode 51
		"CB"                			# opcode 52
		"CBLEN"             			# opcode 53
		"CSLEN"             			# opcode 54
		"DSLEN"             			# opcode 55
		"R0"                			# opcode 56
		"R1"                			# opcode 57
		"R2"                			# opcode 58
		"R3"                			# opcode 59
		"R4"                			# opcode 60
		"R5"                			# opcode 61
		"R6"                			# opcode 62
		"R7"                			# opcode 63
		"R8"                			# opcode 64
		"R9"                			# opcode 65
		"R0!"               			# opcode 66
		"R1!"               			# opcode 67
		"R2!"               			# opcode 68
		"R3!"               			# opcode 69
		"R4!"               			# opcode 70
		"R5!"               			# opcode 71
		"R6!"               			# opcode 72
		"R7!"               			# opcode 73
		"R8!"               			# opcode 74
		"R9!"               			# opcode 75
		"R0++"              			# opcode 76
		"R1++"              			# opcode 77
		"R2++"              			# opcode 78
		"R3++"              			# opcode 79
		"R4++"              			# opcode 80
		"R5++"              			# opcode 81
		"R6++"              			# opcode 82
		"R7++"              			# opcode 83
		"R8++"              			# opcode 84
		"R9++"              			# opcode 85
		"--R0"              			# opcode 86
		"--R1"              			# opcode 87
		"--R2"              			# opcode 88
		"--R3"              			# opcode 89
		"--R4"              			# opcode 90
		"--R5"              			# opcode 91
		"--R6"              			# opcode 92
		"--R7"              			# opcode 93
		"--R8"              			# opcode 94
		"--R9"              			# opcode 95
		"PEEK"              			# opcode 96
		"POKE"              			# opcode 97
		"NUMBER"            			# opcode 98
		"NUMBER!"           			# opcode 99
		"?NUMBER!"          			# opcode 100
		"OPCODE"            			# opcode 101
		"OPCODE!"           			# opcode 102
		"OPCODE'"           			# opcode 103
		"TRAP1"             			# opcode 104
		"TRAP2"             			# opcode 105
		"TRAP3"             			# opcode 106
		"TRAP4"             			# opcode 107
		"TRAP5"             			# opcode 108
		"TRAP6"             			# opcode 109
		"TRAP7"             			# opcode 110
		"TRAP8"             			# opcode 111
		"TRAP9"             			# opcode 112
		"sign"              			# opcode 113
		"pack2"             			# opcode 114
		"unpack2"           			# opcode 115
		"MAX_INT"           			# opcode 116
		"MIN_INT"           			# opcode 117
		"HALT"              			# opcode 118
		"nop"               			# opcode 119
		"CMOVE"             			# opcode 120
		"OMOVE"             			# opcode 121
		"ROTATE"            			# opcode 122
		"EAT"               			# opcode 123
		"MAKE-SPORE"        			# opcode 124
		"MAKE-ORGANIC"      			# opcode 125
		"GROW"              			# opcode 126
		"GROW.CB"           			# opcode 127
		"CSHIFT"            			# opcode 128
		"EXUDE"             			# opcode 129
		"LOOK"              			# opcode 130
		"NEAREST"           			# opcode 131
		"FARTHEST"          			# opcode 132
		"SIZE"              			# opcode 133
		"BIGGEST"           			# opcode 134
		"SMALLEST"          			# opcode 135
		"TEMPERATURE"       			# opcode 136
		"HOTTEST"           			# opcode 137
		"COLDEST"           			# opcode 138
		"SMELL"             			# opcode 139
		"MOOD"              			# opcode 140
		"MOOD!"             			# opcode 141
		"BROADCAST"         			# opcode 142
		"SEND"              			# opcode 143
		"RECV"              			# opcode 144
		"ENERGY"            			# opcode 145
		"AGE"               			# opcode 146
		"NUM-CELLS"         			# opcode 147
		"HAS-NEIGHBOR"      			# opcode 148
		"DIST"              			# opcode 149
		"CHOOSE"            			# opcode 150
		"RND"               			# opcode 151
		"SEND-ENERGY"       			# opcode 152
		"POPULATION"        			# opcode 153
		"POPULATION.S"      			# opcode 154
		"GPS"               			# opcode 155
		"NEIGHBORS"         			# opcode 156
		"SHOUT"             			# opcode 157
		"LISTEN"            			# opcode 158
		"SAY"               			# opcode 159
		"READ"              			# opcode 160
		"WRITE"             			# opcode 161
		"KEY-PRESS"         			# opcode 162
		"MOUSE-POS"         			# opcode 163
		"S0"                			# opcode 164
		"S0!"               			# opcode 165
		"G0"                			# opcode 166
		"G0!"               			# opcode 167
	}

	0  # number of protected instructions at start of table
	# instruction table for strain 6
	{
		"call"              			# opcode 0
		"if"                			# opcode 1
		"ifelse"            			# opcode 2
		"?loop"             			# opcode 3
		"?exit"             			# opcode 4
		"pop"               			# opcode 5
		"dup"               			# opcode 6
		"swap"              			# opcode 7
		"over"              			# opcode 8
		"rot"               			# opcode 9
		"?dup"              			# opcode 10
		"-rot"              			# opcode 11
		"2swap"             			# opcode 12
		"2over"             			# opcode 13
		"2dup"              			# opcode 14
		"2pop"              			# opcode 15
		"nip"               			# opcode 16
		"tuck"              			# opcode 17
		"1+"                			# opcode 18
		"1-"                			# opcode 19
		"2+"                			# opcode 20
		"2-"                			# opcode 21
		"2/"                			# opcode 22
		"2*"                			# opcode 23
		"abs"               			# opcode 24
		"sqrt"              			# opcode 25
		"+"                 			# opcode 26
		"-"                 			# opcode 27
		"*"                 			# opcode 28
		"/"                 			# opcode 29
		"mod"               			# opcode 30
		"/mod"              			# opcode 31
		"negate"            			# opcode 32
		"2negate"           			# opcode 33
		"<<"                			# opcode 34
		">>"                			# opcode 35
		"="                 			# opcode 36
		"<>"                			# opcode 37
		"<"                 			# opcode 38
		">"                 			# opcode 39
		"<="                			# opcode 40
		">="                			# opcode 41
		"0="                			# opcode 42
		"or"                			# opcode 43
		"and"               			# opcode 44
		"not"               			# opcode 45
		"invert"            			# opcode 46
		"xor"               			# opcode 47
		"min"               			# opcode 48
		"max"               			# opcode 49
		"CB"                			# opcode 50
		"CBLEN"             			# opcode 51
		"CSLEN"             			# opcode 52
		"DSLEN"             			# opcode 53
		"R0"                			# opcode 54
		"R1"                			# opcode 55
		"R2"                			# opcode 56
		"R3"                			# opcode 57
		"R4"                			# opcode 58
		"R5"                			# opcode 59
		"R6"                			# opcode 60
		"R7"                			# opcode 61
		"R8"                			# opcode 62
		"R9"                			# opcode 63
		"R0!"               			# opcode 64
		"R1!"               			# opcode 65
		"R2!"               			# opcode 66
		"R3!"               			# opcode 67
		"R4!"               			# opcode 68
		"R5!"               			# opcode 69
		"R6!"               			# opcode 70
		"R7!"               			# opcode 71
		"R8!"               			# opcode 72
		"R9!"               			# opcode 73
		"R0++"              			# opcode 74
		"R1++"              			# opcode 75
		"R2++"              			# opcode 76
		"R3++"              			# opcode 77
		"R4++"              			# opcode 78
		"R5++"              			# opcode 79
		"R6++"              			# opcode 80
		"R7++"              			# opcode 81
		"R8++"              			# opcode 82
		"R9++"              			# opcode 83
		"--R0"              			# opcode 84
		"--R1"              			# opcode 85
		"--R2"              			# opcode 86
		"--R3"              			# opcode 87
		"--R4"              			# opcode 88
		"--R5"              			# opcode 89
		"--R6"              			# opcode 90
		"--R7"              			# opcode 91
		"--R8"              			# opcode 92
		"--R9"              			# opcode 93
		"PEEK"              			# opcode 94
		"POKE"              			# opcode 95
		"NUMBER"            			# opcode 96
		"NUMBER!"           			# opcode 97
		"?NUMBER!"          			# opcode 98
		"OPCODE"            			# opcode 99
		"OPCODE!"           			# opcode 100
		"OPCODE'"           			# opcode 101
		"TRAP1"             			# opcode 102
		"TRAP2"             			# opcode 103
		"TRAP3"             			# opcode 104
		"TRAP4"             			# opcode 105
		"TRAP5"             			# opcode 106
		"TRAP6"             			# opcode 107
		"TRAP7"             			# opcode 108
		"TRAP8"             			# opcode 109
		"TRAP9"             			# opcode 110
		"sign"              			# opcode 111
		"pack2"             			# opcode 112
		"unpack2"           			# opcode 113
		"MAX_INT"           			# opcode 114
		"MIN_INT"           			# opcode 115
		"HALT"              			# opcode 116
		"nop"               			# opcode 117
		"CMOVE"             			# opcode 118
		"OMOVE"             			# opcode 119
		"ROTATE"            			# opcode 120
		"EAT"               			# opcode 121
		"MAKE-SPORE"        			# opcode 122
		"MAKE-ORGANIC"      			# opcode 123
		"MAKE-BARRIER"      			# opcode 124
		"GROW"              			# opcode 125
		"GROW.CB"           			# opcode 126
		"CSHIFT"            			# opcode 127
		"EXUDE"             			# opcode 128
		"LOOK"              			# opcode 129
		"NEAREST"           			# opcode 130
		"FARTHEST"          			# opcode 131
		"SIZE"              			# opcode 132
		"BIGGEST"           			# opcode 133
		"SMALLEST"          			# opcode 134
		"TEMPERATURE"       			# opcode 135
		"HOTTEST"           			# opcode 136
		"COLDEST"           			# opcode 137
		"SMELL"             			# opcode 138
		"MOOD"              			# opcode 139
		"MOOD!"             			# opcode 140
		"BROADCAST"         			# opcode 141
		"SEND"              			# opcode 142
		"RECV"              			# opcode 143
		"ENERGY"            			# opcode 144
		"AGE"               			# opcode 145
		"NUM-CELLS"         			# opcode 146
		"HAS-NEIGHBOR"      			# opcode 147
		"DIST"              			# opcode 148
		"CHOOSE"            			# opcode 149
		"RND"               			# opcode 150
		"SEND-ENERGY"       			# opcode 151
		"POPULATION"        			# opcode 152
		"POPULATION.S"      			# opcode 153
		"GPS"               			# opcode 154
		"NEIGHBORS"         			# opcode 155
		"SHOUT"             			# opcode 156
		"LISTEN"            			# opcode 157
		"SAY"               			# opcode 158
		"READ"              			# opcode 159
		"WRITE"             			# opcode 160
		"KEY-PRESS"         			# opcode 161
		"MOUSE-POS"         			# opcode 162
		"SPAWN"             			# opcode 163
		"S0"                			# opcode 164
		"S0!"               			# opcode 165
		"G0"                			# opcode 166
		"G0!"               			# opcode 167
	}

	0  # number of protected instructions at start of table
	# instruction table for strain 7
	{
		"call"              			# opcode 0
		"if"                			# opcode 1
		"ifelse"            			# opcode 2
		"?loop"             			# opcode 3
		"?exit"             			# opcode 4
		"pop"               			# opcode 5
		"dup"               			# opcode 6
		"swap"              			# opcode 7
		"over"              			# opcode 8
		"rot"               			# opcode 9
		"?dup"              			# opcode 10
		"-rot"              			# opcode 11
		"2swap"             			# opcode 12
		"2over"             			# opcode 13
		"2dup"              			# opcode 14
		"2pop"              			# opcode 15
		"nip"               			# opcode 16
		"tuck"              			# opcode 17
		"1+"                			# opcode 18
		"1-"                			# opcode 19
		"2+"                			# opcode 20
		"2-"                			# opcode 21
		"2/"                			# opcode 22
		"2*"                			# opcode 23
		"abs"               			# opcode 24
		"sqrt"              			# opcode 25
		"+"                 			# opcode 26
		"-"                 			# opcode 27
		"*"                 			# opcode 28
		"/"                 			# opcode 29
		"mod"               			# opcode 30
		"/mod"              			# opcode 31
		"negate"            			# opcode 32
		"2negate"           			# opcode 33
		"<<"                			# opcode 34
		">>"                			# opcode 35
		"="                 			# opcode 36
		"<>"                			# opcode 37
		"<"                 			# opcode 38
		">"                 			# opcode 39
		"<="                			# opcode 40
		">="                			# opcode 41
		"0="                			# opcode 42
		"or"                			# opcode 43
		"and"               			# opcode 44
		"not"               			# opcode 45
		"invert"            			# opcode 46
		"xor"               			# opcode 47
		"min"               			# opcode 48
		"max"               			# opcode 49
		"CB"                			# opcode 50
		"CBLEN"             			# opcode 51
		"CSLEN"             			# opcode 52
		"DSLEN"             			# opcode 53
		"R0"                			# opcode 54
		"R1"                			# opcode 55
		"R2"                			# opcode 56
		"R3"                			# opcode 57
		"R4"                			# opcode 58
		"R5"                			# opcode 59
		"R6"                			# opcode 60
		"R7"                			# opcode 61
		"R8"                			# opcode 62
		"R9"                			# opcode 63
		"R0!"               			# opcode 64
		"R1!"               			# opcode 65
		"R2!"               			# opcode 66
		"R3!"               			# opcode 67
		"R4!"               			# opcode 68
		"R5!"               			# opcode 69
		"R6!"               			# opcode 70
		"R7!"               			# opcode 71
		"R8!"               			# opcode 72
		"R9!"               			# opcode 73
		"R0++"              			# opcode 74
		"R1++"              			# opcode 75
		"R2++"              			# opcode 76
		"R3++"              			# opcode 77
		"R4++"              			# opcode 78
		"R5++"              			# opcode 79
		"R6++"              			# opcode 80
		"R7++"              			# opcode 81
		"R8++"              			# opcode 82
		"R9++"              			# opcode 83
		"--R0"              			# opcode 84
		"--R1"              			# opcode 85
		"--R2"              			# opcode 86
		"--R3"              			# opcode 87
		"--R4"              			# opcode 88
		"--R5"              			# opcode 89
		"--R6"              			# opcode 90
		"--R7"              			# opcode 91
		"--R8"              			# opcode 92
		"--R9"              			# opcode 93
		"PEEK"              			# opcode 94
		"POKE"              			# opcode 95
		"NUMBER"            			# opcode 96
		"NUMBER!"           			# opcode 97
		"?NUMBER!"          			# opcode 98
		"OPCODE"            			# opcode 99
		"OPCODE!"           			# opcode 100
		"OPCODE'"           			# opcode 101
		"TRAP1"             			# opcode 102
		"TRAP2"             			# opcode 103
		"TRAP3"             			# opcode 104
		"TRAP4"             			# opcode 105
		"TRAP5"             			# opcode 106
		"TRAP6"             			# opcode 107
		"TRAP7"             			# opcode 108
		"TRAP8"             			# opcode 109
		"TRAP9"             			# opcode 110
		"sign"              			# opcode 111
		"pack2"             			# opcode 112
		"unpack2"           			# opcode 113
		"MAX_INT"           			# opcode 114
		"MIN_INT"           			# opcode 115
		"HALT"              			# opcode 116
		"nop"               			# opcode 117
		"CMOVE"             			# opcode 118
		"OMOVE"             			# opcode 119
		"ROTATE"            			# opcode 120
		"EAT"               			# opcode 121
		"MAKE-SPORE"        			# opcode 122
		"MAKE-ORGANIC"      			# opcode 123
		"MAKE-BARRIER"      			# opcode 124
		"GROW"              			# opcode 125
		"GROW.CB"           			# opcode 126
		"CSHIFT"            			# opcode 127
		"EXUDE"             			# opcode 128
		"LOOK"              			# opcode 129
		"NEAREST"           			# opcode 130
		"FARTHEST"          			# opcode 131
		"SIZE"              			# opcode 132
		"BIGGEST"           			# opcode 133
		"SMALLEST"          			# opcode 134
		"TEMPERATURE"       			# opcode 135
		"HOTTEST"           			# opcode 136
		"COLDEST"           			# opcode 137
		"SMELL"             			# opcode 138
		"MOOD"              			# opcode 139
		"MOOD!"             			# opcode 140
		"BROADCAST"         			# opcode 141
		"SEND"              			# opcode 142
		"RECV"              			# opcode 143
		"ENERGY"            			# opcode 144
		"AGE"               			# opcode 145
		"NUM-CELLS"         			# opcode 146
		"HAS-NEIGHBOR"      			# opcode 147
		"DIST"              			# opcode 148
		"CHOOSE"            			# opcode 149
		"RND"               			# opcode 150
		"SEND-ENERGY"       			# opcode 151
		"POPULATION"        			# opcode 152
		"POPULATION.S"      			# opcode 153
		"GPS"               			# opcode 154
		"NEIGHBORS"         			# opcode 155
		"SHOUT"             			# opcode 156
		"LISTEN"            			# opcode 157
		"SAY"               			# opcode 158
		"READ"              			# opcode 159
		"WRITE"             			# opcode 160
		"KEY-PRESS"         			# opcode 161
		"MOUSE-POS"         			# opcode 162
		"SPAWN"             			# opcode 163
		"S0"                			# opcode 164
		"S0!"               			# opcode 165
		"G0"                			# opcode 166
		"G0!"               			# opcode 167
	}
}


# BARRIER_BEGIN
BARRIER {
	0	176
	0	177
	0	178
	0	179
	0	180
	0	181
	0	182
	0	183
	0	184
	0	185
	0	186
	0	187
	0	188
	0	189
	0	190
	0	191
	0	192
	0	193
	0	194
	0	195
	0	196
	0	197
	0	198
	0	199
	0	200
	0	201
	0	202
	0	203
	0	204
	0	205
	0	206
	0	207
	0	208
	0	209
	0	210
	0	211
	0	212
	0	213
	0	214
	0	215
	0	216
	0	217
	0	218
	0	219
	0	220
	0	221
	0	222
	0	223
	1	173
	1	174
	1	175
	1	176
	1	177
	1	178
	1	179
	1	180
	1	181
	1	182
	1	183
	1	184
	1	185
	1	186
	1	187
	1	188
	1	189
	1	190
	1	191
	1	192
	1	193
	1	194
	1	195
	1	196
	1	197
	1	198
	1	199
	1	200
	1	201
	1	202
	1	203
	1	204
	1	205
	1	206
	1	207
	1	208
	1	209
	1	210
	1	211
	1	212
	1	213
	1	214
	1	215
	1	216
	1	217
	1	218
	1	219
	1	220
	1	221
	1	222
	1	223
	1	224
	1	225
	1	226
	2	170
	2	171
	2	172
	2	173
	2	174
	2	175
	2	176
	2	177
	2	178
	2	179
	2	180
	2	181
	2	218
	2	219
	2	220
	2	221
	2	222
	2	223
	2	224
	2	225
	2	226
	2	227
	2	228
	2	229
	3	164
	3	165
	3	166
	3	167
	3	168
	3	169
	3	170
	3	171
	3	172
	3	173
	3	174
	3	175
	3	224
	3	225
	3	226
	3	227
	3	228
	3	229
	3	230
	3	231
	3	232
	3	233
	3	234
	3	235
	4	161
	4	162
	4	163
	4	164
	4	165
	4	166
	4	167
	4	168
	4	169
	4	170
	4	171
	4	172
	4	227
	4	228
	4	229
	4	230
	4	231
	4	232
	4	233
	4	234
	4	235
	4	236
	4	237
	4	238
	5	157
	5	158
	5	159
	5	160
	5	161
	5	162
	5	163
	5	164
	5	165
	5	166
	5	167
	5	168
	5	169
	5	230
	5	231
	5	232
	5	233
	5	234
	5	235
	5	236
	5	237
	5	238
	5	239
	5	240
	5	241
	6	156
	6	157
	6	158
	6	159
	6	160
	6	161
	6	162
	6	163
	6	236
	6	237
	6	238
	6	239
	6	240
	6	241
	6	242
	6	243
	7	154
	7	155
	7	156
	7	157
	7	158
	7	159
	7	160
	7	239
	7	240
	7	241
	7	242
	7	243
	7	244
	7	245
	8	153
	8	154
	8	155
	8	156
	8	242
	8	243
	8	244
	8	245
	8	246
	8	247
	9	150
	9	151
	9	152
	9	153
	9	154
	9	155
	9	244
	9	245
	9	246
	9	247
	9	248
	9	249
	10	147
	10	148
	10	149
	10	150
	10	151
	10	152
	10	153
	10	246
	10	247
	10	248
	10	249
	10	250
	10	251
	10	252
	11	145
	11	146
	11	147
	11	148
	11	149
	11	150
	11	151
	11	152
	11	248
	11	249
	11	250
	11	251
	11	252
	11	253
	11	254
	12	143
	12	144
	12	145
	12	146
	12	147
	12	148
	12	149
	12	250
	12	251
	12	252
	12	253
	12	254
	12	255
	12	256
	13	142
	13	143
	13	144
	13	145
	13	146
	13	253
	13	254
	13	255
	13	256
	13	257
	14	140
	14	141
	14	142
	14	143
	14	144
	14	255
	14	256
	14	257
	14	258
	14	259
	15	138
	15	139
	15	140
	15	141
	15	142
	15	257
	15	258
	15	259
	15	260
	15	261
	16	136
	16	137
	16	138
	16	139
	16	140
	16	141
	16	258
	16	259
	16	260
	16	261
	16	262
	16	263
	17	134
	17	135
	17	136
	17	137
	17	138
	17	139
	17	260
	17	261
	17	262
	17	263
	17	264
	17	265
	18	132
	18	133
	18	134
	18	135
	18	136
	18	137
	18	262
	18	263
	18	264
	18	265
	18	266
	18	267
	19	131
	19	132
	19	133
	19	134
	19	135
	19	264
	19	265
	19	266
	19	267
	19	268
	20	129
	20	130
	20	131
	20	132
	20	133
	20	266
	20	267
	20	268
	20	269
	20	270
	21	128
	21	129
	21	130
	21	131
	21	268
	21	269
	21	270
	21	271
	22	127
	22	128
	22	129
	22	130
	22	269
	22	270
	22	271
	22	272
	23	126
	23	127
	23	128
	23	271
	23	272
	23	273
	24	124
	24	125
	24	126
	24	127
	24	272
	24	273
	24	274
	24	275
	25	123
	25	124
	25	125
	25	126
	25	273
	25	274
	25	275
	25	276
	26	122
	26	123
	26	124
	26	125
	26	274
	26	275
	26	276
	26	277
	27	121
	27	122
	27	123
	27	276
	27	277
	27	278
	28	119
	28	120
	28	121
	28	122
	28	277
	28	278
	28	279
	28	280
	29	118
	29	119
	29	120
	29	121
	29	278
	29	279
	29	280
	29	281
	30	117
	30	118
	30	119
	30	120
	30	279
	30	280
	30	281
	30	282
	31	116
	31	117
	31	118
	31	281
	31	282
	31	283
	32	114
	32	115
	32	116
	32	117
	32	282
	32	283
	32	284
	32	285
	33	113
	33	114
	33	115
	33	116
	33	283
	33	284
	33	285
	33	286
	34	112
	34	113
	34	114
	34	115
	34	284
	34	285
	34	286
	34	287
	35	111
	35	112
	35	113
	35	286
	35	287
	35	288
	36	109
	36	110
	36	111
	36	112
	36	287
	36	288
	36	289
	36	290
}
BARRIER {
	37	108
	37	109
	37	110
	37	111
	37	288
	37	289
	37	290
	37	291
	38	107
	38	108
	38	109
	38	110
	38	289
	38	290
	38	291
	38	292
	39	106
	39	107
	39	108
	39	291
	39	292
	39	293
	40	105
	40	106
	40	107
	40	292
	40	293
	40	294
	41	104
	41	105
	41	106
	41	293
	41	294
	41	295
	42	103
	42	104
	42	105
	42	294
	42	295
	42	296
	43	102
	43	103
	43	104
	43	295
	43	296
	43	297
	44	101
	44	102
	44	103
	44	296
	44	297
	44	298
	45	100
	45	101
	45	102
	45	297
	45	298
	45	299
	46	99
	46	100
	46	101
	46	298
	46	299
	46	300
	47	98
	47	99
	47	100
	47	299
	47	300
	47	301
	48	97
	48	98
	48	99
	48	300
	48	301
	48	302
	49	96
	49	97
	49	98
	49	301
	49	302
	49	303
	50	95
	50	96
	50	97
	50	302
	50	303
	50	304
	51	94
	51	95
	51	96
	51	303
	51	304
	51	305
	52	93
	52	94
	52	95
	52	304
	52	305
	52	306
	53	91
	53	92
	53	93
	53	94
	53	305
	53	306
	53	307
	54	90
	54	91
	54	92
	54	93
	54	306
	54	307
	54	308
	55	90
	55	91
	55	92
	55	306
	55	307
	55	308
	56	89
	56	90
	56	91
	56	307
	56	308
	56	309
	57	88
	57	89
	57	90
	57	308
	57	309
	57	310
	58	87
	58	88
	58	89
	58	309
	58	310
	58	311
	59	86
	59	87
	59	88
	59	310
	59	311
	59	312
	60	86
	60	87
	60	88
	60	310
	60	311
	60	312
	61	85
	61	86
	61	87
	61	311
	61	312
	61	313
	62	84
	62	85
	62	86
	62	312
	62	313
	62	314
	63	83
	63	84
	63	85
	63	313
	63	314
	63	315
	64	82
	64	83
	64	84
	64	314
	64	315
	64	316
	65	82
	65	83
	65	84
	65	314
	65	315
	65	316
	66	81
	66	82
	66	83
	66	315
	66	316
	66	317
	67	80
	67	81
	67	82
	67	316
	67	317
	67	318
	68	79
	68	80
	68	81
	68	317
	68	318
	68	319
	69	79
	69	80
	69	81
	69	318
	69	319
	69	320
	70	78
	70	79
	70	80
	70	318
	70	319
	70	320
	71	77
	71	78
	71	79
	71	319
	71	320
	71	321
	72	76
	72	77
	72	78
	72	320
	72	321
	72	322
	73	76
	73	77
	73	78
	73	321
	73	322
	73	323
	74	75
	74	76
	74	77
	74	321
	74	322
	74	323
	75	74
	75	75
	75	76
	75	322
	75	323
	75	324
	76	73
	76	74
	76	75
	76	323
	76	324
	76	325
	77	72
	77	73
	77	74
	77	324
	77	325
	77	326
	78	72
	78	73
	78	74
	78	325
	78	326
	78	327
	79	71
	79	72
	79	73
	79	325
	79	326
	79	327
	80	70
	80	71
	80	72
	80	326
	80	327
	80	328
	81	70
	81	71
	81	72
	81	326
	81	327
	81	328
	82	69
	82	70
	82	71
	82	327
	82	328
	82	329
	83	69
	83	70
	83	71
	83	328
	83	329
	83	330
	84	68
	84	69
	84	70
	84	328
	84	329
	84	330
	85	67
	85	68
	85	69
	85	329
	85	330
	85	331
	86	66
	86	67
	86	68
	86	330
	86	331
	86	332
	87	65
	87	66
	87	67
	87	331
	87	332
	87	333
	88	65
	88	66
	88	67
	88	332
	88	333
	88	334
	89	64
	89	65
	89	66
	89	332
	89	333
	89	334
	90	63
	90	64
	90	65
	90	333
	90	334
	90	335
	91	63
	91	64
	91	65
	91	333
	91	334
	91	335
	92	62
	92	63
	92	64
	92	334
	92	335
	92	336
	93	62
	93	63
	93	64
	93	335
	93	336
	93	337
	94	61
	94	62
	94	63
	94	335
	94	336
	94	337
	95	60
	95	61
	95	62
	95	336
	95	337
	95	338
	96	60
	96	61
	96	62
	96	336
	96	337
	96	338
	97	59
	97	60
	97	61
	97	337
	97	338
	97	339
	98	59
	98	60
	98	61
	98	338
	98	339
	98	340
	99	58
	99	59
	99	60
	99	338
	99	339
	99	340
	100	57
	100	58
	100	59
	100	339
	100	340
	100	341
	101	57
	101	58
	101	59
	101	339
	101	340
	101	341
	102	56
	102	57
	102	58
	102	340
	102	341
	102	342
	103	56
	103	57
	103	58
	103	341
	103	342
	103	343
	104	55
	104	56
	104	57
	104	341
	104	342
	104	343
	105	55
	105	56
	105	57
	105	341
	105	342
	105	343
	106	54
	106	55
	106	56
	106	342
	106	343
	106	344
	107	54
	107	55
	107	56
	107	342
	107	343
	107	344
	108	54
	108	55
	108	56
	108	343
	108	344
	108	345
	109	53
	109	54
	109	55
	109	343
	109	344
	109	345
	110	52
	110	53
	110	54
	110	344
	110	345
	110	346
	111	52
	111	53
	111	54
	111	344
	111	345
	111	346
	112	51
	112	52
	112	53
	112	345
	112	346
	112	347
	113	51
	113	52
	113	53
	113	346
	113	347
	113	348
	114	50
	114	51
	114	52
	114	346
	114	347
	114	348
	115	49
	115	50
	115	51
	115	347
	115	348
	115	349
	116	49
	116	50
	116	51
	116	347
	116	348
	116	349
	117	48
	117	49
	117	50
	117	348
	117	349
	117	350
	118	48
	118	49
	118	50
	118	349
	118	350
	118	351
	119	47
	119	48
}
BARRIER {
	119	49
	119	349
	119	350
	119	351
	120	47
	120	48
	120	49
	120	349
	120	350
	120	351
	121	46
	121	47
	121	48
	121	350
	121	351
	121	352
	122	46
	122	47
	122	48
	122	350
	122	351
	122	352
	123	46
	123	47
	123	48
	123	351
	123	352
	123	353
	124	45
	124	46
	124	47
	124	351
	124	352
	124	353
	125	45
	125	46
	125	47
	125	351
	125	352
	125	353
	126	44
	126	45
	126	46
	126	352
	126	353
	126	354
	127	44
	127	45
	127	46
	127	352
	127	353
	127	354
	128	44
	128	45
	128	46
	128	353
	128	354
	128	355
	129	43
	129	44
	129	45
	129	353
	129	354
	129	355
	130	42
	130	43
	130	44
	130	354
	130	355
	130	356
	131	42
	131	43
	131	44
	131	354
	131	355
	131	356
	132	41
	132	42
	132	43
	132	355
	132	356
	132	357
	133	41
	133	42
	133	43
	133	356
	133	357
	133	358
	134	40
	134	41
	134	42
	134	356
	134	357
	134	358
	135	40
	135	41
	135	42
	135	356
	135	357
	135	358
	136	39
	136	40
	136	41
	136	357
	136	358
	136	359
	137	39
	137	40
	137	41
	137	357
	137	358
	137	359
	138	39
	138	40
	138	41
	138	358
	138	359
	138	360
	139	38
	139	39
	139	40
	139	358
	139	359
	139	360
	140	38
	140	39
	140	40
	140	358
	140	359
	140	360
	141	37
	141	38
	141	39
	141	359
	141	360
	141	361
	142	37
	142	38
	142	39
	142	359
	142	360
	142	361
	143	37
	143	38
	143	39
	143	360
	143	361
	143	362
	144	36
	144	37
	144	38
	144	360
	144	361
	144	362
	145	36
	145	37
	145	38
	145	360
	145	361
	145	362
	146	35
	146	36
	146	37
	146	361
	146	362
	146	363
	147	35
	147	36
	147	37
	147	361
	147	362
	147	363
	148	35
	148	36
	148	37
	148	362
	148	363
	148	364
	149	34
	149	35
	149	36
	149	362
	149	363
	149	364
	150	34
	150	35
	150	36
	150	363
	150	364
	150	365
	151	33
	151	34
	151	35
	151	363
	151	364
	151	365
	152	33
	152	34
	152	35
	152	162
	152	163
	152	164
	152	165
	152	364
	152	365
	152	366
	153	32
	153	33
	153	34
	153	161
	153	162
	153	163
	153	164
	153	165
	153	166
	153	167
	153	168
	153	364
	153	365
	153	366
	154	32
	154	33
	154	34
	154	159
	154	160
	154	161
	154	162
	154	163
	154	164
	154	165
	154	166
	154	167
	154	168
	154	169
	154	364
	154	365
	154	366
	155	31
	155	32
	155	33
	155	158
	155	159
	155	160
	155	161
	155	162
	155	165
	155	166
	155	167
	155	168
	155	365
	155	366
	155	367
	156	31
	156	32
	156	33
	156	157
	156	158
	156	159
	156	160
	156	166
	156	167
	156	168
	156	365
	156	366
	156	367
	157	31
	157	32
	157	33
	157	156
	157	157
	157	158
	157	159
	157	166
	157	167
	157	168
	157	366
	157	367
	157	368
	158	30
	158	31
	158	32
	158	155
	158	156
	158	157
	158	158
	158	166
	158	167
	158	168
	158	366
	158	367
	158	368
	159	30
	159	31
	159	32
	159	155
	159	156
	159	157
	159	166
	159	167
	159	168
	159	366
	159	367
	159	368
	160	30
	160	31
	160	32
	160	155
	160	156
	160	157
	160	166
	160	167
	160	168
	160	366
	160	367
	160	368
	161	30
	161	31
	161	32
	161	155
	161	156
	161	157
	161	158
	161	165
	161	166
	161	167
	161	168
	161	366
	161	367
	161	368
	162	30
	162	31
	162	32
	162	156
	162	157
	162	158
	162	164
	162	165
	162	166
	162	167
	162	367
	162	368
	162	369
	163	29
	163	30
	163	31
	163	156
	163	157
	163	158
	163	163
	163	164
	163	165
	163	166
	163	367
	163	368
	163	369
	164	29
	164	30
	164	31
	164	156
	164	157
	164	158
	164	159
	164	161
	164	162
	164	163
	164	164
	164	165
	164	367
	164	368
	164	369
	165	28
	165	29
	165	30
	165	157
	165	158
	165	159
	165	160
	165	161
	165	162
	165	163
	165	164
	165	368
	165	369
	165	370
	166	28
	166	29
	166	30
	166	158
	166	159
	166	160
	166	161
	166	162
	166	368
	166	369
	166	370
	167	28
	167	29
	167	30
	167	159
	167	160
	167	161
	167	369
	167	370
	167	371
	168	27
	168	28
	168	29
	168	369
	168	370
	168	371
	169	27
	169	28
	169	29
	169	370
	169	371
	169	372
	170	26
	170	27
	170	28
	170	370
	170	371
	170	372
	171	26
	171	27
	171	28
	171	371
	171	372
	171	373
	172	25
	172	26
	172	27
	172	371
	172	372
	172	373
	173	25
	173	26
	173	27
	173	371
	173	372
	173	373
	174	25
	174	26
	174	27
	174	371
	174	372
	174	373
	175	25
	175	26
	175	27
	175	371
	175	372
	175	373
	176	25
	176	26
	176	27
	176	372
	176	373
	176	374
	177	24
	177	25
	177	26
	177	372
	177	373
	177	374
	178	24
	178	25
	178	26
	178	373
	178	374
	178	375
	179	23
	179	24
	179	25
	179	373
	179	374
	179	375
	180	23
	180	24
	180	25
	180	374
	180	375
	180	376
	181	22
	181	23
	181	24
	181	374
	181	375
	181	376
	182	22
	182	23
	182	24
	182	374
	182	375
	182	376
	183	22
	183	23
	183	24
	183	374
	183	375
	183	376
}
BARRIER {
	184	22
	184	23
	184	24
	184	374
	184	375
	184	376
	185	22
	185	23
	185	24
	185	375
	185	376
	185	377
	186	21
	186	22
	186	23
	186	375
	186	376
	186	377
	187	21
	187	22
	187	23
	187	375
	187	376
	187	377
	188	21
	188	22
	188	23
	188	375
	188	376
	188	377
	189	21
	189	22
	189	23
	189	376
	189	377
	189	378
	190	20
	190	21
	190	22
	190	376
	190	377
	190	378
	191	20
	191	21
	191	22
	191	376
	191	377
	191	378
	192	19
	192	20
	192	21
	192	377
	192	378
	192	379
	193	19
	193	20
	193	21
	193	377
	193	378
	193	379
	194	19
	194	20
	194	21
	194	378
	194	379
	194	380
	195	18
	195	19
	195	20
	195	378
	195	379
	195	380
	196	18
	196	19
	196	20
	196	378
	196	379
	196	380
	197	18
	197	19
	197	20
	197	378
	197	379
	197	380
	198	18
	198	19
	198	20
	198	379
	198	380
	198	381
	199	17
	199	18
	199	19
	199	315
	199	316
	199	317
	199	318
	199	379
	199	380
	199	381
	200	17
	200	18
	200	19
	200	314
	200	315
	200	316
	200	317
	200	318
	200	319
	200	320
	200	321
	200	379
	200	380
	200	381
	201	17
	201	18
	201	19
	201	313
	201	314
	201	315
	201	316
	201	317
	201	318
	201	319
	201	320
	201	321
	201	322
	201	323
	201	324
	201	379
	201	380
	201	381
	202	17
	202	18
	202	19
	202	313
	202	314
	202	315
	202	316
	202	318
	202	319
	202	320
	202	321
	202	322
	202	323
	202	324
	202	325
	202	379
	202	380
	202	381
	203	17
	203	18
	203	19
	203	314
	203	315
	203	316
	203	321
	203	322
	203	323
	203	324
	203	325
	203	326
	203	327
	203	380
	203	381
	203	382
	204	16
	204	17
	204	18
	204	314
	204	315
	204	316
	204	324
	204	325
	204	326
	204	327
	204	328
	204	380
	204	381
	204	382
	205	16
	205	17
	205	18
	205	314
	205	315
	205	316
	205	326
	205	327
	205	328
	205	380
	205	381
	205	382
	206	16
	206	17
	206	18
	206	313
	206	314
	206	315
	206	316
	206	326
	206	327
	206	328
	206	329
	206	380
	206	381
	206	382
	207	16
	207	17
	207	18
	207	313
	207	314
	207	315
	207	327
	207	328
	207	329
	207	381
	207	382
	207	383
	208	15
	208	16
	208	17
	208	313
	208	314
	208	315
	208	316
	208	327
	208	328
	208	329
	208	381
	208	382
	208	383
	209	15
	209	16
	209	17
	209	314
	209	315
	209	316
	209	327
	209	328
	209	329
	209	381
	209	382
	209	383
	210	15
	210	16
	210	17
	210	314
	210	315
	210	316
	210	327
	210	328
	210	329
	210	381
	210	382
	210	383
	211	15
	211	16
	211	17
	211	314
	211	315
	211	316
	211	317
	211	327
	211	328
	211	329
	211	382
	211	383
	211	384
	212	14
	212	15
	212	16
	212	315
	212	316
	212	317
	212	326
	212	327
	212	328
	212	329
	212	382
	212	383
	212	384
	213	14
	213	15
	213	16
	213	315
	213	316
	213	317
	213	318
	213	325
	213	326
	213	327
	213	328
	213	382
	213	383
	213	384
	214	14
	214	15
	214	16
	214	316
	214	317
	214	318
	214	319
	214	324
	214	325
	214	326
	214	327
	214	328
	214	382
	214	383
	214	384
	215	14
	215	15
	215	16
	215	317
	215	318
	215	319
	215	320
	215	323
	215	324
	215	325
	215	326
	215	327
	215	383
	215	384
	215	385
	216	13
	216	14
	216	15
	216	318
	216	319
	216	320
	216	321
	216	322
	216	323
	216	324
	216	325
	216	326
	216	383
	216	384
	216	385
	217	13
	217	14
	217	15
	217	319
	217	320
	217	321
	217	322
	217	323
	217	324
	217	325
	217	383
	217	384
	217	385
	218	13
	218	14
	218	15
	218	321
	218	322
	218	323
	218	383
	218	384
	218	385
	219	13
	219	14
	219	15
	219	384
	219	385
	219	386
	220	12
	220	13
	220	14
	220	384
	220	385
	220	386
	221	12
	221	13
	221	14
	221	273
	221	274
	221	275
	221	276
	221	384
	221	385
	221	386
	222	12
	222	13
	222	14
	222	271
	222	272
	222	273
	222	274
	222	275
	222	276
	222	277
	222	278
	222	280
	222	384
	222	385
	222	386
	223	12
	223	13
	223	14
	223	269
	223	270
	223	271
	223	272
	223	273
	223	274
	223	275
	223	276
	223	277
	223	278
	223	279
	223	280
	223	281
	223	384
	223	385
	223	386
	224	12
	224	13
	224	14
	224	268
	224	269
	224	270
	224	271
	224	272
	224	276
	224	277
	224	278
	224	279
	224	280
	224	281
	224	385
	224	386
	224	387
	225	11
	225	12
	225	13
	225	268
	225	269
	225	270
	225	271
	225	279
	225	280
	225	281
	225	282
	225	385
	225	386
	225	387
	226	11
	226	12
	226	13
	226	267
	226	268
	226	269
	226	270
	226	280
	226	281
	226	282
	226	385
	226	386
	226	387
	227	11
	227	12
	227	13
	227	267
	227	268
	227	269
	227	270
	227	280
	227	281
	227	282
	227	385
	227	386
	227	387
	228	11
	228	12
	228	13
	228	268
	228	269
	228	270
	228	280
	228	281
	228	282
	228	386
	228	387
	228	388
	229	10
	229	11
	229	12
	229	268
	229	269
	229	270
	229	281
	229	282
	229	283
	229	386
	229	387
	229	388
	230	10
}
BARRIER {
	230	11
	230	12
	230	268
	230	269
	230	270
	230	271
	230	281
	230	282
	230	283
	230	386
	230	387
	230	388
	231	10
	231	11
	231	12
	231	269
	231	270
	231	271
	231	280
	231	281
	231	282
	231	283
	231	386
	231	387
	231	388
	232	10
	232	11
	232	12
	232	270
	232	271
	232	272
	232	280
	232	281
	232	282
	232	387
	232	388
	232	389
	233	9
	233	10
	233	11
	233	270
	233	271
	233	272
	233	273
	233	279
	233	280
	233	281
	233	282
	233	387
	233	388
	233	389
	234	9
	234	10
	234	11
	234	271
	234	272
	234	273
	234	274
	234	275
	234	276
	234	277
	234	278
	234	279
	234	280
	234	281
	234	387
	234	388
	234	389
	235	9
	235	10
	235	11
	235	272
	235	273
	235	274
	235	275
	235	276
	235	277
	235	278
	235	279
	235	280
	235	387
	235	388
	235	389
	236	9
	236	10
	236	11
	236	273
	236	274
	236	275
	236	276
	236	277
	236	278
	236	279
	236	388
	236	389
	236	390
	237	9
	237	10
	237	11
	237	388
	237	389
	237	390
	238	9
	238	10
	238	11
	238	388
	238	389
	238	390
	239	9
	239	10
	239	11
	239	388
	239	389
	239	390
	240	9
	240	10
	240	11
	240	388
	240	389
	240	390
	241	8
	241	9
	241	10
	241	388
	241	389
	241	390
	242	8
	242	9
	242	10
	242	388
	242	389
	242	390
	243	8
	243	9
	243	10
	243	388
	243	389
	243	390
	244	8
	244	9
	244	10
	244	389
	244	390
	244	391
	245	7
	245	8
	245	9
	245	389
	245	390
	245	391
	246	7
	246	8
	246	9
	246	389
	246	390
	246	391
	247	7
	247	8
	247	9
	247	389
	247	390
	247	391
	248	7
	248	8
	248	9
	248	390
	248	391
	248	392
	249	6
	249	7
	249	8
	249	390
	249	391
	249	392
	250	6
	250	7
	250	8
	250	390
	250	391
	250	392
	251	6
	251	7
	251	8
	251	390
	251	391
	251	392
	252	6
	252	7
	252	8
	252	391
	252	392
	252	393
	253	6
	253	7
	253	8
	253	391
	253	392
	253	393
	254	6
	254	7
	254	8
	254	391
	254	392
	254	393
	255	6
	255	7
	255	8
	255	391
	255	392
	255	393
	256	6
	256	7
	256	8
	256	391
	256	392
	256	393
	257	5
	257	6
	257	7
	257	391
	257	392
	257	393
	258	5
	258	6
	258	7
	258	391
	258	392
	258	393
	259	5
	259	6
	259	7
	259	392
	259	393
	259	394
	260	5
	260	6
	260	7
	260	392
	260	393
	260	394
	261	5
	261	6
	261	7
	261	392
	261	393
	261	394
	262	5
	262	6
	262	7
	262	392
	262	393
	262	394
	263	5
	263	6
	263	7
	263	392
	263	393
	263	394
	264	4
	264	5
	264	6
	264	392
	264	393
	264	394
	265	4
	265	5
	265	6
	265	392
	265	393
	265	394
	266	4
	266	5
	266	6
	266	392
	266	393
	266	394
	267	4
	267	5
	267	6
	267	393
	267	394
	267	395
	268	4
	268	5
	268	6
	268	393
	268	394
	268	395
	269	4
	269	5
	269	6
	269	393
	269	394
	269	395
	270	4
	270	5
	270	6
	270	393
	270	394
	270	395
	271	4
	271	5
	271	6
	271	393
	271	394
	271	395
	272	3
	272	4
	272	5
	272	393
	272	394
	272	395
	273	3
	273	4
	273	5
	273	393
	273	394
	273	395
	274	3
	274	4
	274	5
	274	393
	274	394
	274	395
	275	3
	275	4
	275	5
	275	394
	275	395
	275	396
	276	3
	276	4
	276	5
	276	394
	276	395
	276	396
	277	3
	277	4
	277	5
	277	394
	277	395
	277	396
	278	3
	278	4
	278	5
	278	394
	278	395
	278	396
	279	2
	279	3
	279	4
	279	394
	279	395
	279	396
	280	2
	280	3
	280	4
	280	394
	280	395
	280	396
	281	2
	281	3
	281	4
	281	394
	281	395
	281	396
	282	2
	282	3
	282	4
	282	395
	282	396
	282	397
	283	2
	283	3
	283	4
	283	395
	283	396
	283	397
	284	2
	284	3
	284	4
	284	395
	284	396
	284	397
	285	2
	285	3
	285	4
	285	395
	285	396
	285	397
	286	2
	286	3
	286	4
	286	395
	286	396
	286	397
	287	1
	287	2
	287	3
	287	395
	287	396
	287	397
	288	1
	288	2
	288	3
	288	364
	288	395
	288	396
	288	397
	289	1
	289	2
	289	3
	289	360
	289	361
	289	362
	289	363
	289	364
	289	365
	289	396
	289	397
	289	398
	290	1
	290	2
	290	3
	290	358
	290	359
	290	360
	290	361
	290	362
	290	363
	290	364
	290	365
	290	396
	290	397
	290	398
	291	1
	291	2
	291	3
	291	357
	291	358
	291	359
	291	360
	291	361
	291	362
	291	363
	291	364
	291	365
	291	396
	291	397
	291	398
	292	1
	292	2
	292	3
	292	357
	292	358
	292	359
	292	360
	292	363
	292	364
	292	365
	292	396
	292	397
	292	398
	293	1
	293	2
	293	3
	293	355
	293	356
	293	357
	293	358
	293	363
	293	364
	293	365
	293	396
	293	397
	293	398
	294	1
	294	2
	294	3
	294	353
	294	354
	294	355
	294	356
	294	357
	294	363
	294	364
	294	365
	294	396
	294	397
	294	398
	295	1
	295	2
	295	3
	295	352
	295	353
	295	354
	295	355
	295	356
	295	363
	295	364
}
BARRIER {
	295	365
	295	396
	295	397
	295	398
	296	1
	296	2
	296	3
	296	351
	296	352
	296	353
	296	354
	296	355
	296	363
	296	364
	296	365
	296	396
	296	397
	296	398
	297	1
	297	2
	297	3
	297	350
	297	351
	297	352
	297	353
	297	363
	297	364
	297	365
	297	396
	297	397
	297	398
	298	0
	298	1
	298	2
	298	349
	298	350
	298	351
	298	362
	298	363
	298	364
	298	396
	298	397
	298	398
	299	0
	299	1
	299	2
	299	348
	299	349
	299	350
	299	362
	299	363
	299	364
	299	396
	299	397
	299	398
	300	0
	300	1
	300	2
	300	347
	300	348
	300	349
	300	362
	300	363
	300	364
	300	397
	300	398
	300	399
	301	0
	301	1
	301	2
	301	346
	301	347
	301	348
	301	349
	301	362
	301	363
	301	364
	301	397
	301	398
	301	399
	302	0
	302	1
	302	2
	302	345
	302	346
	302	347
	302	348
	302	362
	302	363
	302	364
	302	397
	302	398
	302	399
	303	0
	303	1
	303	2
	303	344
	303	345
	303	346
	303	347
	303	362
	303	363
	303	364
	303	397
	303	398
	303	399
	304	0
	304	1
	304	2
	304	344
	304	345
	304	346
	304	362
	304	363
	304	364
	304	397
	304	398
	304	399
	305	0
	305	1
	305	2
	305	343
	305	344
	305	345
	305	362
	305	363
	305	364
	305	397
	305	398
	305	399
	306	0
	306	1
	306	2
	306	343
	306	344
	306	345
	306	362
	306	363
	306	364
	306	397
	306	398
	306	399
	307	0
	307	1
	307	2
	307	342
	307	343
	307	344
	307	362
	307	363
	307	364
	307	397
	307	398
	307	399
	308	0
	308	1
	308	2
	308	342
	308	343
	308	344
	308	362
	308	363
	308	364
	308	397
	308	398
	308	399
	309	0
	309	1
	309	2
	309	341
	309	342
	309	343
	309	361
	309	362
	309	363
	309	397
	309	398
	309	399
	310	0
	310	1
	310	2
	310	340
	310	341
	310	342
	310	361
	310	362
	310	363
	310	397
	310	398
	310	399
	311	0
	311	1
	311	2
	311	339
	311	340
	311	341
	311	361
	311	362
	311	363
	311	397
	311	398
	311	399
	312	0
	312	1
	312	2
	312	338
	312	339
	312	340
	312	361
	312	362
	312	363
	312	397
	312	398
	312	399
	313	0
	313	1
	313	2
	313	337
	313	338
	313	339
	313	361
	313	362
	313	363
	313	397
	313	398
	313	399
	314	0
	314	1
	314	2
	314	337
	314	338
	314	339
	314	361
	314	362
	314	363
	314	397
	314	398
	314	399
	315	0
	315	1
	315	336
	315	337
	315	338
	315	361
	315	362
	315	363
	315	397
	315	398
	315	399
	316	0
	316	1
	316	335
	316	336
	316	337
	316	360
	316	361
	316	362
	316	397
	316	398
	316	399
	317	0
	317	1
	317	335
	317	336
	317	337
	317	360
	317	361
	317	362
	317	397
	317	398
	317	399
	318	0
	318	1
	318	334
	318	335
	318	336
	318	360
	318	361
	318	362
	318	398
	318	399
	319	0
	319	1
	319	334
	319	335
	319	336
	319	360
	319	361
	319	362
	319	398
	319	399
	320	0
	320	1
	320	333
	320	334
	320	335
	320	360
	320	361
	320	362
	320	398
	320	399
	321	0
	321	1
	321	332
	321	333
	321	334
	321	360
	321	361
	321	362
	321	398
	321	399
	322	0
	322	1
	322	332
	322	333
	322	334
	322	359
	322	360
	322	361
	322	398
	322	399
	323	0
	323	1
	323	331
	323	332
	323	333
	323	359
	323	360
	323	361
	323	398
	323	399
	324	0
	324	1
	324	331
	324	332
	324	333
	324	359
	324	360
	324	361
	324	398
	324	399
	325	0
	325	1
	325	330
	325	331
	325	332
	325	359
	325	360
	325	361
	325	398
	325	399
	326	0
	326	1
	326	330
	326	331
	326	332
	326	359
	326	360
	326	361
	326	398
	326	399
	327	0
	327	1
	327	330
	327	331
	327	332
	327	359
	327	360
	327	361
	327	398
	327	399
	328	0
	328	1
	328	107
	328	329
	328	330
	328	331
	328	358
	328	359
	328	360
	328	398
	328	399
	329	0
	329	1
	329	106
	329	107
	329	108
	329	329
	329	330
	329	331
	329	358
	329	359
	329	360
	329	398
	329	399
	330	0
	330	1
	330	106
	330	107
	330	108
	330	329
	330	330
	330	331
	330	358
	330	359
	330	360
	330	398
	330	399
	331	0
	331	1
	331	105
	331	106
	331	107
	331	328
	331	329
	331	330
	331	358
	331	359
	331	360
	331	398
	331	399
	332	0
	332	1
	332	105
	332	106
	332	107
	332	328
	332	329
	332	330
	332	358
	332	359
	332	360
	332	398
	332	399
	333	0
	333	1
	333	104
	333	105
	333	106
	333	328
	333	329
	333	330
	333	358
	333	359
	333	360
	333	398
	333	399
	334	0
	334	1
	334	104
	334	105
	334	106
	334	327
	334	328
	334	329
	334	357
	334	358
	334	359
	334	398
	334	399
	335	0
	335	1
	335	103
	335	104
	335	105
	335	106
	335	107
	335	327
	335	328
	335	329
	335	357
	335	358
	335	359
	335	398
	335	399
	336	0
	336	1
	336	102
	336	103
	336	104
	336	105
	336	106
	336	107
	336	327
	336	328
	336	329
	336	357
	336	358
	336	359
	336	398
	336	399
	337	0
	337	1
	337	102
	337	103
	337	104
	337	105
	337	106
	337	107
	337	326
}
BARRIER {
	337	327
	337	328
	337	357
	337	358
	337	359
	337	398
	337	399
	338	0
	338	1
	338	101
	338	102
	338	103
	338	105
	338	106
	338	107
	338	326
	338	327
	338	328
	338	357
	338	358
	338	359
	338	398
	338	399
	339	0
	339	1
	339	101
	339	102
	339	103
	339	105
	339	106
	339	107
	339	325
	339	326
	339	327
	339	357
	339	358
	339	359
	339	398
	339	399
	340	0
	340	1
	340	100
	340	101
	340	102
	340	106
	340	107
	340	108
	340	221
	340	222
	340	223
	340	325
	340	326
	340	327
	340	357
	340	358
	340	359
	340	398
	340	399
	341	0
	341	1
	341	100
	341	101
	341	102
	341	106
	341	107
	341	108
	341	219
	341	220
	341	221
	341	222
	341	223
	341	224
	341	225
	341	324
	341	325
	341	326
	341	357
	341	358
	341	359
	341	398
	341	399
	342	0
	342	1
	342	99
	342	100
	342	101
	342	107
	342	108
	342	109
	342	218
	342	219
	342	220
	342	221
	342	222
	342	223
	342	224
	342	225
	342	226
	342	324
	342	325
	342	326
	342	357
	342	358
	342	359
	342	398
	342	399
	343	0
	343	1
	343	98
	343	99
	343	100
	343	107
	343	108
	343	109
	343	217
	343	218
	343	219
	343	220
	343	221
	343	224
	343	225
	343	226
	343	227
	343	323
	343	324
	343	325
	343	356
	343	357
	343	358
	343	398
	343	399
	344	0
	344	1
	344	97
	344	98
	344	99
	344	100
	344	107
	344	108
	344	109
	344	217
	344	218
	344	219
	344	226
	344	227
	344	228
	344	323
	344	324
	344	325
	344	356
	344	357
	344	358
	344	398
	344	399
	345	0
	345	1
	345	96
	345	97
	345	98
	345	99
	345	108
	345	109
	345	110
	345	217
	345	218
	345	219
	345	227
	345	228
	345	229
	345	323
	345	324
	345	325
	345	356
	345	357
	345	358
	345	398
	345	399
	346	0
	346	1
	346	95
	346	96
	346	97
	346	98
	346	108
	346	109
	346	110
	346	217
	346	218
	346	219
	346	228
	346	229
	346	230
	346	323
	346	324
	346	325
	346	356
	346	357
	346	358
	346	398
	346	399
	347	0
	347	1
	347	95
	347	96
	347	97
	347	108
	347	109
	347	110
	347	216
	347	217
	347	218
	347	229
	347	230
	347	231
	347	322
	347	323
	347	324
	347	356
	347	357
	347	358
	347	398
	347	399
	348	0
	348	1
	348	94
	348	95
	348	96
	348	108
	348	109
	348	110
	348	216
	348	217
	348	218
	348	230
	348	231
	348	232
	348	322
	348	323
	348	324
	348	356
	348	357
	348	358
	348	398
	348	399
	349	0
	349	1
	349	93
	349	94
	349	95
	349	108
	349	109
	349	110
	349	216
	349	217
	349	218
	349	230
	349	231
	349	232
	349	233
	349	322
	349	323
	349	324
	349	356
	349	357
	349	358
	349	398
	349	399
	350	0
	350	1
	350	93
	350	94
	350	95
	350	108
	350	109
	350	110
	350	217
	350	218
	350	219
	350	231
	350	232
	350	233
	350	234
	350	322
	350	323
	350	324
	350	356
	350	357
	350	358
	350	399
	351	0
	351	1
	351	92
	351	93
	351	94
	351	108
	351	109
	351	110
	351	217
	351	218
	351	219
	351	232
	351	233
	351	234
	351	322
	351	323
	351	324
	351	355
	351	356
	351	357
	351	398
	351	399
	352	0
	352	1
	352	92
	352	93
	352	94
	352	108
	352	109
	352	110
	352	217
	352	218
	352	219
	352	233
	352	234
	352	235
	352	322
	352	323
	352	324
	352	355
	352	356
	352	357
	352	398
	352	399
	353	0
	353	1
	353	92
	353	93
	353	94
	353	108
	353	109
	353	110
	353	217
	353	218
	353	219
	353	220
	353	234
	353	235
	353	236
	353	322
	353	323
	353	324
	353	355
	353	356
	353	357
	353	398
	353	399
	354	0
	354	1
	354	91
	354	92
	354	93
	354	108
	354	109
	354	110
	354	218
	354	219
	354	220
	354	234
	354	235
	354	236
	354	237
	354	322
	354	323
	354	324
	354	355
	354	356
	354	357
	354	398
	354	399
	355	0
	355	1
	355	91
	355	92
	355	93
	355	108
	355	109
	355	110
	355	218
	355	219
	355	220
	355	235
	355	236
	355	237
	355	322
	355	323
	355	324
	355	355
	355	356
	355	357
	355	398
	355	399
	356	0
	356	1
	356	91
	356	92
	356	93
	356	108
	356	109
	356	110
	356	219
	356	220
	356	221
	356	235
	356	236
	356	237
	356	322
	356	323
	356	324
	356	355
	356	356
	356	357
	356	398
	356	399
	357	0
	357	1
	357	90
	357	91
	357	92
	357	108
	357	109
	357	110
	357	219
	357	220
	357	221
	357	222
	357	223
	357	232
	357	233
	357	234
	357	235
	357	236
	357	237
	357	238
	357	322
	357	323
	357	324
	357	354
	357	355
	357	356
	357	398
	357	399
	358	0
	358	1
	358	90
	358	91
	358	92
	358	108
	358	109
	358	110
	358	220
	358	221
	358	222
	358	223
	358	224
	358	225
	358	226
	358	227
	358	228
	358	229
	358	230
	358	231
	358	232
	358	233
	358	234
	358	235
	358	236
	358	237
	358	238
	358	322
	358	323
	358	324
	358	354
	358	355
	358	356
	358	398
	358	399
	359	0
	359	1
	359	90
	359	91
	359	92
	359	108
	359	109
	359	110
	359	221
	359	222
	359	223
	359	224
	359	225
	359	226
}
BARRIER {
	359	227
	359	228
	359	229
	359	230
	359	231
	359	232
	359	233
	359	234
	359	235
	359	237
	359	322
	359	323
	359	324
	359	354
	359	355
	359	356
	359	398
	359	399
	360	0
	360	1
	360	90
	360	91
	360	92
	360	108
	360	109
	360	110
	360	223
	360	224
	360	225
	360	226
	360	227
	360	228
	360	229
	360	230
	360	231
	360	232
	360	322
	360	323
	360	324
	360	354
	360	355
	360	356
	360	398
	360	399
	361	0
	361	1
	361	91
	361	92
	361	93
	361	109
	361	110
	361	111
	361	322
	361	323
	361	324
	361	354
	361	355
	361	356
	361	398
	361	399
	362	0
	362	1
	362	91
	362	92
	362	93
	362	109
	362	110
	362	111
	362	322
	362	323
	362	324
	362	354
	362	355
	362	356
	362	398
	362	399
	363	0
	363	1
	363	91
	363	92
	363	93
	363	109
	363	110
	363	111
	363	323
	363	324
	363	325
	363	353
	363	354
	363	355
	363	398
	363	399
	364	0
	364	1
	364	91
	364	92
	364	93
	364	109
	364	110
	364	111
	364	323
	364	324
	364	325
	364	353
	364	354
	364	355
	364	398
	364	399
	365	0
	365	1
	365	91
	365	92
	365	93
	365	109
	365	110
	365	111
	365	323
	365	324
	365	325
	365	353
	365	354
	365	355
	365	398
	365	399
	366	0
	366	1
	366	91
	366	92
	366	93
	366	109
	366	110
	366	111
	366	323
	366	324
	366	325
	366	353
	366	354
	366	355
	366	398
	366	399
	367	0
	367	1
	367	91
	367	92
	367	93
	367	109
	367	110
	367	111
	367	323
	367	324
	367	325
	367	352
	367	353
	367	354
	367	398
	367	399
	368	0
	368	1
	368	91
	368	92
	368	93
	368	109
	368	110
	368	111
	368	323
	368	324
	368	325
	368	352
	368	353
	368	354
	368	398
	368	399
	369	0
	369	1
	369	91
	369	92
	369	93
	369	109
	369	110
	369	111
	369	323
	369	324
	369	325
	369	352
	369	353
	369	354
	369	398
	369	399
	370	0
	370	1
	370	92
	370	93
	370	94
	370	109
	370	110
	370	111
	370	323
	370	324
	370	325
	370	351
	370	352
	370	353
	370	398
	370	399
	371	0
	371	1
	371	92
	371	93
	371	94
	371	109
	371	110
	371	111
	371	324
	371	325
	371	326
	371	350
	371	351
	371	352
	371	398
	371	399
	372	0
	372	1
	372	92
	372	93
	372	94
	372	108
	372	109
	372	110
	372	324
	372	325
	372	326
	372	350
	372	351
	372	352
	372	398
	372	399
	373	0
	373	1
	373	92
	373	93
	373	94
	373	108
	373	109
	373	110
	373	324
	373	325
	373	326
	373	350
	373	351
	373	352
	373	398
	373	399
	374	0
	374	1
	374	92
	374	93
	374	94
	374	108
	374	109
	374	110
	374	324
	374	325
	374	326
	374	350
	374	351
	374	352
	374	398
	374	399
	375	0
	375	1
	375	93
	375	94
	375	95
	375	108
	375	109
	375	110
	375	325
	375	326
	375	327
	375	349
	375	350
	375	351
	375	398
	375	399
	376	0
	376	1
	376	93
	376	94
	376	95
	376	108
	376	109
	376	110
	376	325
	376	326
	376	327
	376	349
	376	350
	376	351
	376	398
	376	399
	377	0
	377	1
	377	94
	377	95
	377	96
	377	107
	377	108
	377	109
	377	325
	377	326
	377	327
	377	348
	377	349
	377	350
	377	398
	377	399
	378	0
	378	1
	378	94
	378	95
	378	96
	378	97
	378	98
	378	99
	378	106
	378	107
	378	108
	378	109
	378	325
	378	326
	378	327
	378	348
	378	349
	378	350
	378	398
	378	399
	379	0
	379	1
	379	95
	379	96
	379	97
	379	98
	379	99
	379	100
	379	101
	379	102
	379	103
	379	104
	379	105
	379	106
	379	107
	379	108
	379	109
	379	325
	379	326
	379	327
	379	347
	379	348
	379	349
	379	398
	379	399
	380	0
	380	1
	380	97
	380	98
	380	99
	380	100
	380	101
	380	102
	380	103
	380	104
	380	105
	380	106
	380	107
	380	108
	380	326
	380	327
	380	328
	380	347
	380	348
	380	349
	380	398
	380	399
	381	0
	381	1
	381	100
	381	101
	381	102
	381	103
	381	104
	381	105
	381	106
	381	326
	381	327
	381	328
	381	346
	381	347
	381	348
	381	398
	381	399
	382	0
	382	1
	382	326
	382	327
	382	328
	382	345
	382	346
	382	347
	382	348
	382	397
	382	398
	382	399
	383	0
	383	1
	383	327
	383	328
	383	329
	383	344
	383	345
	383	346
	383	347
	383	397
	383	398
	383	399
	384	0
	384	1
	384	328
	384	329
	384	330
	384	343
	384	344
	384	345
	384	346
	384	397
	384	398
	384	399
	385	0
	385	1
	385	2
	385	328
	385	329
	385	330
	385	331
	385	341
	385	342
	385	343
	385	344
	385	397
	385	398
	385	399
	386	0
	386	1
	386	2
	386	329
	386	330
	386	331
	386	332
	386	333
	386	334
	386	338
	386	339
	386	340
	386	341
	386	342
	386	343
	386	397
	386	398
	386	399
	387	0
	387	1
	387	2
	387	330
	387	331
	387	332
	387	333
	387	334
	387	335
	387	336
	387	337
	387	338
	387	339
	387	340
	387	341
	387	342
	387	397
	387	398
	387	399
	388	0
	388	1
	388	2
	388	331
	388	332
	388	333
	388	334
	388	335
	388	336
	388	337
	388	338
	388	339
	388	340
}
BARRIER {
	388	397
	388	398
	388	399
	389	0
	389	1
	389	2
	389	334
	389	335
	389	336
	389	337
	389	397
	389	398
	389	399
	390	0
	390	1
	390	2
	390	397
	390	398
	390	399
	391	0
	391	1
	391	2
	391	397
	391	398
	391	399
	392	0
	392	1
	392	2
	392	397
	392	398
	392	399
	393	0
	393	1
	393	2
	393	397
	393	398
	393	399
	394	0
	394	1
	394	2
	394	397
	394	398
	394	399
	395	0
	395	1
	395	2
	395	397
	395	398
	395	399
	396	0
	396	1
	396	2
	396	397
	396	398
	396	399
	397	0
	397	1
	397	2
	397	397
	397	398
	397	399
	398	0
	398	1
	398	2
	398	397
	398	398
	398	399
	399	0
	399	1
	399	2
	399	397
	399	398
	399	399
	400	0
	400	1
	400	2
	400	396
	400	397
	400	398
	401	0
	401	1
	401	2
	401	396
	401	397
	401	398
	402	1
	402	2
	402	3
	402	396
	402	397
	402	398
	403	1
	403	2
	403	3
	403	396
	403	397
	403	398
	404	1
	404	2
	404	3
	404	396
	404	397
	404	398
	405	1
	405	2
	405	3
	405	396
	405	397
	405	398
	406	1
	406	2
	406	3
	406	396
	406	397
	406	398
	407	1
	407	2
	407	3
	407	396
	407	397
	407	398
	408	1
	408	2
	408	3
	408	396
	408	397
	408	398
	409	1
	409	2
	409	3
	409	396
	409	397
	409	398
	410	1
	410	2
	410	3
	410	396
	410	397
	410	398
	411	1
	411	2
	411	3
	411	395
	411	396
	411	397
	412	1
	412	2
	412	3
	412	395
	412	396
	412	397
	413	2
	413	3
	413	4
	413	395
	413	396
	413	397
	414	2
	414	3
	414	4
	414	395
	414	396
	414	397
	415	2
	415	3
	415	4
	415	395
	415	396
	415	397
	416	2
	416	3
	416	4
	416	395
	416	396
	416	397
	417	2
	417	3
	417	4
	417	395
	417	396
	417	397
	418	2
	418	3
	418	4
	418	394
	418	395
	418	396
	419	2
	419	3
	419	4
	419	394
	419	395
	419	396
	420	2
	420	3
	420	4
	420	394
	420	395
	420	396
	421	3
	421	4
	421	5
	421	394
	421	395
	421	396
	422	3
	422	4
	422	5
	422	394
	422	395
	422	396
	423	3
	423	4
	423	5
	423	394
	423	395
	423	396
	424	3
	424	4
	424	5
	424	394
	424	395
	424	396
	425	3
	425	4
	425	5
	425	393
	425	394
	425	395
	426	3
	426	4
	426	5
	426	393
	426	394
	426	395
	427	3
	427	4
	427	5
	427	393
	427	394
	427	395
	428	4
	428	5
	428	6
	428	393
	428	394
	428	395
	429	4
	429	5
	429	6
	429	393
	429	394
	429	395
	430	4
	430	5
	430	6
	430	393
	430	394
	430	395
	431	4
	431	5
	431	6
	431	393
	431	394
	431	395
	432	4
	432	5
	432	6
	432	393
	432	394
	432	395
	433	4
	433	5
	433	6
	433	392
	433	393
	433	394
	434	4
	434	5
	434	6
	434	392
	434	393
	434	394
	435	4
	435	5
	435	6
	435	392
	435	393
	435	394
	436	5
	436	6
	436	7
	436	392
	436	393
	436	394
	437	5
	437	6
	437	7
	437	392
	437	393
	437	394
	438	5
	438	6
	438	7
	438	392
	438	393
	438	394
	439	5
	439	6
	439	7
	439	392
	439	393
	439	394
	440	5
	440	6
	440	7
	440	392
	440	393
	440	394
	441	5
	441	6
	441	7
	441	391
	441	392
	441	393
	442	5
	442	6
	442	7
	442	391
	442	392
	442	393
	443	6
	443	7
	443	8
	443	391
	443	392
	443	393
	444	6
	444	7
	444	8
	444	391
	444	392
	444	393
	445	6
	445	7
	445	8
	445	391
	445	392
	445	393
	446	6
	446	7
	446	8
	446	391
	446	392
	446	393
	447	6
	447	7
	447	8
	447	391
	447	392
	447	393
	448	6
	448	7
	448	8
	448	390
	448	391
	448	392
	449	6
	449	7
	449	8
	449	390
	449	391
	449	392
	450	6
	450	7
	450	8
	450	390
	450	391
	450	392
	451	7
	451	8
	451	9
	451	390
	451	391
	451	392
	452	7
	452	8
	452	9
	452	389
	452	390
	452	391
	453	7
	453	8
	453	9
	453	389
	453	390
	453	391
	454	7
	454	8
	454	9
	454	389
	454	390
	454	391
	455	8
	455	9
	455	10
	455	389
	455	390
	455	391
	456	8
	456	9
	456	10
	456	388
	456	389
	456	390
	457	8
	457	9
	457	10
	457	388
	457	389
	457	390
	458	8
	458	9
	458	10
	458	388
	458	389
	458	390
	459	9
	459	10
	459	11
	459	388
	459	389
	459	390
	460	9
	460	10
	460	11
	460	388
	460	389
	460	390
	461	9
	461	10
	461	11
	461	388
	461	389
	461	390
	462	9
	462	10
	462	11
	462	388
	462	389
	462	390
	463	9
	463	10
	463	11
	463	388
	463	389
	463	390
	464	9
	464	10
	464	11
	464	387
	464	388
	464	389
	465	9
	465	10
	465	11
	465	387
	465	388
	465	389
	466	9
	466	10
	466	11
	466	387
	466	388
	466	389
	467	10
	467	11
	467	12
	467	387
	467	388
	467	389
	468	10
	468	11
	468	12
	468	386
	468	387
	468	388
	469	10
	469	11
	469	12
	469	386
	469	387
	469	388
	470	10
	470	11
	470	12
	470	256
	470	257
	470	258
	470	259
}
BARRIER {
	470	260
	470	386
	470	387
	470	388
	471	11
	471	12
	471	13
	471	253
	471	254
	471	255
	471	256
	471	257
	471	258
	471	259
	471	260
	471	261
	471	386
	471	387
	471	388
	472	11
	472	12
	472	13
	472	251
	472	252
	472	253
	472	254
	472	255
	472	256
	472	257
	472	258
	472	259
	472	260
	472	261
	472	262
	472	385
	472	386
	472	387
	473	11
	473	12
	473	13
	473	250
	473	251
	473	252
	473	253
	473	254
	473	255
	473	260
	473	261
	473	262
	473	263
	473	385
	473	386
	473	387
	474	11
	474	12
	474	13
	474	248
	474	249
	474	250
	474	251
	474	252
	474	262
	474	263
	474	264
	474	385
	474	386
	474	387
	475	12
	475	13
	475	14
	475	247
	475	248
	475	249
	475	250
	475	263
	475	264
	475	265
	475	385
	475	386
	475	387
	476	12
	476	13
	476	14
	476	246
	476	247
	476	248
	476	249
	476	264
	476	265
	476	266
	476	384
	476	385
	476	386
	477	12
	477	13
	477	14
	477	246
	477	247
	477	248
	477	265
	477	266
	477	267
	477	384
	477	385
	477	386
	478	12
	478	13
	478	14
	478	245
	478	246
	478	247
	478	266
	478	267
	478	268
	478	269
	478	384
	478	385
	478	386
	479	12
	479	13
	479	14
	479	245
	479	246
	479	247
	479	267
	479	268
	479	269
	479	270
	479	384
	479	385
	479	386
	480	13
	480	14
	480	15
	480	245
	480	246
	480	247
	480	267
	480	268
	480	269
	480	270
	480	384
	480	385
	480	386
	481	13
	481	14
	481	15
	481	244
	481	245
	481	246
	481	267
	481	268
	481	269
	481	270
	481	271
	481	383
	481	384
	481	385
	482	13
	482	14
	482	15
	482	244
	482	245
	482	246
	482	267
	482	268
	482	269
	482	270
	482	271
	482	383
	482	384
	482	385
	483	13
	483	14
	483	15
	483	244
	483	245
	483	246
	483	267
	483	268
	483	269
	483	270
	483	271
	483	383
	483	384
	483	385
	484	14
	484	15
	484	16
	484	244
	484	245
	484	246
	484	266
	484	267
	484	268
	484	270
	484	383
	484	384
	484	385
	485	14
	485	15
	485	16
	485	244
	485	245
	485	246
	485	247
	485	266
	485	267
	485	268
	485	382
	485	383
	485	384
	486	14
	486	15
	486	16
	486	245
	486	246
	486	247
	486	248
	486	266
	486	267
	486	268
	486	382
	486	383
	486	384
	487	14
	487	15
	487	16
	487	246
	487	247
	487	248
	487	249
	487	250
	487	265
	487	266
	487	267
	487	382
	487	383
	487	384
	488	15
	488	16
	488	17
	488	248
	488	249
	488	250
	488	251
	488	252
	488	264
	488	265
	488	266
	488	267
	488	382
	488	383
	488	384
	489	15
	489	16
	489	17
	489	249
	489	250
	489	251
	489	252
	489	253
	489	254
	489	264
	489	265
	489	266
	489	381
	489	382
	489	383
	490	15
	490	16
	490	17
	490	251
	490	252
	490	253
	490	254
	490	255
	490	256
	490	263
	490	264
	490	265
	490	381
	490	382
	490	383
	491	15
	491	16
	491	17
	491	252
	491	253
	491	254
	491	255
	491	256
	491	257
	491	258
	491	262
	491	263
	491	264
	491	381
	491	382
	491	383
	492	16
	492	17
	492	18
	492	255
	492	256
	492	257
	492	258
	492	259
	492	260
	492	261
	492	262
	492	263
	492	264
	492	381
	492	382
	492	383
	493	16
	493	17
	493	18
	493	256
	493	257
	493	258
	493	259
	493	260
	493	261
	493	262
	493	263
	493	264
	493	380
	493	381
	493	382
	494	16
	494	17
	494	18
	494	258
	494	259
	494	260
	494	261
	494	262
	494	263
	494	380
	494	381
	494	382
	495	16
	495	17
	495	18
	495	380
	495	381
	495	382
	496	17
	496	18
	496	19
	496	380
	496	381
	496	382
	497	17
	497	18
	497	19
	497	379
	497	380
	497	381
	498	17
	498	18
	498	19
	498	379
	498	380
	498	381
	499	17
	499	18
	499	19
	499	379
	499	380
	499	381
	500	17
	500	18
	500	19
	500	379
	500	380
	500	381
	501	18
	501	19
	501	20
	501	379
	501	380
	501	381
	502	18
	502	19
	502	20
	502	378
	502	379
	502	380
	503	18
	503	19
	503	20
	503	207
	503	208
	503	209
	503	210
	503	345
	503	378
	503	379
	503	380
	504	18
	504	19
	504	20
	504	206
	504	207
	504	208
	504	209
	504	210
	504	211
	504	212
	504	213
	504	214
	504	343
	504	344
	504	345
	504	346
	504	378
	504	379
	504	380
	505	19
	505	20
	505	21
	505	201
	505	202
	505	203
	505	204
	505	205
	505	206
	505	207
	505	208
	505	209
	505	210
	505	211
	505	212
	505	213
	505	214
	505	215
	505	216
	505	217
	505	218
	505	219
	505	341
	505	342
	505	343
	505	344
	505	345
	505	346
	505	347
	505	378
	505	379
	505	380
	506	19
	506	20
	506	21
	506	200
	506	201
	506	202
	506	203
	506	204
	506	205
	506	206
	506	207
	506	208
	506	209
	506	211
	506	212
	506	213
	506	214
	506	215
	506	216
	506	217
	506	218
	506	219
	506	220
	506	221
	506	340
	506	341
	506	342
	506	343
	506	344
	506	345
	506	346
	506	347
	506	348
	506	377
	506	378
	506	379
	507	19
	507	20
	507	21
	507	199
	507	200
	507	201
	507	202
	507	203
	507	204
	507	205
	507	206
}
BARRIER {
	507	207
	507	208
	507	209
	507	215
	507	216
	507	217
	507	218
	507	219
	507	220
	507	221
	507	222
	507	223
	507	224
	507	225
	507	226
	507	339
	507	340
	507	341
	507	342
	507	343
	507	344
	507	345
	507	346
	507	347
	507	377
	507	378
	507	379
	508	20
	508	21
	508	22
	508	199
	508	200
	508	201
	508	206
	508	207
	508	208
	508	220
	508	221
	508	222
	508	223
	508	224
	508	225
	508	226
	508	227
	508	228
	508	229
	508	230
	508	231
	508	232
	508	338
	508	339
	508	340
	508	342
	508	343
	508	344
	508	345
	508	376
	508	377
	508	378
	509	20
	509	21
	509	22
	509	198
	509	199
	509	200
	509	201
	509	222
	509	223
	509	224
	509	225
	509	226
	509	227
	509	228
	509	229
	509	230
	509	231
	509	232
	509	233
	509	234
	509	235
	509	338
	509	339
	509	340
	509	342
	509	343
	509	344
	509	376
	509	377
	509	378
	510	21
	510	22
	510	23
	510	198
	510	199
	510	200
	510	201
	510	227
	510	228
	510	229
	510	230
	510	231
	510	232
	510	233
	510	234
	510	235
	510	236
	510	237
	510	238
	510	337
	510	338
	510	339
	510	342
	510	343
	510	344
	510	376
	510	377
	510	378
	511	21
	511	22
	511	23
	511	199
	511	200
	511	201
	511	233
	511	234
	511	235
	511	236
	511	237
	511	238
	511	239
	511	240
	511	336
	511	337
	511	338
	511	342
	511	343
	511	344
	511	375
	511	376
	511	377
	512	21
	512	22
	512	23
	512	109
	512	110
	512	111
	512	199
	512	200
	512	201
	512	236
	512	237
	512	238
	512	239
	512	240
	512	241
	512	336
	512	337
	512	338
	512	341
	512	342
	512	343
	512	375
	512	376
	512	377
	513	21
	513	22
	513	23
	513	108
	513	109
	513	110
	513	111
	513	112
	513	113
	513	114
	513	199
	513	200
	513	201
	513	239
	513	240
	513	241
	513	335
	513	336
	513	337
	513	341
	513	342
	513	343
	513	375
	513	376
	513	377
	514	22
	514	23
	514	24
	514	106
	514	107
	514	108
	514	109
	514	110
	514	111
	514	112
	514	113
	514	114
	514	115
	514	116
	514	199
	514	200
	514	201
	514	239
	514	240
	514	241
	514	335
	514	336
	514	337
	514	341
	514	342
	514	343
	514	375
	514	376
	514	377
	515	22
	515	23
	515	24
	515	105
	515	106
	515	107
	515	108
	515	112
	515	113
	515	114
	515	115
	515	116
	515	117
	515	118
	515	198
	515	199
	515	200
	515	201
	515	239
	515	240
	515	241
	515	334
	515	335
	515	336
	515	341
	515	342
	515	343
	515	374
	515	375
	515	376
	516	22
	516	23
	516	24
	516	104
	516	105
	516	106
	516	107
	516	115
	516	116
	516	117
	516	118
	516	119
	516	198
	516	199
	516	200
	516	239
	516	240
	516	241
	516	334
	516	335
	516	336
	516	340
	516	341
	516	342
	516	343
	516	374
	516	375
	516	376
	517	22
	517	23
	517	24
	517	103
	517	104
	517	105
	517	117
	517	118
	517	119
	517	199
	517	200
	517	201
	517	239
	517	240
	517	241
	517	333
	517	334
	517	335
	517	340
	517	341
	517	342
	517	374
	517	375
	517	376
	518	22
	518	23
	518	24
	518	102
	518	103
	518	104
	518	117
	518	118
	518	119
	518	198
	518	199
	518	200
	518	201
	518	238
	518	239
	518	240
	518	333
	518	334
	518	335
	518	340
	518	341
	518	342
	518	374
	518	375
	518	376
	519	23
	519	24
	519	25
	519	101
	519	102
	519	103
	519	118
	519	119
	519	120
	519	198
	519	199
	519	200
	519	237
	519	238
	519	239
	519	333
	519	334
	519	335
	519	339
	519	340
	519	341
	519	342
	519	374
	519	375
	519	376
	520	23
	520	24
	520	25
	520	100
	520	101
	520	102
	520	119
	520	120
	520	121
	520	198
	520	199
	520	200
	520	237
	520	238
	520	239
	520	333
	520	334
	520	335
	520	339
	520	340
	520	341
	520	373
	520	374
	520	375
	521	24
	521	25
	521	26
	521	100
	521	101
	521	102
	521	119
	521	120
	521	121
	521	197
	521	198
	521	199
	521	236
	521	237
	521	238
	521	333
	521	334
	521	335
	521	339
	521	340
	521	341
	521	373
	521	374
	521	375
	522	24
	522	25
	522	26
	522	100
	522	101
	522	102
	522	119
	522	120
	522	121
	522	197
	522	198
	522	199
	522	236
	522	237
	522	238
	522	332
	522	333
	522	334
	522	339
	522	340
	522	341
	522	372
	522	373
	522	374
	523	25
	523	26
	523	27
	523	99
	523	100
	523	101
	523	119
	523	120
	523	121
	523	196
	523	197
	523	198
	523	235
	523	236
	523	237
	523	332
	523	333
	523	334
	523	339
	523	340
	523	341
	523	372
	523	373
	523	374
	524	25
	524	26
	524	27
	524	99
	524	100
	524	101
	524	119
	524	120
	524	121
	524	196
	524	197
	524	198
	524	235
	524	236
	524	237
	524	331
	524	332
	524	333
	524	339
	524	340
	524	341
	524	371
	524	372
	524	373
	525	25
	525	26
	525	27
	525	98
	525	99
	525	100
	525	119
	525	120
	525	121
	525	196
	525	197
	525	198
	525	235
	525	236
	525	237
	525	331
	525	332
	525	333
	525	339
	525	340
	525	341
	525	371
	525	372
	525	373
	526	25
	526	26
	526	27
	526	98
	526	99
	526	100
}
BARRIER {
	526	118
	526	119
	526	120
	526	121
	526	196
	526	197
	526	198
	526	234
	526	235
	526	236
	526	331
	526	332
	526	333
	526	339
	526	340
	526	341
	526	371
	526	372
	526	373
	527	25
	527	26
	527	27
	527	98
	527	99
	527	100
	527	117
	527	118
	527	119
	527	120
	527	121
	527	196
	527	197
	527	198
	527	234
	527	235
	527	236
	527	330
	527	331
	527	332
	527	339
	527	340
	527	341
	527	371
	527	372
	527	373
	528	26
	528	27
	528	28
	528	98
	528	99
	528	100
	528	117
	528	118
	528	119
	528	120
	528	196
	528	197
	528	198
	528	233
	528	234
	528	235
	528	330
	528	331
	528	332
	528	339
	528	340
	528	341
	528	371
	528	372
	528	373
	529	26
	529	27
	529	28
	529	97
	529	98
	529	99
	529	116
	529	117
	529	118
	529	119
	529	196
	529	197
	529	198
	529	232
	529	233
	529	234
	529	330
	529	331
	529	332
	529	338
	529	339
	529	340
	529	370
	529	371
	529	372
	530	27
	530	28
	530	29
	530	97
	530	98
	530	99
	530	115
	530	116
	530	117
	530	118
	530	196
	530	197
	530	198
	530	231
	530	232
	530	233
	530	329
	530	330
	530	331
	530	338
	530	339
	530	340
	530	370
	530	371
	530	372
	531	27
	531	28
	531	29
	531	97
	531	98
	531	99
	531	113
	531	114
	531	115
	531	116
	531	117
	531	196
	531	197
	531	198
	531	231
	531	232
	531	233
	531	329
	531	330
	531	331
	531	338
	531	339
	531	340
	531	369
	531	370
	531	371
	532	28
	532	29
	532	30
	532	97
	532	98
	532	99
	532	111
	532	112
	532	113
	532	114
	532	115
	532	116
	532	196
	532	197
	532	198
	532	199
	532	231
	532	232
	532	233
	532	329
	532	330
	532	331
	532	338
	532	339
	532	340
	532	369
	532	370
	532	371
	533	28
	533	29
	533	30
	533	97
	533	98
	533	99
	533	110
	533	111
	533	112
	533	113
	533	114
	533	115
	533	197
	533	198
	533	199
	533	231
	533	232
	533	233
	533	329
	533	330
	533	331
	533	338
	533	339
	533	340
	533	368
	533	369
	533	370
	534	28
	534	29
	534	30
	534	97
	534	98
	534	99
	534	110
	534	111
	534	112
	534	113
	534	198
	534	199
	534	200
	534	201
	534	230
	534	231
	534	232
	534	328
	534	329
	534	330
	534	338
	534	339
	534	340
	534	368
	534	369
	534	370
	535	29
	535	30
	535	31
	535	97
	535	98
	535	99
	535	100
	535	109
	535	110
	535	111
	535	112
	535	199
	535	200
	535	201
	535	202
	535	228
	535	229
	535	230
	535	231
	535	328
	535	329
	535	330
	535	338
	535	339
	535	340
	535	367
	535	368
	535	369
	536	29
	536	30
	536	31
	536	98
	536	99
	536	100
	536	101
	536	107
	536	108
	536	109
	536	110
	536	111
	536	200
	536	201
	536	202
	536	203
	536	204
	536	226
	536	227
	536	228
	536	229
	536	230
	536	231
	536	328
	536	329
	536	330
	536	338
	536	339
	536	340
	536	367
	536	368
	536	369
	537	30
	537	31
	537	32
	537	99
	537	100
	537	101
	537	102
	537	103
	537	104
	537	105
	537	106
	537	107
	537	108
	537	109
	537	201
	537	202
	537	203
	537	204
	537	205
	537	206
	537	207
	537	223
	537	224
	537	225
	537	226
	537	227
	537	228
	537	229
	537	230
	537	327
	537	328
	537	329
	537	337
	537	338
	537	339
	537	366
	537	367
	537	368
	538	30
	538	31
	538	32
	538	100
	538	101
	538	102
	538	103
	538	104
	538	105
	538	106
	538	107
	538	108
	538	203
	538	204
	538	205
	538	206
	538	207
	538	208
	538	209
	538	210
	538	211
	538	212
	538	213
	538	214
	538	215
	538	216
	538	217
	538	218
	538	219
	538	220
	538	221
	538	222
	538	223
	538	224
	538	225
	538	226
	538	227
	538	228
	538	327
	538	328
	538	329
	538	337
	538	338
	538	339
	538	366
	538	367
	538	368
	539	30
	539	31
	539	32
	539	101
	539	102
	539	103
	539	104
	539	105
	539	106
	539	107
	539	205
	539	206
	539	207
	539	208
	539	209
	539	210
	539	211
	539	212
	539	213
	539	214
	539	215
	539	216
	539	217
	539	218
	539	219
	539	220
	539	221
	539	222
	539	223
	539	224
	539	225
	539	327
	539	328
	539	329
	539	337
	539	338
	539	339
	539	366
	539	367
	539	368
	540	30
	540	31
	540	32
	540	207
	540	208
	540	209
	540	210
	540	211
	540	212
	540	213
	540	214
	540	215
	540	216
	540	217
	540	218
	540	219
	540	220
	540	221
	540	222
	540	223
	540	326
	540	327
	540	328
	540	337
	540	338
	540	339
	540	366
	540	367
	540	368
	541	30
	541	31
	541	32
	541	326
	541	327
	541	328
	541	336
	541	337
	541	338
	541	366
	541	367
	541	368
	542	31
	542	32
	542	33
	542	326
	542	327
	542	328
	542	336
	542	337
	542	338
	542	366
	542	367
	542	368
	543	31
	543	32
	543	33
	543	326
	543	327
	543	328
	543	336
	543	337
	543	338
	543	365
	543	366
	543	367
	544	31
	544	32
	544	33
	544	326
	544	327
	544	328
	544	336
	544	337
	544	338
	544	365
	544	366
	544	367
	545	32
	545	33
	545	34
	545	326
	545	327
	545	328
	545	335
	545	336
	545	337
	545	364
	545	365
}
BARRIER {
	545	366
	546	32
	546	33
	546	34
	546	325
	546	326
	546	327
	546	335
	546	336
	546	337
	546	364
	546	365
	546	366
	547	33
	547	34
	547	35
	547	325
	547	326
	547	327
	547	335
	547	336
	547	337
	547	363
	547	364
	547	365
	548	33
	548	34
	548	35
	548	325
	548	326
	548	327
	548	335
	548	336
	548	337
	548	363
	548	364
	548	365
	549	34
	549	35
	549	36
	549	324
	549	325
	549	326
	549	335
	549	336
	549	337
	549	363
	549	364
	549	365
	550	34
	550	35
	550	36
	550	324
	550	325
	550	326
	550	334
	550	335
	550	336
	550	362
	550	363
	550	364
	551	35
	551	36
	551	37
	551	323
	551	324
	551	325
	551	334
	551	335
	551	336
	551	362
	551	363
	551	364
	552	35
	552	36
	552	37
	552	322
	552	323
	552	324
	552	334
	552	335
	552	336
	552	361
	552	362
	552	363
	553	35
	553	36
	553	37
	553	322
	553	323
	553	324
	553	334
	553	335
	553	336
	553	361
	553	362
	553	363
	554	36
	554	37
	554	38
	554	321
	554	322
	554	323
	554	333
	554	334
	554	335
	554	360
	554	361
	554	362
	555	36
	555	37
	555	38
	555	321
	555	322
	555	323
	555	333
	555	334
	555	335
	555	360
	555	361
	555	362
	556	37
	556	38
	556	39
	556	321
	556	322
	556	323
	556	332
	556	333
	556	334
	556	360
	556	361
	556	362
	557	37
	557	38
	557	39
	557	321
	557	322
	557	323
	557	332
	557	333
	557	334
	557	359
	557	360
	557	361
	558	37
	558	38
	558	39
	558	320
	558	321
	558	322
	558	332
	558	333
	558	334
	558	359
	558	360
	558	361
	559	38
	559	39
	559	40
	559	319
	559	320
	559	321
	559	331
	559	332
	559	333
	559	358
	559	359
	559	360
	560	38
	560	39
	560	40
	560	319
	560	320
	560	321
	560	330
	560	331
	560	332
	560	358
	560	359
	560	360
	561	39
	561	40
	561	41
	561	319
	561	320
	561	321
	561	329
	561	330
	561	331
	561	358
	561	359
	561	360
	562	39
	562	40
	562	41
	562	318
	562	319
	562	320
	562	327
	562	328
	562	329
	562	330
	562	357
	562	358
	562	359
	563	39
	563	40
	563	41
	563	318
	563	319
	563	320
	563	326
	563	327
	563	328
	563	329
	563	357
	563	358
	563	359
	564	40
	564	41
	564	42
	564	317
	564	318
	564	319
	564	323
	564	324
	564	325
	564	326
	564	327
	564	328
	564	356
	564	357
	564	358
	565	40
	565	41
	565	42
	565	317
	565	318
	565	319
	565	320
	565	321
	565	322
	565	323
	565	324
	565	325
	565	326
	565	356
	565	357
	565	358
	566	41
	566	42
	566	43
	566	318
	566	319
	566	320
	566	321
	566	322
	566	323
	566	324
	566	325
	566	356
	566	357
	566	358
	567	41
	567	42
	567	43
	567	320
	567	321
	567	322
	567	355
	567	356
	567	357
	568	42
	568	43
	568	44
	568	354
	568	355
	568	356
	569	42
	569	43
	569	44
	569	354
	569	355
	569	356
	570	43
	570	44
	570	45
	570	353
	570	354
	570	355
	571	44
	571	45
	571	46
	571	352
	571	353
	571	354
	572	44
	572	45
	572	46
	572	352
	572	353
	572	354
	573	44
	573	45
	573	46
	573	352
	573	353
	573	354
	574	45
	574	46
	574	47
	574	351
	574	352
	574	353
	575	45
	575	46
	575	47
	575	351
	575	352
	575	353
	576	46
	576	47
	576	48
	576	351
	576	352
	576	353
	577	46
	577	47
	577	48
	577	350
	577	351
	577	352
	578	46
	578	47
	578	48
	578	350
	578	351
	578	352
	579	47
	579	48
	579	49
	579	349
	579	350
	579	351
	580	47
	580	48
	580	49
	580	349
	580	350
	580	351
	581	48
	581	49
	581	50
	581	349
	581	350
	581	351
	582	48
	582	49
	582	50
	582	348
	582	349
	582	350
	583	49
	583	50
	583	51
	583	123
	583	124
	583	125
	583	126
	583	347
	583	348
	583	349
	584	49
	584	50
	584	51
	584	118
	584	119
	584	120
	584	121
	584	122
	584	123
	584	124
	584	125
	584	126
	584	127
	584	128
	584	347
	584	348
	584	349
	585	50
	585	51
	585	52
	585	114
	585	115
	585	116
	585	117
	585	118
	585	119
	585	120
	585	121
	585	122
	585	123
	585	124
	585	125
	585	126
	585	127
	585	128
	585	129
	585	346
	585	347
	585	348
	586	51
	586	52
	586	53
	586	112
	586	113
	586	114
	586	115
	586	116
	586	117
	586	118
	586	119
	586	120
	586	121
	586	122
	586	126
	586	127
	586	128
	586	129
	586	130
	586	345
	586	346
	586	347
	587	51
	587	52
	587	53
	587	111
	587	112
	587	113
	587	114
	587	115
	587	116
	587	117
	587	128
	587	129
	587	130
	587	131
	587	345
	587	346
	587	347
	588	52
	588	53
	588	54
	588	111
	588	112
	588	113
	588	130
	588	131
	588	132
	588	133
	588	344
	588	345
	588	346
	589	52
	589	53
	589	54
	589	110
	589	111
	589	112
	589	113
	589	131
	589	132
	589	133
	589	134
	589	135
	589	136
	589	137
	589	138
	589	139
	589	140
	589	141
	589	142
	589	143
	589	144
	589	145
	589	146
	589	344
	589	345
	589	346
	590	53
	590	54
	590	55
	590	110
	590	111
	590	112
	590	113
	590	114
	590	115
	590	132
}
BARRIER {
	590	133
	590	134
	590	135
	590	136
	590	137
	590	138
	590	139
	590	140
	590	141
	590	142
	590	143
	590	144
	590	145
	590	146
	590	147
	590	148
	590	149
	590	343
	590	344
	590	345
	591	54
	591	55
	591	56
	591	111
	591	112
	591	113
	591	114
	591	115
	591	116
	591	133
	591	134
	591	135
	591	136
	591	137
	591	138
	591	139
	591	140
	591	141
	591	142
	591	143
	591	144
	591	145
	591	146
	591	147
	591	148
	591	149
	591	150
	591	151
	591	342
	591	343
	591	344
	592	54
	592	55
	592	56
	592	114
	592	115
	592	116
	592	117
	592	118
	592	147
	592	148
	592	149
	592	150
	592	151
	592	152
	592	153
	592	342
	592	343
	592	344
	593	54
	593	55
	593	56
	593	89
	593	90
	593	116
	593	117
	593	118
	593	119
	593	150
	593	151
	593	152
	593	153
	593	154
	593	155
	593	156
	593	157
	593	342
	593	343
	593	344
	594	55
	594	56
	594	57
	594	88
	594	89
	594	90
	594	91
	594	117
	594	118
	594	119
	594	120
	594	121
	594	122
	594	152
	594	153
	594	154
	594	155
	594	156
	594	157
	594	158
	594	159
	594	341
	594	342
	594	343
	595	55
	595	56
	595	57
	595	88
	595	89
	595	90
	595	91
	595	92
	595	93
	595	119
	595	120
	595	121
	595	122
	595	123
	595	154
	595	155
	595	156
	595	157
	595	158
	595	159
	595	160
	595	161
	595	162
	595	341
	595	342
	595	343
	596	56
	596	57
	596	58
	596	88
	596	89
	596	90
	596	91
	596	92
	596	93
	596	94
	596	95
	596	120
	596	121
	596	122
	596	123
	596	124
	596	125
	596	126
	596	158
	596	159
	596	160
	596	161
	596	162
	596	163
	596	164
	596	165
	596	166
	596	167
	596	341
	596	342
	596	343
	597	56
	597	57
	597	58
	597	88
	597	89
	597	90
	597	91
	597	92
	597	93
	597	94
	597	95
	597	96
	597	123
	597	124
	597	125
	597	126
	597	127
	597	128
	597	160
	597	161
	597	162
	597	163
	597	164
	597	165
	597	166
	597	167
	597	168
	597	169
	597	170
	597	171
	597	172
	597	340
	597	341
	597	342
	598	57
	598	58
	598	59
	598	88
	598	89
	598	90
	598	93
	598	94
	598	95
	598	96
	598	124
	598	125
	598	126
	598	127
	598	128
	598	129
	598	130
	598	163
	598	164
	598	165
	598	166
	598	167
	598	168
	598	169
	598	170
	598	171
	598	172
	598	173
	598	174
	598	175
	598	176
	598	177
	598	178
	598	179
	598	180
	598	339
	598	340
	598	341
	599	57
	599	58
	599	59
	599	88
	599	89
	599	90
	599	91
	599	94
	599	95
	599	96
	599	97
	599	127
	599	128
	599	129
	599	130
	599	131
	599	132
	599	168
	599	169
	599	170
	599	171
	599	172
	599	173
	599	174
	599	175
	599	176
	599	177
	599	178
	599	179
	599	180
	599	181
	599	182
	599	183
	599	184
	599	339
	599	340
	599	341
	600	58
	600	59
	600	60
	600	89
	600	90
	600	91
	600	94
	600	95
	600	96
	600	97
	600	128
	600	129
	600	130
	600	131
	600	132
	600	133
	600	173
	600	174
	600	175
	600	176
	600	177
	600	178
	600	179
	600	180
	600	181
	600	182
	600	183
	600	184
	600	185
	600	186
	600	187
	600	188
	600	189
	600	190
	600	338
	600	339
	600	340
	601	59
	601	60
	601	61
	601	89
	601	90
	601	91
	601	95
	601	96
	601	97
	601	98
	601	130
	601	131
	601	132
	601	133
	601	134
	601	135
	601	181
	601	182
	601	183
	601	184
	601	185
	601	186
	601	187
	601	188
	601	189
	601	190
	601	191
	601	192
	601	193
	601	337
	601	338
	601	339
	602	59
	602	60
	602	61
	602	89
	602	90
	602	91
	602	96
	602	97
	602	98
	602	133
	602	134
	602	135
	602	136
	602	137
	602	185
	602	186
	602	187
	602	188
	602	189
	602	190
	602	191
	602	192
	602	193
	602	194
	602	195
	602	196
	602	197
	602	198
	602	337
	602	338
	602	339
	603	60
	603	61
	603	62
	603	90
	603	91
	603	92
	603	96
	603	97
	603	98
	603	99
	603	134
	603	135
	603	136
	603	137
	603	138
	603	139
	603	190
	603	191
	603	192
	603	193
	603	194
	603	195
	603	196
	603	197
	603	198
	603	199
	603	200
	603	201
	603	202
	603	336
	603	337
	603	338
	604	60
	604	61
	604	62
	604	90
	604	91
	604	92
	604	97
	604	98
	604	99
	604	100
	604	136
	604	137
	604	138
	604	139
	604	140
	604	141
	604	142
	604	143
	604	194
	604	195
	604	196
	604	197
	604	198
	604	199
	604	200
	604	201
	604	202
	604	203
	604	204
	604	205
	604	206
	604	336
	604	337
	604	338
	605	61
	605	62
	605	63
	605	90
	605	91
	605	92
	605	98
	605	99
	605	100
	605	101
	605	138
	605	139
	605	140
	605	141
	605	142
	605	143
	605	144
	605	145
	605	146
	605	147
	605	198
	605	199
	605	200
	605	201
	605	202
	605	203
	605	204
	605	205
	605	206
	605	207
	605	208
	605	335
	605	336
	605	337
	606	62
	606	63
	606	64
	606	91
	606	92
	606	93
	606	99
	606	100
	606	101
	606	102
	606	140
	606	141
	606	142
	606	143
	606	144
	606	145
	606	146
	606	147
	606	148
	606	149
	606	150
}
BARRIER {
	606	151
	606	152
	606	203
	606	204
	606	205
	606	206
	606	207
	606	208
	606	209
	606	334
	606	335
	606	336
	607	62
	607	63
	607	64
	607	91
	607	92
	607	93
	607	100
	607	101
	607	102
	607	103
	607	143
	607	144
	607	145
	607	146
	607	147
	607	148
	607	149
	607	150
	607	151
	607	152
	607	153
	607	154
	607	155
	607	156
	607	157
	607	158
	607	159
	607	207
	607	208
	607	209
	607	334
	607	335
	607	336
	608	63
	608	64
	608	65
	608	91
	608	92
	608	93
	608	101
	608	102
	608	103
	608	148
	608	149
	608	150
	608	151
	608	152
	608	153
	608	154
	608	155
	608	156
	608	157
	608	158
	608	159
	608	160
	608	161
	608	162
	608	163
	608	164
	608	165
	608	208
	608	209
	608	210
	608	211
	608	333
	608	334
	608	335
	609	63
	609	64
	609	65
	609	92
	609	93
	609	94
	609	101
	609	102
	609	103
	609	153
	609	154
	609	155
	609	156
	609	157
	609	158
	609	159
	609	160
	609	161
	609	162
	609	163
	609	164
	609	165
	609	166
	609	167
	609	168
	609	169
	609	170
	609	171
	609	172
	609	209
	609	210
	609	211
	609	212
	609	213
	609	333
	609	334
	609	335
	610	64
	610	65
	610	66
	610	92
	610	93
	610	94
	610	101
	610	102
	610	103
	610	160
	610	161
	610	162
	610	163
	610	164
	610	165
	610	166
	610	167
	610	168
	610	169
	610	170
	610	171
	610	172
	610	173
	610	174
	610	175
	610	176
	610	177
	610	178
	610	210
	610	211
	610	212
	610	213
	610	214
	610	332
	610	333
	610	334
	611	65
	611	66
	611	67
	611	93
	611	94
	611	95
	611	101
	611	102
	611	103
	611	166
	611	167
	611	168
	611	169
	611	170
	611	171
	611	172
	611	173
	611	174
	611	175
	611	176
	611	177
	611	178
	611	179
	611	180
	611	181
	611	182
	611	212
	611	213
	611	214
	611	215
	611	331
	611	332
	611	333
	612	65
	612	66
	612	67
	612	94
	612	95
	612	96
	612	101
	612	102
	612	103
	612	173
	612	174
	612	175
	612	176
	612	177
	612	178
	612	179
	612	180
	612	181
	612	182
	612	183
	612	184
	612	185
	612	214
	612	215
	612	216
	612	217
	612	218
	612	331
	612	332
	612	333
	613	66
	613	67
	613	68
	613	95
	613	96
	613	97
	613	101
	613	102
	613	103
	613	179
	613	180
	613	181
	613	182
	613	183
	613	184
	613	185
	613	186
	613	187
	613	188
	613	215
	613	216
	613	217
	613	218
	613	219
	613	330
	613	331
	613	332
	614	67
	614	68
	614	69
	614	95
	614	96
	614	97
	614	98
	614	101
	614	102
	614	103
	614	183
	614	184
	614	185
	614	186
	614	187
	614	188
	614	189
	614	190
	614	191
	614	192
	614	193
	614	194
	614	195
	614	196
	614	197
	614	198
	614	199
	614	202
	614	203
	614	204
	614	216
	614	217
	614	218
	614	219
	614	220
	614	221
	614	222
	614	329
	614	330
	614	331
	615	68
	615	69
	615	70
	615	96
	615	97
	615	98
	615	99
	615	101
	615	102
	615	103
	615	186
	615	187
	615	188
	615	189
	615	190
	615	191
	615	192
	615	193
	615	194
	615	195
	615	196
	615	197
	615	198
	615	199
	615	200
	615	201
	615	202
	615	203
	615	204
	615	205
	615	206
	615	207
	615	208
	615	218
	615	219
	615	220
	615	221
	615	222
	615	223
	615	224
	615	328
	615	329
	615	330
	616	69
	616	70
	616	71
	616	97
	616	98
	616	99
	616	100
	616	101
	616	102
	616	103
	616	189
	616	190
	616	191
	616	192
	616	193
	616	194
	616	195
	616	196
	616	197
	616	198
	616	199
	616	200
	616	201
	616	202
	616	203
	616	204
	616	205
	616	206
	616	207
	616	208
	616	209
	616	210
	616	211
	616	212
	616	213
	616	220
	616	221
	616	222
	616	223
	616	224
	616	225
	616	226
	616	327
	616	328
	616	329
	617	69
	617	70
	617	71
	617	98
	617	99
	617	100
	617	101
	617	102
	617	103
	617	200
	617	201
	617	205
	617	206
	617	207
	617	208
	617	209
	617	210
	617	211
	617	212
	617	213
	617	214
	617	215
	617	216
	617	217
	617	223
	617	224
	617	225
	617	226
	617	227
	617	327
	617	328
	617	329
	618	70
	618	71
	618	72
	618	99
	618	100
	618	101
	618	102
	618	103
	618	209
	618	210
	618	211
	618	212
	618	213
	618	214
	618	215
	618	216
	618	217
	618	218
	618	219
	618	220
	618	224
	618	225
	618	226
	618	227
	618	228
	618	326
	618	327
	618	328
	619	70
	619	71
	619	72
	619	101
	619	102
	619	214
	619	215
	619	216
	619	217
	619	218
	619	219
	619	220
	619	221
	619	222
	619	226
	619	227
	619	228
	619	326
	619	327
	619	328
	620	71
	620	72
	620	73
	620	218
	620	219
	620	220
	620	221
	620	222
	620	223
	620	224
	620	225
	620	226
	620	227
	620	228
	620	229
	620	325
	620	326
	620	327
	621	72
	621	73
	621	74
	621	221
	621	222
	621	223
	621	224
	621	225
	621	226
	621	227
	621	228
	621	229
	621	324
	621	325
	621	326
	622	72
	622	73
	622	74
	622	223
	622	224
	622	225
	622	226
	622	227
	622	228
	622	229
	622	230
	622	324
	622	325
	622	326
	623	73
	623	74
	623	75
}
BARRIER {
	623	226
	623	227
	623	228
	623	229
	623	230
	623	231
	623	323
	623	324
	623	325
	624	74
	624	75
	624	76
	624	228
	624	229
	624	230
	624	231
	624	232
	624	322
	624	323
	624	324
	625	75
	625	76
	625	77
	625	229
	625	230
	625	231
	625	232
	625	233
	625	321
	625	322
	625	323
	626	76
	626	77
	626	78
	626	232
	626	233
	626	234
	626	320
	626	321
	626	322
	627	76
	627	77
	627	78
	627	233
	627	320
	627	321
	627	322
	628	77
	628	78
	628	79
	628	319
	628	320
	628	321
	629	78
	629	79
	629	80
	629	318
	629	319
	629	320
	630	79
	630	80
	630	81
	630	318
	630	319
	630	320
	631	79
	631	80
	631	81
	631	317
	631	318
	631	319
	632	80
	632	81
	632	82
	632	316
	632	317
	632	318
	633	81
	633	82
	633	83
	633	315
	633	316
	633	317
	634	82
	634	83
	634	84
	634	314
	634	315
	634	316
	635	83
	635	84
	635	85
	635	314
	635	315
	635	316
	636	83
	636	84
	636	85
	636	313
	636	314
	636	315
	637	84
	637	85
	637	86
	637	312
	637	313
	637	314
	638	85
	638	86
	638	87
	638	311
	638	312
	638	313
	639	86
	639	87
	639	88
	639	310
	639	311
	639	312
	640	87
	640	88
	640	89
	640	310
	640	311
	640	312
	641	87
	641	88
	641	89
	641	309
	641	310
	641	311
	642	88
	642	89
	642	90
	642	308
	642	309
	642	310
	643	89
	643	90
	643	91
	643	307
	643	308
	643	309
	644	90
	644	91
	644	92
	644	306
	644	307
	644	308
	645	91
	645	92
	645	93
	645	306
	645	307
	645	308
	646	92
	646	93
	646	94
	646	305
	646	306
	646	307
	647	93
	647	94
	647	95
	647	304
	647	305
	647	306
	648	94
	648	95
	648	96
	648	303
	648	304
	648	305
	649	95
	649	96
	649	97
	649	302
	649	303
	649	304
	650	96
	650	97
	650	98
	650	301
	650	302
	650	303
	651	97
	651	98
	651	99
	651	300
	651	301
	651	302
	652	98
	652	99
	652	100
	652	299
	652	300
	652	301
	653	99
	653	100
	653	101
	653	298
	653	299
	653	300
	654	100
	654	101
	654	102
	654	297
	654	298
	654	299
	655	101
	655	102
	655	103
	655	296
	655	297
	655	298
	656	102
	656	103
	656	104
	656	295
	656	296
	656	297
	657	103
	657	104
	657	105
	657	106
	657	293
	657	294
	657	295
	657	296
	658	104
	658	105
	658	106
	658	107
	658	292
	658	293
	658	294
	658	295
	659	105
	659	106
	659	107
	659	108
	659	291
	659	292
	659	293
	659	294
	660	107
	660	108
	660	109
	660	290
	660	291
	660	292
	661	108
	661	109
	661	110
	661	111
	661	288
	661	289
	661	290
	661	291
	662	109
	662	110
	662	111
	662	112
	662	287
	662	288
	662	289
	662	290
	663	110
	663	111
	663	112
	663	113
	663	286
	663	287
	663	288
	663	289
	664	112
	664	113
	664	114
	664	285
	664	286
	664	287
	665	113
	665	114
	665	115
	665	116
	665	283
	665	284
	665	285
	665	286
	666	114
	666	115
	666	116
	666	117
	666	282
	666	283
	666	284
	666	285
	667	115
	667	116
	667	117
	667	118
	667	281
	667	282
	667	283
	667	284
	668	117
	668	118
	668	119
	668	280
	668	281
	668	282
	669	118
	669	119
	669	120
	669	121
	669	278
	669	279
	669	280
	669	281
	670	119
	670	120
	670	121
	670	122
	670	277
	670	278
	670	279
	670	280
	671	120
	671	121
	671	122
	671	123
	671	276
	671	277
	671	278
	671	279
	672	122
	672	123
	672	124
	672	275
	672	276
	672	277
	673	123
	673	124
	673	125
	673	126
	673	273
	673	274
	673	275
	673	276
	674	124
	674	125
	674	126
	674	127
	674	272
	674	273
	674	274
	674	275
	675	125
	675	126
	675	127
	675	128
	675	271
	675	272
	675	273
	675	274
	676	127
	676	128
	676	129
	676	270
	676	271
	676	272
	677	128
	677	129
	677	130
	677	131
	677	268
	677	269
	677	270
	677	271
	678	129
	678	130
	678	131
	678	132
	678	133
	678	266
	678	267
	678	268
	678	269
	678	270
	679	130
	679	131
	679	132
	679	133
	679	134
	679	265
	679	266
	679	267
	679	268
	679	269
	680	132
	680	133
	680	134
	680	135
	680	136
	680	263
	680	264
	680	265
	680	266
	680	267
	681	134
	681	135
	681	136
	681	137
	681	138
	681	261
	681	262
	681	263
	681	264
	681	265
	682	135
	682	136
	682	137
	682	138
	682	139
	682	140
	682	259
	682	260
	682	261
	682	262
	682	263
	682	264
	683	137
	683	138
	683	139
	683	140
	683	141
	683	142
	683	257
	683	258
	683	259
	683	260
	683	261
	683	262
	684	139
	684	140
	684	141
	684	142
	684	143
	684	144
	684	255
	684	256
	684	257
	684	258
	684	259
	684	260
	685	141
	685	142
	685	143
	685	144
	685	145
	685	254
	685	255
	685	256
	685	257
	685	258
	686	143
	686	144
	686	145
	686	146
	686	147
	686	148
	686	251
	686	252
	686	253
	686	254
	686	255
	686	256
	687	145
	687	146
	687	147
	687	148
	687	149
	687	150
	687	151
	687	248
	687	249
	687	250
	687	251
	687	252
	687	253
	687	254
	688	146
	688	147
	688	148
	688	149
	688	150
	688	151
	688	152
	688	153
	688	246
}
BARRIER {
	688	247
	688	248
	688	249
	688	250
	688	251
	688	252
	688	253
	689	149
	689	150
	689	151
	689	152
	689	153
	689	154
	689	155
	689	244
	689	245
	689	246
	689	247
	689	248
	689	249
	689	250
	690	152
	690	153
	690	154
	690	155
	690	156
	690	243
	690	244
	690	245
	690	246
	690	247
	691	154
	691	155
	691	156
	691	157
	691	158
	691	159
	691	240
	691	241
	691	242
	691	243
	691	244
	691	245
	692	156
	692	157
	692	158
	692	159
	692	160
	692	161
	692	162
	692	237
	692	238
	692	239
	692	240
	692	241
	692	242
	692	243
	693	157
	693	158
	693	159
	693	160
	693	161
	693	162
	693	163
	693	164
	693	165
	693	166
	693	167
	693	168
	693	231
	693	232
	693	233
	693	234
	693	235
	693	236
	693	237
	693	238
	693	239
	693	240
	693	241
	693	242
	694	160
	694	161
	694	162
	694	163
	694	164
	694	165
	694	166
	694	167
	694	168
	694	169
	694	170
	694	171
	694	228
	694	229
	694	230
	694	231
	694	232
	694	233
	694	234
	694	235
	694	236
	694	237
	694	238
	694	239
	695	163
	695	164
	695	165
	695	166
	695	167
	695	168
	695	169
	695	170
	695	171
	695	172
	695	173
	695	174
	695	225
	695	226
	695	227
	695	228
	695	229
	695	230
	695	231
	695	232
	695	233
	695	234
	695	235
	695	236
	696	169
	696	170
	696	171
	696	172
	696	173
	696	174
	696	175
	696	176
	696	177
	696	178
	696	179
	696	180
	696	219
	696	220
	696	221
	696	222
	696	223
	696	224
	696	225
	696	226
	696	227
	696	228
	696	229
	696	230
	697	172
	697	173
	697	174
	697	175
	697	176
	697	177
	697	178
	697	179
	697	180
	697	181
	697	182
	697	183
	697	184
	697	185
	697	186
	697	213
	697	214
	697	215
	697	216
	697	217
	697	218
	697	219
	697	220
	697	221
	697	222
	697	223
	697	224
	697	225
	697	226
	697	227
	698	175
	698	176
	698	177
	698	178
	698	179
	698	180
	698	181
	698	182
	698	183
	698	184
	698	185
	698	186
	698	187
	698	188
	698	189
	698	190
	698	191
	698	192
	698	193
	698	194
	698	195
	698	196
	698	197
	698	198
	698	201
	698	202
	698	203
	698	204
	698	205
	698	206
	698	207
	698	208
	698	209
	698	210
	698	211
	698	212
	698	213
	698	214
	698	215
	698	216
	698	217
	698	218
	698	219
	698	220
	698	221
	698	222
	698	223
	698	224
	699	181
	699	182
	699	183
	699	184
	699	185
	699	186
	699	187
	699	188
	699	189
	699	190
	699	191
	699	192
	699	193
	699	194
	699	195
	699	196
	699	197
	699	198
	699	199
	699	200
	699	201
	699	202
	699	203
	699	204
	699	205
	699	206
	699	207
	699	208
	699	209
	699	210
	699	211
	699	212
	699	213
	699	214
	699	215
	699	216
	699	217
	699	218
}
# BARRIER_END

# ODOR BEGIN
ODOR_MAP {
	   0 0      700  0
	   0 1      700  0
	   0 2      700  0
	   0 3      700  0
	   0 4      700  0
	   0 5      700  0
	   0 6      700  0
	   0 7      700  0
	   0 8      700  0
	   0 9      700  0
	   0 10     700  0
	   0 11     700  0
	   0 12     700  0
	   0 13     700  0
	   0 14     700  0
	   0 15     700  0
	   0 16     700  0
	   0 17     700  0
	   0 18     700  0
	   0 19     700  0
	   0 20     700  0
	   0 21     700  0
	   0 22     700  0
	   0 23     700  0
	   0 24     700  0
	   0 25     700  0
	   0 26     700  0
	   0 27     700  0
	   0 28     700  0
	   0 29     700  0
	   0 30     700  0
	   0 31     700  0
	   0 32     700  0
	   0 33     700  0
	   0 34     700  0
	   0 35     700  0
	   0 36     700  0
	   0 37     700  0
	   0 38     700  0
	   0 39     700  0
	   0 40     700  0
	   0 41     700  0
	   0 42     700  0
	   0 43     700  0
	   0 44     700  0
	   0 45     700  0
	   0 46     700  0
	   0 47     700  0
	   0 48     700  0
	   0 49     700  0
	   0 50     700  0
	   0 51     700  0
	   0 52     700  0
	   0 53     700  0
	   0 54     700  0
	   0 55     700  0
	   0 56     700  0
	   0 57     700  0
	   0 58     700  0
	   0 59     700  0
	   0 60     700  0
	   0 61     700  0
	   0 62     700  0
	   0 63     700  0
	   0 64     700  0
	   0 65     700  0
	   0 66     700  0
	   0 67     700  0
	   0 68     700  0
	   0 69     700  0
	   0 70     700  0
	   0 71     700  0
	   0 72     700  0
	   0 73     700  0
	   0 74     700  0
	   0 75     700  0
	   0 76     700  0
	   0 77     700  0
	   0 78     700  0
	   0 79     700  0
	   0 80     700  0
	   0 81     700  0
	   0 82     700  0
	   0 83     700  0
	   0 84     700  0
	   0 85     700  0
	   0 86     700  0
	   0 87     700  0
	   0 88     700  0
	   0 89     700  0
	   0 90     700  0
	   0 91     700  0
	   0 92     700  0
	   0 93     700  0
	   0 94     700  0
	   0 95     700  0
	   0 96     700  0
	   0 97     700  0
	   0 98     700  0
	   0 99     700  0
	   0 100    700  0
	   0 101    700  0
	   0 102    700  0
	   0 103    700  0
	   0 104    700  0
	   0 105    700  0
	   0 106    700  0
	   0 107    700  0
	   0 108    700  0
	   0 109    700  0
	   0 110    700  0
	   0 111    700  0
	   0 112    700  0
	   0 113    700  0
	   0 114    700  0
	   0 115    700  0
	   0 116    700  0
	   0 117    700  0
	   0 118    700  0
	   0 119    700  0
	   0 120    700  0
	   0 121    700  0
	   0 122    700  0
	   0 123    700  0
	   0 124    700  0
	   0 125    700  0
	   0 126    700  0
	   0 127    700  0
	   0 128    700  0
	   0 129    700  0
	   0 130    700  0
	   0 131    700  0
	   0 132    700  0
	   0 133    700  0
	   0 134    700  0
	   0 135    700  0
	   0 136    700  0
	   0 137    700  0
	   0 138    700  0
	   0 139    700  0
	   0 140    700  0
	   0 141    700  0
	   0 142    700  0
	   0 143    700  0
	   0 144    700  0
	   0 145    700  0
	   0 146    700  0
	   0 147    700  0
	   0 148    700  0
	   0 149    700  0
	   0 150    700  0
	   0 151    700  0
	   0 152    700  0
	   0 153    700  0
	   0 154    700  0
	   0 155    700  0
	   0 156    700  0
	   0 157    700  0
	   0 158    700  0
	   0 159    700  0
	   0 160    700  0
	   0 161    700  0
	   0 162    700  0
	   0 163    700  0
	   0 164    700  0
	   0 165    700  0
	   0 166    700  0
	   0 167    700  0
	   0 168    700  0
	   0 169    700  0
	   0 170    700  0
	   0 171    700  0
	   0 172    700  0
	   0 173    700  0
	   0 174    700  0
	   0 175    700  0
	   0 176    700  0
	   0 177    700  0
	   0 178    700  0
	   0 179    700  0
	   0 180    700  0
	   0 181    700  0
	   0 182    700  0
	   0 183    700  0
	   0 184    700  0
	   0 185    700  0
	   0 186    700  0
	   0 187    700  0
	   0 188    700  0
	   0 189    700  0
	   0 190    700  0
	   0 191    700  0
	   0 192    700  0
	   0 193    700  0
	   0 194    700  0
	   0 195    700  0
	   0 196    700  0
	   0 197    700  0
	   0 198    700  0
	   0 199    700  0
	   0 200    700  0
	   0 201    700  0
	   0 202    700  0
	   0 203    700  0
	   0 204    700  0
	   0 205    700  0
	   0 206    700  0
	   0 207    700  0
	   0 208    700  0
	   0 209    700  0
	   0 210    700  0
	   0 211    700  0
	   0 212    700  0
	   0 213    700  0
	   0 214    700  0
	   0 215    700  0
	   0 216    700  0
	   0 217    700  0
	   0 218    700  0
	   0 219    700  0
	   0 220    700  0
	   0 221    700  0
	   0 222    700  0
	   0 223    700  0
	   0 224    700  0
	   0 225    700  0
	   0 226    700  0
	   0 227    700  0
	   0 228    700  0
	   0 229    700  0
	   0 230    700  0
	   0 231    700  0
	   0 232    700  0
	   0 233    700  0
	   0 234    700  0
	   0 235    700  0
	   0 236    700  0
	   0 237    700  0
	   0 238    700  0
	   0 239    700  0
	   0 240    700  0
	   0 241    700  0
	   0 242    700  0
	   0 243    700  0
	   0 244    700  0
	   0 245    700  0
	   0 246    700  0
	   0 247    700  0
	   0 248    700  0
	   0 249    700  0
	   0 250    700  0
	   0 251    700  0
	   0 252    700  0
	   0 253    700  0
	   0 254    700  0
	   0 255    700  0
	   0 256    700  0
	   0 257    700  0
	   0 258    700  0
	   0 259    700  0
	   0 260    700  0
	   0 261    700  0
	   0 262    700  0
	   0 263    700  0
	   0 264    700  0
	   0 265    700  0
	   0 266    700  0
	   0 267    700  0
	   0 268    700  0
	   0 269    700  0
	   0 270    700  0
	   0 271    700  0
	   0 272    700  0
	   0 273    700  0
	   0 274    700  0
	   0 275    700  0
	   0 276    700  0
	   0 277    700  0
	   0 278    700  0
	   0 279    700  0
	   0 280    700  0
	   0 281    700  0
	   0 282    700  0
	   0 283    700  0
	   0 284    700  0
	   0 285    700  0
	   0 286    700  0
	   0 287    700  0
	   0 288    700  0
	   0 289    700  0
	   0 290    700  0
	   0 291    700  0
	   0 292    700  0
	   0 293    700  0
	   0 294    700  0
	   0 295    700  0
	   0 296    700  0
	   0 297    700  0
	   0 298    700  0
	   0 299    700  0
	   0 300    700  0
	   0 301    700  0
	   0 302    700  0
	   0 303    700  0
	   0 304    700  0
	   0 305    700  0
	   0 306    700  0
	   0 307    700  0
	   0 308    700  0
	   0 309    700  0
	   0 310    700  0
	   0 311    700  0
	   0 312    700  0
	   0 313    700  0
	   0 314    700  0
	   0 315    700  0
	   0 316    700  0
	   0 317    700  0
	   0 318    700  0
	   0 319    700  0
	   0 320    700  0
	   0 321    700  0
	   0 322    700  0
	   0 323    700  0
	   0 324    700  0
	   0 325    700  0
	   0 326    700  0
	   0 327    700  0
	   0 328    700  0
	   0 329    700  0
	   0 330    700  0
	   0 331    700  0
	   0 332    700  0
	   0 333    700  0
	   0 334    700  0
	   0 335    700  0
	   0 336    700  0
	   0 337    700  0
	   0 338    700  0
	   0 339    700  0
	   0 340    700  0
	   0 341    700  0
	   0 342    700  0
	   0 343    700  0
	   0 344    700  0
	   0 345    700  0
	   0 346    700  0
	   0 347    700  0
	   0 348    700  0
	   0 349    700  0
	   0 350    700  0
	   0 351    700  0
	   0 352    700  0
	   0 353    700  0
	   0 354    700  0
	   0 355    700  0
	   0 356    700  0
	   0 357    700  0
	   0 358    700  0
	   0 359    700  0
	   0 360    700  0
	   0 361    700  0
	   0 362    700  0
	   0 363    700  0
	   0 364    700  0
	   0 365    700  0
	   0 366    700  0
	   0 367    700  0
	   0 368    700  0
	   0 369    700  0
	   0 370    700  0
	   0 371    700  0
	   0 372    700  0
	   0 373    700  0
	   0 374    700  0
	   0 375    700  0
	   0 376    700  0
	   0 377    700  0
	   0 378    700  0
	   0 379    700  0
	   0 380    700  0
	   0 381    700  0
	   0 382    700  0
	   0 383    700  0
	   0 384    700  0
	   0 385    700  0
	   0 386    700  0
	   0 387    700  0
	   0 388    700  0
	   0 389    700  0
	   0 390    700  0
	   0 391    700  0
	   0 392    700  0
	   0 393    700  0
	   0 394    700  0
	   0 395    700  0
	   0 396    700  0
	   0 397    700  0
	   0 398    700  0
	   0 399    700  0
}

# ODOR END


ORGANIC {
}

ORGANISM 6  5 1 0   6983867862 6983867862  23842 1 50
  {  # program
	"main:"
	"{"
	"      11  call "
	"}"
	""
	"row1:"
	"{"
	"      1  BROADCAST  7  NEAREST  EAT  HALT "
	"}"
	""
	"row2:"
	"{"
	"      HALT "
	"}"
	""
	"row3:"
	"{"
	"     "
	"}"
	""
	"row4:"
	"{"
	"     "
	"}"
	""
	"row5:"
	"{"
	"     "
	"}"
	""
	"row6:"
	"{"
	"     "
	"}"
	""
	"row7:"
	"{"
	"     "
	"}"
	""
	"row8:"
	"{"
	"      DSLEN  58  >  ?exit  DSLEN  2  <  ?exit  2dup  1  5  10  SPAWN  -rot  2pop "
	"}"
	""
	"row9:"
	"{"
	"     "
	"}"
	""
	"row10:"
	"{"
	"      2dup  OMOVE  ?loop  2dup  EAT  pop  2dup  OMOVE  pop  2dup  EAT  pop  2dup"
	"      OMOVE  pop  2dup  EAT  pop  2negate  ENERGY  -rot  SEND-ENERGY  pop "
	"}"
	""
	"row11:"
	"{"
	"      rot  -78  -12  GROW  -37  R5  -37  TRAP4  -40  OMOVE  =  -22  56  GROW  -40"
	"      17  call  79  2dup  OMOVE  ?loop  EAT  20  -21  dup  80  46  --R4  R5++  -2"
	"      65  35  TRAP7  >  -3  -66  R2++  >>  GPS  R5!  19  GROW  R3  16  6  50 "
	"}"
	""
	"row12:"
	"{"
	"      <=  16  97  -63  and  >>  GPS  xor "
	"}"
	""
	"row13:"
	"{"
	"      CB  -26  -42  45  37  22  -54  54  -42  50  -13  CB  NEAREST  16  GROW "
	"}"
	""
	"row14:"
	"{"
	"      HOTTEST  R2++  EAT  R9++  R3  POKE  -44  GROW  pop  R6++  2+  0=  1+ "
	"}"
	""
	"row15:"
	"{"
	"      2dup  OMOVE  ?loop  EAT  EAT  or  -61  xor  NEAREST  EAT  GROW "
	"}"
	""
	"row16:"
	"{"
	"      -89  HOTTEST  TRAP8  -40  -39  GROW  ENERGY  5  /  R0!  pop  ?loop  ?exit  -1"
	"      0  R0  MAKE-SPORE  -40  50  -1  0  R0  MAKE-SPORE  NUMBER!  R5!  31  -24  ?exit"
	"      33  xor  NEAREST  -78  89  TRAP1  --R6  swap  R0  -36  MAX_INT  -34  -40  -34"
	"      59  -68  /mod  -43  -55  G0!  75  R9!  12  40  -43  -78  97  NUMBER  29  98"
	"      -33  71  <<  0=  89  R7  -33 "
	"}"
	""
	"row17:"
	"{"
	"      24  MOUSE-POS  -46  16  13  call  R5!  15  call  CMOVE  OMOVE  16  call  -5"
	"      HOTTEST  TRAP8  2+  18  -90  44  8  18  ?loop  50  NUM-CELLS  R3!  R7++  58"
	"      tuck  26  69  71  2/  POKE  47  -2  -21  -40 "
	"}"
	""
	"row18:"
	"{"
	"      R2!  EAT  69  R4++  15 "
	"}"
	""
	"row19:"
	"{"
	"      -21  53  SHOUT  2over "
	"}"
	""
	"row20:"
	"{"
	"      -89  HOTTEST  TRAP8  -40  -39  GROW  ENERGY  5  /  R0!  pop  ?loop  ?exit  -1"
	"      0  R0  MAKE-SPORE  R9++  86  54  -40  50  -1  0  R0  MAKE-SPORE  NUMBER!  R5!"
	"      31  -24  ?exit  33  xor  NEAREST  -78  89  TRAP1  --R6  swap  R0  -36  MAX_INT"
	"      -34  -40  -34  59  -68  /mod  -43  -55  G0!  75  R9!  12  40  -43  -78  97"
	"      NUMBER  29  98  -33  71  <<  0=  89  -40  R7  -33 "
	"}"
	""
	"row21:"
	"{"
	"     "
	"}"
	""
	"row22:"
	"{"
	"      -60  -48 "
	"}"
	""
	"row23:"
	"{"
	"      71  -14  R7!  -44  -11 "
	"}"
	""
	"row24:"
	"{"
	"      -47  not  60  21  -89  -rot  OPCODE  invert  50  0  R0  -95 "
	"}"
	""
	"row25:"
	"{"
	"      rot  -77  -11  NUM-CELLS  -35  R9!  -40  TRAP4  -43  OMOVE  swap  GROW  --R9"
	"      --R2  NEIGHBORS  -36  15  call  R5  17  -12  2swap  PEEK  91  TRAP7  1-  19"
	"      -17  dup  79  50  --R4  R5++  -3  35  66  33  TRAP7  -62  R2++  >>  GPS  R5!"
	"      21  GROW  22  -54  54  R8++  44  EXUDE  -40  pop  --R0  7  49 "
	"}"
	""
	"row26:"
	"{"
	"     "
	"}"
	""
	"row27:"
	"{"
	"      -64 "
	"}"
	""
	"row28:"
	"{"
	"      -67  -13  -78  97  G0  -41  63  -39  CHOOSE "
	"}"
	""
	"row29:"
	"{"
	"      15 "
	"}"
	""
	"row30:"
	"{"
	"     "
	"}"
	""
	"row31:"
	"{"
	"      -6  64  POPULATION.S  12  R1  -48  53  R2 "
	"}"
	""
	"row32:"
	"{"
	"      2negate  2negate  2  NEAREST  2  NEAREST "
	"}"
	""
	"row33:"
	"{"
	"      -40  -40  -78 "
	"}"
	""
	"row34:"
	"{"
	"      NUM-CELLS  POPULATION.S  xor  40 "
	"}"
	""
	"row35:"
	"{"
	"      rot  -78  -12  GROW  -37  R5  -37  TRAP4  -40  OMOVE  =  -22  56  GROW  -40"
	"      17  call  79  2dup  OMOVE  ?loop  EAT  20  -21  dup  NEIGHBORS  -2  65  35"
	"      TRAP7  >  -3  -66  R2++  >>  GPS  R5!  19  GROW  R3  16  6  50 "
	"}"
	""
	"row36:"
	"{"
	"      17  12  R7++  -31  R1!  -76  31  -24  ?exit "
	"}"
	""
	"row37:"
	"{"
	"      76  18  -76 "
	"}"
	""
	"row38:"
	"{"
	"     "
	"}"
	""
	"row39:"
	"{"
	"      -rot  -65  2pop  -26  56  GROW  55  ?exit  69 "
	"}"
	""
	"row40:"
	"{"
	"      TRAP7  -49 "
	"}"
	""
	"row41:"
	"{"
	"      -44  1-  60  2dup  87  -41  2dup  87  <>  41  R0  READ  -40  <>  GROW "
	"}"
	""
	"row42:"
	"{"
	"     "
	"}"
	""
	"row43:"
	"{"
	"     "
	"}"
	""
	"row44:"
	"{"
	"      -70  GPS "
	"}"
	""
	"row45:"
	"{"
	"     "
	"}"
	""
	"row46:"
	"{"
	"      -40  -14  48  COLDEST  -32  -43  -57  98  -22  rot  -40  R1  -76 "
	"}"
	""
	"row47:"
	"{"
	"     "
	"}"
	""
	"row48:"
	"{"
	"     "
	"}"
	""
	"row49:"
	"{"
	"      -37  -44  -42  62  88  10  tuck  34  -31  -42  call "
	"}"
	""
	"row50:"
	"{"
	"      -40  -40 "
	"}"
	""
	"row51:"
	"{"
	"     "
	"}"
	""
	"row52:"
	"{"
	"      -40  -40  -43  14 "
	"}"
	""
	"row53:"
	"{"
	"      -40  -40  -25 "
	"}"
	""
	"row54:"
	"{"
	"     "
	"}"
	""
	"row55:"
	"{"
	"     "
	"}"
	""
	"row56:"
	"{"
	"      -14  R1  -69  -71  COLDEST  3  -76  <<  2-  S0  <=  MIN_INT  R8++  MOOD!  CHOOSE"
	"      -99  16  TRAP8  GPS  R1++  AGE "
	"}"
	""
	"row57:"
	"{"
	"      R1  -48  swap "
	"}"
	""
	"row58:"
	"{"
	"      MOOD  25  MOOD!  70  R7++  OMOVE  R6!  TRAP7  58  42  if  -22  MAX_INT  R6++"
	"      5 "
	"}"
	""
	"row59:"
	"{"
	"      max "
	"}"
	""
	"row60:"
	"{"
	"      -23  CSLEN  <>  xor  -40 "
	"}"
  }

CELL 6   154 205
	0 0
	0 10 2
	{ 13 0 0 0 0
	  0 0 0 0 0 }
	{
	}
	{
		6
		0
		1
	}

ORGANISM 5  0 10 1   6983582452 6983582452  23865 100000 11275
  {  # program
	"main:"
	"{"
	"      11  call "
	"}"
	""
	"row1:"
	"{"
	"      1  BROADCAST  7  NEAREST  EAT  HALT "
	"}"
	""
	"row2:"
	"{"
	"      HALT "
	"}"
	""
	"row3:"
	"{"
	"     "
	"}"
	""
	"row4:"
	"{"
	"     "
	"}"
	""
	"row5:"
	"{"
	"     "
	"}"
	""
	"row6:"
	"{"
	"     "
	"}"
	""
	"row7:"
	"{"
	"     "
	"}"
	""
	"row8:"
	"{"
	"      DSLEN  58  >  ?exit  DSLEN  2  <  ?exit  2dup  1  5  10  SPAWN  -rot  2pop "
	"}"
	""
	"row9:"
	"{"
	"     "
	"}"
	""
	"row10:"
	"{"
	"      2dup  OMOVE  ?loop  2dup  EAT  pop  2dup  OMOVE  pop  2dup  EAT  pop  2dup"
	"      OMOVE  pop  2dup  EAT  pop  2negate  ENERGY  -rot  SEND-ENERGY  pop "
	"}"
	""
	"row11:"
	"{"
	"      rot  -78  -12  GROW  -37  R5  -37  TRAP4  -40  OMOVE  =  -22  56  GROW  -40"
	"      17  call  79  2dup  OMOVE  ?loop  EAT  20  -21  dup  80  46  --R4  R5++  -2"
	"      65  35  TRAP7  >  -3  -66  R2++  >>  GPS  R5!  19  GROW  R3  16  6  50 "
	"}"
	""
	"row12:"
	"{"
	"      <=  16  97  -66  R2++  xor "
	"}"
	""
	"row13:"
	"{"
	"      CB  -26  -42  45  37  22  50  -13  CB  NEAREST  16  GROW "
	"}"
	""
	"row14:"
	"{"
	"      HOTTEST  R2++  EAT  R9++  R3  POKE  -44  GROW  +  R6++  2+  0=  1+ "
	"}"
	""
	"row15:"
	"{"
	"      2dup  OMOVE  ?loop  EAT  EAT  or  -61  xor  NEAREST  EAT  GROW "
	"}"
	""
	"row16:"
	"{"
	"      -89  HOTTEST  TRAP8  -40  -39  GROW  ENERGY  5  /  R0!  pop  ?loop  ?exit  -1"
	"      0  R0  MAKE-SPORE  -40  50  -1  0  R0  MAKE-SPORE  NUMBER!  R5!  31  -24  ?exit"
	"      33  xor  NEAREST  -78  89  TRAP1  --R6  swap  R0  -36  MAX_INT  -34  -40  -34"
	"      59  -68  /mod  -43  -55  G0!  75  R9!  12  40  -43  -78  97  NUMBER  29  98"
	"      -33  71  <<  0=  89  R7  -33 "
	"}"
	""
	"row17:"
	"{"
	"      24  MOUSE-POS  -46  16  13  call  R5!  15  call  CMOVE  OMOVE  16  call  -5"
	"      HOTTEST  TRAP8  2+  18  -90  44  8  18  ?loop  50  NUM-CELLS  R3!  R7++  58"
	"      tuck  26  69  71  2/  POKE  47  -2  -21  -40 "
	"}"
	""
	"row18:"
	"{"
	"      R2!  EAT  69  R4++  15 "
	"}"
	""
	"row19:"
	"{"
	"      -21  53 "
	"}"
	""
	"row20:"
	"{"
	"      -89  HOTTEST  TRAP8  -40  -39  GROW  ENERGY  5  /  R0!  pop  ?loop  ?exit  -1"
	"      0  R0  MAKE-SPORE  R9++  86  54  -40  50  -1  0  R0  MAKE-SPORE  NUMBER!  R5!"
	"      31  -24  ?exit  33  xor  NEAREST  -78  89  TRAP1  --R6  swap  R0  -36  MAX_INT"
	"      -34  -40  -34  59  -68  /mod  -43  -55  G0!  75  R9!  12  40  -43  -78  97"
	"      NUMBER  29  98  -33  71  <<  0=  89  -40  R7  -33 "
	"}"
	""
	"row21:"
	"{"
	"      -60  -48 "
	"}"
	""
	"row22:"
	"{"
	"      76  or "
	"}"
	""
	"row23:"
	"{"
	"      <>  -78  -40  -37  -44  -42  62  88  4  -73  10  tuck  34  -31  -42  call "
	"}"
	""
	"row24:"
	"{"
	"      -47  not  60  21  -89  -rot  OPCODE  invert  50  0  R0  -95 "
	"}"
	""
	"row25:"
	"{"
	"      rot  -77  -11  NUM-CELLS  -35  R9!  -40  TRAP4  -43  OMOVE  swap  GROW  -36"
	"      15  call  R5  17  -12  2swap  PEEK  91  TRAP7  1-  19  -17  dup  79  50  --R4"
	"      R5++  -3  35  66  33  TRAP7  -62  R2++  >>  GPS  R5!  21  GROW  22  -54  54"
	"      R8++  44  EXUDE  -40  pop  --R0  7  49 "
	"}"
	""
	"row26:"
	"{"
	"     "
	"}"
	""
	"row27:"
	"{"
	"      -64 "
	"}"
	""
	"row28:"
	"{"
	"     "
	"}"
	""
	"row29:"
	"{"
	"      15  R7! "
	"}"
	""
	"row30:"
	"{"
	"      2  NEAREST "
	"}"
	""
	"row31:"
	"{"
	"     "
	"}"
	""
	"row32:"
	"{"
	"      -14  R1  -69  -71  COLDEST  3  -76  <<  2-  S0  <=  MIN_INT  R8++  MOOD!  CHOOSE"
	"      -99  16  TRAP8  GPS  R1++  AGE "
	"}"
	""
	"row33:"
	"{"
	"     "
	"}"
	""
	"row34:"
	"{"
	"      rot  -78  -12  GROW  -37  R5  -37  TRAP4  -40  OMOVE  =  -22  56  GROW  -40"
	"      17  call  79  2dup  OMOVE  ?loop  EAT  20  -21  dup  80  46  --R4  R5++  -2"
	"      65  35  TRAP7  >  -3  -66  R2++  >>  GPS  R5!  19  GROW  R8++  14  -6  52 "
	"}"
	""
	"row35:"
	"{"
	"      17  12  R7++  TRAP7  R1!  -76  31  -24  ?exit "
	"}"
	""
	"row36:"
	"{"
	"      76  18  -76 "
	"}"
	""
	"row37:"
	"{"
	"     "
	"}"
	""
	"row38:"
	"{"
	"      OMOVE  -61  =  -22  56  GROW  55  69 "
	"}"
	""
	"row39:"
	"{"
	"      -49 "
	"}"
	""
	"row40:"
	"{"
	"      -44  1-  60  2dup  87  -41  2dup  87  <>  41  GROW "
	"}"
	""
	"row41:"
	"{"
	"      14 "
	"}"
	""
	"row42:"
	"{"
	"      -40  -40  -78 "
	"}"
	""
	"row43:"
	"{"
	"      -70  GPS "
	"}"
	""
	"row44:"
	"{"
	"     "
	"}"
	""
	"row45:"
	"{"
	"      -40  -14  48  GPS  -79  --R0  33  COLDEST  -32  -43  -57  98  -22  rot  -40"
	"      -4  tuck  -67  R1  -76 "
	"}"
	""
	"row46:"
	"{"
	"      -67  -13  xor  97  G0  -41  63  -39  CHOOSE "
	"}"
	""
	"row47:"
	"{"
	"      71 "
	"}"
	""
	"row48:"
	"{"
	"      -14  R1  -69  -71  COLDEST  3  -76  <<  2-  S0  <=  MIN_INT  R8++  MOOD!  CHOOSE"
	"      -99  16  TRAP8  GPS  R1++  AGE "
	"}"
	""
	"row49:"
	"{"
	"      -40  -41  63  -39  -40 "
	"}"
	""
	"row50:"
	"{"
	"     "
	"}"
	""
	"row51:"
	"{"
	"      -40  -40  -40  15  R7!  -43  14 "
	"}"
	""
	"row52:"
	"{"
	"      -40  -40  -25 "
	"}"
	""
	"row53:"
	"{"
	"     "
	"}"
	""
	"row54:"
	"{"
	"      -14  R1  -69  -71  COLDEST  3  -76  <<  2-  S0  <=  MIN_INT  R8++  MOOD!  CHOOSE"
	"      TRAP8  GPS  R1++  AGE "
	"}"
	""
	"row55:"
	"{"
	"      R1  -48  swap "
	"}"
	""
	"row56:"
	"{"
	"      MOOD  25  MOOD!  70  R7++  OMOVE  R6!  TRAP7  58  42  if  -22  MAX_INT  R6++"
	"      5 "
	"}"
	""
	"row57:"
	"{"
	"      2pop "
	"}"
	""
	"row58:"
	"{"
	"      <>  -78  -40 "
	"}"
  }

CELL 5   386 289
	0 0
	0 8 14
	{ 55 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
		16 2
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		0
		0
		-2
	}

CELL 5   385 291
	0 0
	0 8 12
	{ 39 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
		16 2
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		0
		-25
		0
		-25
		1
		5
		10
	}

CELL 5   387 290
	0 0
	0 16 21
	{ 55 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		-40
		50
		-1
		0
	}

CELL 5   386 290
	0 0
	0 16 6
	{ 59 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		10
		0
		0
	}

CELL 5   384 290
	0 0
	0 16 8
	{ 55 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		1
		0
		276
		5
	}

CELL 5   388 291
	0 0
	0 17 19
	{ 55 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		2
		18
		-90
	}

CELL 5   387 291
	0 0
	0 8 6
	{ 59 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
		16 2
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		0
		-4
		58
		2
	}

CELL 5   384 291
	0 0
	0 8 7
	{ 55 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
		16 2
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		0
		-12
		0
	}

CELL 5   387 292
	0 0
	0 17 6
	{ 45 0 0 0 0
	  0 0 0 0 0 }
	{
		0 1
		11 16
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		31
		2
		18
		-90
		44
		8
		24
		-1
	}

CELL 5   386 292
	0 0
	0 16 2
	{ 39 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		0
		-4
	}

ORGANISM 4  0 10 1   6983582452 6983582452  23865 100000 11275
  {  # program
	"main:"
	"{"
	"      11  call "
	"}"
	""
	"row1:"
	"{"
	"      1  BROADCAST  7  NEAREST  EAT  HALT "
	"}"
	""
	"row2:"
	"{"
	"      HALT "
	"}"
	""
	"row3:"
	"{"
	"     "
	"}"
	""
	"row4:"
	"{"
	"     "
	"}"
	""
	"row5:"
	"{"
	"     "
	"}"
	""
	"row6:"
	"{"
	"     "
	"}"
	""
	"row7:"
	"{"
	"     "
	"}"
	""
	"row8:"
	"{"
	"      DSLEN  58  >  ?exit  DSLEN  2  <  ?exit  2dup  1  5  10  SPAWN  -rot  2pop "
	"}"
	""
	"row9:"
	"{"
	"     "
	"}"
	""
	"row10:"
	"{"
	"      2dup  OMOVE  ?loop  2dup  EAT  pop  2dup  OMOVE  pop  2dup  EAT  pop  2dup"
	"      OMOVE  pop  2dup  EAT  pop  2negate  ENERGY  -rot  SEND-ENERGY  pop "
	"}"
	""
	"row11:"
	"{"
	"      rot  -78  -12  GROW  -37  R5  -37  TRAP4  -40  OMOVE  =  -22  56  GROW  -40"
	"      17  call  79  2dup  OMOVE  ?loop  EAT  20  -21  dup  80  46  --R4  R5++  -2"
	"      65  35  TRAP7  >  -3  -66  R2++  >>  GPS  R5!  19  GROW  R3  16  6  50 "
	"}"
	""
	"row12:"
	"{"
	"      <=  16  97  -66  R2++  xor "
	"}"
	""
	"row13:"
	"{"
	"      CB  -26  -42  45  37  22  50  -13  CB  NEAREST  16  GROW "
	"}"
	""
	"row14:"
	"{"
	"      HOTTEST  R2++  EAT  R9++  R3  POKE  -44  GROW  +  R6++  2+  0=  1+ "
	"}"
	""
	"row15:"
	"{"
	"      2dup  OMOVE  ?loop  EAT  EAT  or  -61  xor  NEAREST  EAT  GROW "
	"}"
	""
	"row16:"
	"{"
	"      -89  HOTTEST  TRAP8  -40  -39  GROW  ENERGY  5  /  R0!  pop  ?loop  ?exit  -1"
	"      0  R0  MAKE-SPORE  -40  50  -1  0  R0  MAKE-SPORE  NUMBER!  R5!  31  -24  ?exit"
	"      33  xor  NEAREST  -78  89  TRAP1  --R6  swap  R0  -36  MAX_INT  -34  -40  -34"
	"      59  -68  /mod  -43  -55  G0!  75  R9!  12  40  -43  -78  97  NUMBER  29  98"
	"      -33  71  <<  0=  89  R7  -33 "
	"}"
	""
	"row17:"
	"{"
	"      24  MOUSE-POS  -46  16  13  call  R5!  15  call  CMOVE  OMOVE  16  call  -5"
	"      HOTTEST  TRAP8  2+  18  -90  44  8  18  ?loop  50  NUM-CELLS  R3!  R7++  58"
	"      tuck  26  69  71  2/  POKE  47  -2  -21  -40 "
	"}"
	""
	"row18:"
	"{"
	"      R2!  EAT  69  R4++  15 "
	"}"
	""
	"row19:"
	"{"
	"      -21  53 "
	"}"
	""
	"row20:"
	"{"
	"      -89  HOTTEST  TRAP8  -40  -39  GROW  ENERGY  5  /  R0!  pop  ?loop  ?exit  -1"
	"      0  R0  MAKE-SPORE  R9++  86  54  -40  50  -1  0  R0  MAKE-SPORE  NUMBER!  R5!"
	"      31  -24  ?exit  33  xor  NEAREST  -78  89  TRAP1  --R6  swap  R0  -36  MAX_INT"
	"      -34  -40  -34  59  -68  /mod  -43  -55  G0!  75  R9!  12  40  -43  -78  97"
	"      NUMBER  29  98  -33  71  <<  0=  89  -40  R7  -33 "
	"}"
	""
	"row21:"
	"{"
	"      -60  -48 "
	"}"
	""
	"row22:"
	"{"
	"      76  or "
	"}"
	""
	"row23:"
	"{"
	"      <>  -78  -40  -37  -44  -42  62  88  4  -73  10  tuck  34  -31  -42  call "
	"}"
	""
	"row24:"
	"{"
	"      -47  not  60  21  -89  -rot  OPCODE  invert  50  0  R0  -95 "
	"}"
	""
	"row25:"
	"{"
	"      rot  -77  -11  NUM-CELLS  -35  R9!  -40  TRAP4  -43  OMOVE  swap  GROW  -36"
	"      15  call  R5  17  -12  2swap  PEEK  91  TRAP7  1-  19  -17  dup  79  50  --R4"
	"      R5++  -3  35  66  33  TRAP7  -62  R2++  >>  GPS  R5!  21  GROW  22  -54  54"
	"      R8++  44  EXUDE  -40  pop  --R0  7  49 "
	"}"
	""
	"row26:"
	"{"
	"     "
	"}"
	""
	"row27:"
	"{"
	"      -64 "
	"}"
	""
	"row28:"
	"{"
	"     "
	"}"
	""
	"row29:"
	"{"
	"      15  R7! "
	"}"
	""
	"row30:"
	"{"
	"      2  NEAREST "
	"}"
	""
	"row31:"
	"{"
	"     "
	"}"
	""
	"row32:"
	"{"
	"      -14  R1  -69  -71  COLDEST  3  -76  <<  2-  S0  <=  MIN_INT  R8++  MOOD!  CHOOSE"
	"      -99  16  TRAP8  GPS  R1++  AGE "
	"}"
	""
	"row33:"
	"{"
	"     "
	"}"
	""
	"row34:"
	"{"
	"      rot  -78  -12  GROW  -37  R5  -37  TRAP4  -40  OMOVE  =  -22  56  GROW  -40"
	"      17  call  79  2dup  OMOVE  ?loop  EAT  20  -21  dup  80  46  --R4  R5++  -2"
	"      65  35  TRAP7  >  -3  -66  R2++  >>  GPS  R5!  19  GROW  R8++  14  -6  52 "
	"}"
	""
	"row35:"
	"{"
	"      17  12  R7++  TRAP7  R1!  -76  31  -24  ?exit "
	"}"
	""
	"row36:"
	"{"
	"      76  18  -76 "
	"}"
	""
	"row37:"
	"{"
	"     "
	"}"
	""
	"row38:"
	"{"
	"      OMOVE  -61  =  -22  56  GROW  55  69 "
	"}"
	""
	"row39:"
	"{"
	"      -49 "
	"}"
	""
	"row40:"
	"{"
	"      -44  1-  60  2dup  87  -41  2dup  87  <>  41  GROW "
	"}"
	""
	"row41:"
	"{"
	"      14 "
	"}"
	""
	"row42:"
	"{"
	"      -40  -40  -78 "
	"}"
	""
	"row43:"
	"{"
	"      -70  GPS "
	"}"
	""
	"row44:"
	"{"
	"     "
	"}"
	""
	"row45:"
	"{"
	"      -40  -14  48  GPS  -79  --R0  33  COLDEST  -32  -43  -57  98  -22  rot  -40"
	"      -4  tuck  -67  R1  -76 "
	"}"
	""
	"row46:"
	"{"
	"      -67  -13  xor  97  G0  -41  63  -39  CHOOSE "
	"}"
	""
	"row47:"
	"{"
	"      71 "
	"}"
	""
	"row48:"
	"{"
	"      -14  R1  -69  -71  COLDEST  3  -76  <<  2-  S0  <=  MIN_INT  R8++  MOOD!  CHOOSE"
	"      -99  16  TRAP8  GPS  R1++  AGE "
	"}"
	""
	"row49:"
	"{"
	"      -40  -41  63  -39  -40 "
	"}"
	""
	"row50:"
	"{"
	"     "
	"}"
	""
	"row51:"
	"{"
	"      -40  -40  -40  15  R7!  -43  14 "
	"}"
	""
	"row52:"
	"{"
	"      -40  -40  -25 "
	"}"
	""
	"row53:"
	"{"
	"     "
	"}"
	""
	"row54:"
	"{"
	"      -14  R1  -69  -71  COLDEST  3  -76  <<  2-  S0  <=  MIN_INT  R8++  MOOD!  CHOOSE"
	"      TRAP8  GPS  R1++  AGE "
	"}"
	""
	"row55:"
	"{"
	"      R1  -48  swap "
	"}"
	""
	"row56:"
	"{"
	"      MOOD  25  MOOD!  70  R7++  OMOVE  R6!  TRAP7  58  42  if  -22  MAX_INT  R6++"
	"      5 "
	"}"
	""
	"row57:"
	"{"
	"      2pop "
	"}"
	""
	"row58:"
	"{"
	"      <>  -78  -40 "
	"}"
  }

CELL 4   376 171
	0 0
	0 8 14
	{ 55 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
		16 2
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		0
		0
		-2
	}

CELL 4   375 173
	0 0
	0 8 12
	{ 39 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
		16 2
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		0
		-25
		0
		-25
		1
		5
		10
	}

CELL 4   377 172
	0 0
	0 16 21
	{ 55 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		-40
		50
		-1
		0
	}

CELL 4   376 172
	0 0
	0 16 6
	{ 59 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		10
		0
		0
	}

CELL 4   374 172
	0 0
	0 16 8
	{ 55 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		1
		0
		276
		5
	}

CELL 4   378 173
	0 0
	0 17 19
	{ 55 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		2
		18
		-90
	}

CELL 4   377 173
	0 0
	0 8 6
	{ 59 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
		16 2
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		0
		-4
		58
		2
	}

CELL 4   374 173
	0 0
	0 8 7
	{ 55 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
		16 2
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		0
		-12
		0
	}

CELL 4   377 174
	0 0
	0 17 6
	{ 45 0 0 0 0
	  0 0 0 0 0 }
	{
		0 1
		11 16
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		31
		2
		18
		-90
		44
		8
		24
		-1
	}

CELL 4   376 174
	0 0
	0 16 2
	{ 39 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		0
		-4
	}

ORGANISM 3  0 10 0   6983582452 6983582452  23865 100000 11275
  {  # program
	"main:"
	"{"
	"      11  call "
	"}"
	""
	"row1:"
	"{"
	"      1  BROADCAST  7  NEAREST  EAT  HALT "
	"}"
	""
	"row2:"
	"{"
	"      HALT "
	"}"
	""
	"row3:"
	"{"
	"     "
	"}"
	""
	"row4:"
	"{"
	"     "
	"}"
	""
	"row5:"
	"{"
	"     "
	"}"
	""
	"row6:"
	"{"
	"     "
	"}"
	""
	"row7:"
	"{"
	"     "
	"}"
	""
	"row8:"
	"{"
	"      DSLEN  58  >  ?exit  DSLEN  2  <  ?exit  2dup  1  5  10  SPAWN  -rot  2pop "
	"}"
	""
	"row9:"
	"{"
	"     "
	"}"
	""
	"row10:"
	"{"
	"      2dup  OMOVE  ?loop  2dup  EAT  pop  2dup  OMOVE  pop  2dup  EAT  pop  2dup"
	"      OMOVE  pop  2dup  EAT  pop  2negate  ENERGY  -rot  SEND-ENERGY  pop "
	"}"
	""
	"row11:"
	"{"
	"      rot  -78  -12  GROW  -37  R5  -37  TRAP4  -40  OMOVE  =  -22  56  GROW  -40"
	"      17  call  79  2dup  OMOVE  ?loop  EAT  20  -21  dup  80  46  --R4  R5++  -2"
	"      65  35  TRAP7  >  -3  -66  R2++  >>  GPS  R5!  19  GROW  R3  16  6  50 "
	"}"
	""
	"row12:"
	"{"
	"      <=  16  97  -66  R2++  xor "
	"}"
	""
	"row13:"
	"{"
	"      CB  -26  -42  45  37  22  50  -13  CB  NEAREST  16  GROW "
	"}"
	""
	"row14:"
	"{"
	"      HOTTEST  R2++  EAT  R9++  R3  POKE  -44  GROW  +  R6++  2+  0=  1+ "
	"}"
	""
	"row15:"
	"{"
	"      2dup  OMOVE  ?loop  EAT  EAT  or  -61  xor  NEAREST  EAT  GROW "
	"}"
	""
	"row16:"
	"{"
	"      -89  HOTTEST  TRAP8  -40  -39  GROW  ENERGY  5  /  R0!  pop  ?loop  ?exit  -1"
	"      0  R0  MAKE-SPORE  -40  50  -1  0  R0  MAKE-SPORE  NUMBER!  R5!  31  -24  ?exit"
	"      33  xor  NEAREST  -78  89  TRAP1  --R6  swap  R0  -36  MAX_INT  -34  -40  -34"
	"      59  -68  /mod  -43  -55  G0!  75  R9!  12  40  -43  -78  97  NUMBER  29  98"
	"      -33  71  <<  0=  89  R7  -33 "
	"}"
	""
	"row17:"
	"{"
	"      24  MOUSE-POS  -46  16  13  call  R5!  15  call  CMOVE  OMOVE  16  call  -5"
	"      HOTTEST  TRAP8  2+  18  -90  44  8  18  ?loop  50  NUM-CELLS  R3!  R7++  58"
	"      tuck  26  69  71  2/  POKE  47  -2  -21  -40 "
	"}"
	""
	"row18:"
	"{"
	"      R2!  EAT  69  R4++  15 "
	"}"
	""
	"row19:"
	"{"
	"      -21  53 "
	"}"
	""
	"row20:"
	"{"
	"      -89  HOTTEST  TRAP8  -40  -39  GROW  ENERGY  5  /  R0!  pop  ?loop  ?exit  -1"
	"      0  R0  MAKE-SPORE  R9++  86  54  -40  50  -1  0  R0  MAKE-SPORE  NUMBER!  R5!"
	"      31  -24  ?exit  33  xor  NEAREST  -78  89  TRAP1  --R6  swap  R0  -36  MAX_INT"
	"      -34  -40  -34  59  -68  /mod  -43  -55  G0!  75  R9!  12  40  -43  -78  97"
	"      NUMBER  29  98  -33  71  <<  0=  89  -40  R7  -33 "
	"}"
	""
	"row21:"
	"{"
	"      -60  -48 "
	"}"
	""
	"row22:"
	"{"
	"      76  or "
	"}"
	""
	"row23:"
	"{"
	"      <>  -78  -40  -37  -44  -42  62  88  4  -73  10  tuck  34  -31  -42  call "
	"}"
	""
	"row24:"
	"{"
	"      -47  not  60  21  -89  -rot  OPCODE  invert  50  0  R0  -95 "
	"}"
	""
	"row25:"
	"{"
	"      rot  -77  -11  NUM-CELLS  -35  R9!  -40  TRAP4  -43  OMOVE  swap  GROW  -36"
	"      15  call  R5  17  -12  2swap  PEEK  91  TRAP7  1-  19  -17  dup  79  50  --R4"
	"      R5++  -3  35  66  33  TRAP7  -62  R2++  >>  GPS  R5!  21  GROW  22  -54  54"
	"      R8++  44  EXUDE  -40  pop  --R0  7  49 "
	"}"
	""
	"row26:"
	"{"
	"     "
	"}"
	""
	"row27:"
	"{"
	"      -64 "
	"}"
	""
	"row28:"
	"{"
	"     "
	"}"
	""
	"row29:"
	"{"
	"      15  R7! "
	"}"
	""
	"row30:"
	"{"
	"      2  NEAREST "
	"}"
	""
	"row31:"
	"{"
	"     "
	"}"
	""
	"row32:"
	"{"
	"      -14  R1  -69  -71  COLDEST  3  -76  <<  2-  S0  <=  MIN_INT  R8++  MOOD!  CHOOSE"
	"      -99  16  TRAP8  GPS  R1++  AGE "
	"}"
	""
	"row33:"
	"{"
	"     "
	"}"
	""
	"row34:"
	"{"
	"      rot  -78  -12  GROW  -37  R5  -37  TRAP4  -40  OMOVE  =  -22  56  GROW  -40"
	"      17  call  79  2dup  OMOVE  ?loop  EAT  20  -21  dup  80  46  --R4  R5++  -2"
	"      65  35  TRAP7  >  -3  -66  R2++  >>  GPS  R5!  19  GROW  R8++  14  -6  52 "
	"}"
	""
	"row35:"
	"{"
	"      17  12  R7++  TRAP7  R1!  -76  31  -24  ?exit "
	"}"
	""
	"row36:"
	"{"
	"      76  18  -76 "
	"}"
	""
	"row37:"
	"{"
	"     "
	"}"
	""
	"row38:"
	"{"
	"      OMOVE  -61  =  -22  56  GROW  55  69 "
	"}"
	""
	"row39:"
	"{"
	"      -49 "
	"}"
	""
	"row40:"
	"{"
	"      -44  1-  60  2dup  87  -41  2dup  87  <>  41  GROW "
	"}"
	""
	"row41:"
	"{"
	"      14 "
	"}"
	""
	"row42:"
	"{"
	"      -40  -40  -78 "
	"}"
	""
	"row43:"
	"{"
	"      -70  GPS "
	"}"
	""
	"row44:"
	"{"
	"     "
	"}"
	""
	"row45:"
	"{"
	"      -40  -14  48  GPS  -79  --R0  33  COLDEST  -32  -43  -57  98  -22  rot  -40"
	"      -4  tuck  -67  R1  -76 "
	"}"
	""
	"row46:"
	"{"
	"      -67  -13  xor  97  G0  -41  63  -39  CHOOSE "
	"}"
	""
	"row47:"
	"{"
	"      71 "
	"}"
	""
	"row48:"
	"{"
	"      -14  R1  -69  -71  COLDEST  3  -76  <<  2-  S0  <=  MIN_INT  R8++  MOOD!  CHOOSE"
	"      -99  16  TRAP8  GPS  R1++  AGE "
	"}"
	""
	"row49:"
	"{"
	"      -40  -41  63  -39  -40 "
	"}"
	""
	"row50:"
	"{"
	"     "
	"}"
	""
	"row51:"
	"{"
	"      -40  -40  -40  15  R7!  -43  14 "
	"}"
	""
	"row52:"
	"{"
	"      -40  -40  -25 "
	"}"
	""
	"row53:"
	"{"
	"     "
	"}"
	""
	"row54:"
	"{"
	"      -14  R1  -69  -71  COLDEST  3  -76  <<  2-  S0  <=  MIN_INT  R8++  MOOD!  CHOOSE"
	"      TRAP8  GPS  R1++  AGE "
	"}"
	""
	"row55:"
	"{"
	"      R1  -48  swap "
	"}"
	""
	"row56:"
	"{"
	"      MOOD  25  MOOD!  70  R7++  OMOVE  R6!  TRAP7  58  42  if  -22  MAX_INT  R6++"
	"      5 "
	"}"
	""
	"row57:"
	"{"
	"      2pop "
	"}"
	""
	"row58:"
	"{"
	"      <>  -78  -40 "
	"}"
  }

CELL 3   140 312
	0 0
	0 8 14
	{ 55 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
		16 2
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		0
		0
		-2
	}

CELL 3   139 314
	0 0
	0 8 12
	{ 39 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
		16 2
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		0
		-25
		0
		-25
		1
		5
		10
	}

CELL 3   141 313
	0 0
	0 16 21
	{ 55 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		-40
		50
		-1
		0
	}

CELL 3   140 313
	0 0
	0 16 6
	{ 59 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		10
		0
		0
	}

CELL 3   138 313
	0 0
	0 16 8
	{ 55 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		1
		0
		276
		5
	}

CELL 3   142 314
	0 0
	0 17 19
	{ 55 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		2
		18
		-90
	}

CELL 3   141 314
	0 0
	0 8 6
	{ 59 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
		16 2
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		0
		-4
		58
		2
	}

CELL 3   138 314
	0 0
	0 8 7
	{ 55 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
		16 2
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		0
		-12
		0
	}

CELL 3   141 315
	0 0
	0 17 6
	{ 45 0 0 0 0
	  0 0 0 0 0 }
	{
		0 1
		11 16
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		31
		2
		18
		-90
		44
		8
		24
		-1
	}

CELL 3   140 315
	0 0
	0 16 2
	{ 39 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		0
		-4
	}

ORGANISM 2  0 10 0   6983582452 6983582452  23865 100000 11275
  {  # program
	"main:"
	"{"
	"      11  call "
	"}"
	""
	"row1:"
	"{"
	"      1  BROADCAST  7  NEAREST  EAT  HALT "
	"}"
	""
	"row2:"
	"{"
	"      HALT "
	"}"
	""
	"row3:"
	"{"
	"     "
	"}"
	""
	"row4:"
	"{"
	"     "
	"}"
	""
	"row5:"
	"{"
	"     "
	"}"
	""
	"row6:"
	"{"
	"     "
	"}"
	""
	"row7:"
	"{"
	"     "
	"}"
	""
	"row8:"
	"{"
	"      DSLEN  58  >  ?exit  DSLEN  2  <  ?exit  2dup  1  5  10  SPAWN  -rot  2pop "
	"}"
	""
	"row9:"
	"{"
	"     "
	"}"
	""
	"row10:"
	"{"
	"      2dup  OMOVE  ?loop  2dup  EAT  pop  2dup  OMOVE  pop  2dup  EAT  pop  2dup"
	"      OMOVE  pop  2dup  EAT  pop  2negate  ENERGY  -rot  SEND-ENERGY  pop "
	"}"
	""
	"row11:"
	"{"
	"      rot  -78  -12  GROW  -37  R5  -37  TRAP4  -40  OMOVE  =  -22  56  GROW  -40"
	"      17  call  79  2dup  OMOVE  ?loop  EAT  20  -21  dup  80  46  --R4  R5++  -2"
	"      65  35  TRAP7  >  -3  -66  R2++  >>  GPS  R5!  19  GROW  R3  16  6  50 "
	"}"
	""
	"row12:"
	"{"
	"      <=  16  97  -66  R2++  xor "
	"}"
	""
	"row13:"
	"{"
	"      CB  -26  -42  45  37  22  50  -13  CB  NEAREST  16  GROW "
	"}"
	""
	"row14:"
	"{"
	"      HOTTEST  R2++  EAT  R9++  R3  POKE  -44  GROW  +  R6++  2+  0=  1+ "
	"}"
	""
	"row15:"
	"{"
	"      2dup  OMOVE  ?loop  EAT  EAT  or  -61  xor  NEAREST  EAT  GROW "
	"}"
	""
	"row16:"
	"{"
	"      -89  HOTTEST  TRAP8  -40  -39  GROW  ENERGY  5  /  R0!  pop  ?loop  ?exit  -1"
	"      0  R0  MAKE-SPORE  -40  50  -1  0  R0  MAKE-SPORE  NUMBER!  R5!  31  -24  ?exit"
	"      33  xor  NEAREST  -78  89  TRAP1  --R6  swap  R0  -36  MAX_INT  -34  -40  -34"
	"      59  -68  /mod  -43  -55  G0!  75  R9!  12  40  -43  -78  97  NUMBER  29  98"
	"      -33  71  <<  0=  89  R7  -33 "
	"}"
	""
	"row17:"
	"{"
	"      24  MOUSE-POS  -46  16  13  call  R5!  15  call  CMOVE  OMOVE  16  call  -5"
	"      HOTTEST  TRAP8  2+  18  -90  44  8  18  ?loop  50  NUM-CELLS  R3!  R7++  58"
	"      tuck  26  69  71  2/  POKE  47  -2  -21  -40 "
	"}"
	""
	"row18:"
	"{"
	"      R2!  EAT  69  R4++  15 "
	"}"
	""
	"row19:"
	"{"
	"      -21  53 "
	"}"
	""
	"row20:"
	"{"
	"      -89  HOTTEST  TRAP8  -40  -39  GROW  ENERGY  5  /  R0!  pop  ?loop  ?exit  -1"
	"      0  R0  MAKE-SPORE  R9++  86  54  -40  50  -1  0  R0  MAKE-SPORE  NUMBER!  R5!"
	"      31  -24  ?exit  33  xor  NEAREST  -78  89  TRAP1  --R6  swap  R0  -36  MAX_INT"
	"      -34  -40  -34  59  -68  /mod  -43  -55  G0!  75  R9!  12  40  -43  -78  97"
	"      NUMBER  29  98  -33  71  <<  0=  89  -40  R7  -33 "
	"}"
	""
	"row21:"
	"{"
	"      -60  -48 "
	"}"
	""
	"row22:"
	"{"
	"      76  or "
	"}"
	""
	"row23:"
	"{"
	"      <>  -78  -40  -37  -44  -42  62  88  4  -73  10  tuck  34  -31  -42  call "
	"}"
	""
	"row24:"
	"{"
	"      -47  not  60  21  -89  -rot  OPCODE  invert  50  0  R0  -95 "
	"}"
	""
	"row25:"
	"{"
	"      rot  -77  -11  NUM-CELLS  -35  R9!  -40  TRAP4  -43  OMOVE  swap  GROW  -36"
	"      15  call  R5  17  -12  2swap  PEEK  91  TRAP7  1-  19  -17  dup  79  50  --R4"
	"      R5++  -3  35  66  33  TRAP7  -62  R2++  >>  GPS  R5!  21  GROW  22  -54  54"
	"      R8++  44  EXUDE  -40  pop  --R0  7  49 "
	"}"
	""
	"row26:"
	"{"
	"     "
	"}"
	""
	"row27:"
	"{"
	"      -64 "
	"}"
	""
	"row28:"
	"{"
	"     "
	"}"
	""
	"row29:"
	"{"
	"      15  R7! "
	"}"
	""
	"row30:"
	"{"
	"      2  NEAREST "
	"}"
	""
	"row31:"
	"{"
	"     "
	"}"
	""
	"row32:"
	"{"
	"      -14  R1  -69  -71  COLDEST  3  -76  <<  2-  S0  <=  MIN_INT  R8++  MOOD!  CHOOSE"
	"      -99  16  TRAP8  GPS  R1++  AGE "
	"}"
	""
	"row33:"
	"{"
	"     "
	"}"
	""
	"row34:"
	"{"
	"      rot  -78  -12  GROW  -37  R5  -37  TRAP4  -40  OMOVE  =  -22  56  GROW  -40"
	"      17  call  79  2dup  OMOVE  ?loop  EAT  20  -21  dup  80  46  --R4  R5++  -2"
	"      65  35  TRAP7  >  -3  -66  R2++  >>  GPS  R5!  19  GROW  R8++  14  -6  52 "
	"}"
	""
	"row35:"
	"{"
	"      17  12  R7++  TRAP7  R1!  -76  31  -24  ?exit "
	"}"
	""
	"row36:"
	"{"
	"      76  18  -76 "
	"}"
	""
	"row37:"
	"{"
	"     "
	"}"
	""
	"row38:"
	"{"
	"      OMOVE  -61  =  -22  56  GROW  55  69 "
	"}"
	""
	"row39:"
	"{"
	"      -49 "
	"}"
	""
	"row40:"
	"{"
	"      -44  1-  60  2dup  87  -41  2dup  87  <>  41  GROW "
	"}"
	""
	"row41:"
	"{"
	"      14 "
	"}"
	""
	"row42:"
	"{"
	"      -40  -40  -78 "
	"}"
	""
	"row43:"
	"{"
	"      -70  GPS "
	"}"
	""
	"row44:"
	"{"
	"     "
	"}"
	""
	"row45:"
	"{"
	"      -40  -14  48  GPS  -79  --R0  33  COLDEST  -32  -43  -57  98  -22  rot  -40"
	"      -4  tuck  -67  R1  -76 "
	"}"
	""
	"row46:"
	"{"
	"      -67  -13  xor  97  G0  -41  63  -39  CHOOSE "
	"}"
	""
	"row47:"
	"{"
	"      71 "
	"}"
	""
	"row48:"
	"{"
	"      -14  R1  -69  -71  COLDEST  3  -76  <<  2-  S0  <=  MIN_INT  R8++  MOOD!  CHOOSE"
	"      -99  16  TRAP8  GPS  R1++  AGE "
	"}"
	""
	"row49:"
	"{"
	"      -40  -41  63  -39  -40 "
	"}"
	""
	"row50:"
	"{"
	"     "
	"}"
	""
	"row51:"
	"{"
	"      -40  -40  -40  15  R7!  -43  14 "
	"}"
	""
	"row52:"
	"{"
	"      -40  -40  -25 "
	"}"
	""
	"row53:"
	"{"
	"     "
	"}"
	""
	"row54:"
	"{"
	"      -14  R1  -69  -71  COLDEST  3  -76  <<  2-  S0  <=  MIN_INT  R8++  MOOD!  CHOOSE"
	"      TRAP8  GPS  R1++  AGE "
	"}"
	""
	"row55:"
	"{"
	"      R1  -48  swap "
	"}"
	""
	"row56:"
	"{"
	"      MOOD  25  MOOD!  70  R7++  OMOVE  R6!  TRAP7  58  42  if  -22  MAX_INT  R6++"
	"      5 "
	"}"
	""
	"row57:"
	"{"
	"      2pop "
	"}"
	""
	"row58:"
	"{"
	"      <>  -78  -40 "
	"}"
  }

CELL 2   207 203
	0 0
	0 8 14
	{ 55 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
		16 2
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		0
		0
		-2
	}

CELL 2   206 205
	0 0
	0 8 12
	{ 39 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
		16 2
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		0
		-25
		0
		-25
		1
		5
		10
	}

CELL 2   208 204
	0 0
	0 16 21
	{ 55 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		-40
		50
		-1
		0
	}

CELL 2   207 204
	0 0
	0 16 6
	{ 59 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		10
		0
		0
	}

CELL 2   205 204
	0 0
	0 16 8
	{ 55 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		1
		0
		276
		5
	}

CELL 2   209 205
	0 0
	0 17 19
	{ 55 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		2
		18
		-90
	}

CELL 2   208 205
	0 0
	0 8 6
	{ 59 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
		16 2
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		0
		-4
		58
		2
	}

CELL 2   205 205
	0 0
	0 8 7
	{ 55 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
		16 2
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		0
		-12
		0
	}

CELL 2   208 206
	0 0
	0 17 6
	{ 45 0 0 0 0
	  0 0 0 0 0 }
	{
		0 1
		11 16
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		31
		2
		18
		-90
		44
		8
		24
		-1
	}

CELL 2   207 206
	0 0
	0 16 2
	{ 39 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		0
		-4
	}

ORGANISM 1  0 10 0   6983582452 6983582452  23865 100000 11275
  {  # program
	"main:"
	"{"
	"      11  call "
	"}"
	""
	"row1:"
	"{"
	"      1  BROADCAST  7  NEAREST  EAT  HALT "
	"}"
	""
	"row2:"
	"{"
	"      HALT "
	"}"
	""
	"row3:"
	"{"
	"     "
	"}"
	""
	"row4:"
	"{"
	"     "
	"}"
	""
	"row5:"
	"{"
	"     "
	"}"
	""
	"row6:"
	"{"
	"     "
	"}"
	""
	"row7:"
	"{"
	"     "
	"}"
	""
	"row8:"
	"{"
	"      DSLEN  58  >  ?exit  DSLEN  2  <  ?exit  2dup  1  5  10  SPAWN  -rot  2pop "
	"}"
	""
	"row9:"
	"{"
	"     "
	"}"
	""
	"row10:"
	"{"
	"      2dup  OMOVE  ?loop  2dup  EAT  pop  2dup  OMOVE  pop  2dup  EAT  pop  2dup"
	"      OMOVE  pop  2dup  EAT  pop  2negate  ENERGY  -rot  SEND-ENERGY  pop "
	"}"
	""
	"row11:"
	"{"
	"      rot  -78  -12  GROW  -37  R5  -37  TRAP4  -40  OMOVE  =  -22  56  GROW  -40"
	"      17  call  79  2dup  OMOVE  ?loop  EAT  20  -21  dup  80  46  --R4  R5++  -2"
	"      65  35  TRAP7  >  -3  -66  R2++  >>  GPS  R5!  19  GROW  R3  16  6  50 "
	"}"
	""
	"row12:"
	"{"
	"      <=  16  97  -66  R2++  xor "
	"}"
	""
	"row13:"
	"{"
	"      CB  -26  -42  45  37  22  50  -13  CB  NEAREST  16  GROW "
	"}"
	""
	"row14:"
	"{"
	"      HOTTEST  R2++  EAT  R9++  R3  POKE  -44  GROW  +  R6++  2+  0=  1+ "
	"}"
	""
	"row15:"
	"{"
	"      2dup  OMOVE  ?loop  EAT  EAT  or  -61  xor  NEAREST  EAT  GROW "
	"}"
	""
	"row16:"
	"{"
	"      -89  HOTTEST  TRAP8  -40  -39  GROW  ENERGY  5  /  R0!  pop  ?loop  ?exit  -1"
	"      0  R0  MAKE-SPORE  -40  50  -1  0  R0  MAKE-SPORE  NUMBER!  R5!  31  -24  ?exit"
	"      33  xor  NEAREST  -78  89  TRAP1  --R6  swap  R0  -36  MAX_INT  -34  -40  -34"
	"      59  -68  /mod  -43  -55  G0!  75  R9!  12  40  -43  -78  97  NUMBER  29  98"
	"      -33  71  <<  0=  89  R7  -33 "
	"}"
	""
	"row17:"
	"{"
	"      24  MOUSE-POS  -46  16  13  call  R5!  15  call  CMOVE  OMOVE  16  call  -5"
	"      HOTTEST  TRAP8  2+  18  -90  44  8  18  ?loop  50  NUM-CELLS  R3!  R7++  58"
	"      tuck  26  69  71  2/  POKE  47  -2  -21  -40 "
	"}"
	""
	"row18:"
	"{"
	"      R2!  EAT  69  R4++  15 "
	"}"
	""
	"row19:"
	"{"
	"      -21  53 "
	"}"
	""
	"row20:"
	"{"
	"      -89  HOTTEST  TRAP8  -40  -39  GROW  ENERGY  5  /  R0!  pop  ?loop  ?exit  -1"
	"      0  R0  MAKE-SPORE  R9++  86  54  -40  50  -1  0  R0  MAKE-SPORE  NUMBER!  R5!"
	"      31  -24  ?exit  33  xor  NEAREST  -78  89  TRAP1  --R6  swap  R0  -36  MAX_INT"
	"      -34  -40  -34  59  -68  /mod  -43  -55  G0!  75  R9!  12  40  -43  -78  97"
	"      NUMBER  29  98  -33  71  <<  0=  89  -40  R7  -33 "
	"}"
	""
	"row21:"
	"{"
	"      -60  -48 "
	"}"
	""
	"row22:"
	"{"
	"      76  or "
	"}"
	""
	"row23:"
	"{"
	"      <>  -78  -40  -37  -44  -42  62  88  4  -73  10  tuck  34  -31  -42  call "
	"}"
	""
	"row24:"
	"{"
	"      -47  not  60  21  -89  -rot  OPCODE  invert  50  0  R0  -95 "
	"}"
	""
	"row25:"
	"{"
	"      rot  -77  -11  NUM-CELLS  -35  R9!  -40  TRAP4  -43  OMOVE  swap  GROW  -36"
	"      15  call  R5  17  -12  2swap  PEEK  91  TRAP7  1-  19  -17  dup  79  50  --R4"
	"      R5++  -3  35  66  33  TRAP7  -62  R2++  >>  GPS  R5!  21  GROW  22  -54  54"
	"      R8++  44  EXUDE  -40  pop  --R0  7  49 "
	"}"
	""
	"row26:"
	"{"
	"     "
	"}"
	""
	"row27:"
	"{"
	"      -64 "
	"}"
	""
	"row28:"
	"{"
	"     "
	"}"
	""
	"row29:"
	"{"
	"      15  R7! "
	"}"
	""
	"row30:"
	"{"
	"      2  NEAREST "
	"}"
	""
	"row31:"
	"{"
	"     "
	"}"
	""
	"row32:"
	"{"
	"      -14  R1  -69  -71  COLDEST  3  -76  <<  2-  S0  <=  MIN_INT  R8++  MOOD!  CHOOSE"
	"      -99  16  TRAP8  GPS  R1++  AGE "
	"}"
	""
	"row33:"
	"{"
	"     "
	"}"
	""
	"row34:"
	"{"
	"      rot  -78  -12  GROW  -37  R5  -37  TRAP4  -40  OMOVE  =  -22  56  GROW  -40"
	"      17  call  79  2dup  OMOVE  ?loop  EAT  20  -21  dup  80  46  --R4  R5++  -2"
	"      65  35  TRAP7  >  -3  -66  R2++  >>  GPS  R5!  19  GROW  R8++  14  -6  52 "
	"}"
	""
	"row35:"
	"{"
	"      17  12  R7++  TRAP7  R1!  -76  31  -24  ?exit "
	"}"
	""
	"row36:"
	"{"
	"      76  18  -76 "
	"}"
	""
	"row37:"
	"{"
	"     "
	"}"
	""
	"row38:"
	"{"
	"      OMOVE  -61  =  -22  56  GROW  55  69 "
	"}"
	""
	"row39:"
	"{"
	"      -49 "
	"}"
	""
	"row40:"
	"{"
	"      -44  1-  60  2dup  87  -41  2dup  87  <>  41  GROW "
	"}"
	""
	"row41:"
	"{"
	"      14 "
	"}"
	""
	"row42:"
	"{"
	"      -40  -40  -78 "
	"}"
	""
	"row43:"
	"{"
	"      -70  GPS "
	"}"
	""
	"row44:"
	"{"
	"     "
	"}"
	""
	"row45:"
	"{"
	"      -40  -14  48  GPS  -79  --R0  33  COLDEST  -32  -43  -57  98  -22  rot  -40"
	"      -4  tuck  -67  R1  -76 "
	"}"
	""
	"row46:"
	"{"
	"      -67  -13  xor  97  G0  -41  63  -39  CHOOSE "
	"}"
	""
	"row47:"
	"{"
	"      71 "
	"}"
	""
	"row48:"
	"{"
	"      -14  R1  -69  -71  COLDEST  3  -76  <<  2-  S0  <=  MIN_INT  R8++  MOOD!  CHOOSE"
	"      -99  16  TRAP8  GPS  R1++  AGE "
	"}"
	""
	"row49:"
	"{"
	"      -40  -41  63  -39  -40 "
	"}"
	""
	"row50:"
	"{"
	"     "
	"}"
	""
	"row51:"
	"{"
	"      -40  -40  -40  15  R7!  -43  14 "
	"}"
	""
	"row52:"
	"{"
	"      -40  -40  -25 "
	"}"
	""
	"row53:"
	"{"
	"     "
	"}"
	""
	"row54:"
	"{"
	"      -14  R1  -69  -71  COLDEST  3  -76  <<  2-  S0  <=  MIN_INT  R8++  MOOD!  CHOOSE"
	"      TRAP8  GPS  R1++  AGE "
	"}"
	""
	"row55:"
	"{"
	"      R1  -48  swap "
	"}"
	""
	"row56:"
	"{"
	"      MOOD  25  MOOD!  70  R7++  OMOVE  R6!  TRAP7  58  42  if  -22  MAX_INT  R6++"
	"      5 "
	"}"
	""
	"row57:"
	"{"
	"      2pop "
	"}"
	""
	"row58:"
	"{"
	"      <>  -78  -40 "
	"}"
  }

CELL 1   206 255
	0 0
	0 8 14
	{ 55 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
		16 2
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		0
		0
		-2
	}

CELL 1   205 257
	0 0
	0 8 12
	{ 39 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
		16 2
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		0
		-25
		0
		-25
		1
		5
		10
	}

CELL 1   207 256
	0 0
	0 16 21
	{ 55 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		-40
		50
		-1
		0
	}

CELL 1   206 256
	0 0
	0 16 6
	{ 59 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		10
		0
		0
	}

CELL 1   204 256
	0 0
	0 16 8
	{ 55 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		1
		0
		276
		5
	}

CELL 1   208 257
	0 0
	0 17 19
	{ 55 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		2
		18
		-90
	}

CELL 1   207 257
	0 0
	0 8 6
	{ 59 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
		16 2
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		0
		-4
		58
		2
	}

CELL 1   204 257
	0 0
	0 8 7
	{ 55 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
		16 2
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		0
		-12
		0
	}

CELL 1   207 258
	0 0
	0 17 6
	{ 45 0 0 0 0
	  0 0 0 0 0 }
	{
		0 1
		11 16
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		31
		2
		18
		-90
		44
		8
		24
		-1
	}

CELL 1   206 258
	0 0
	0 16 2
	{ 39 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 16
		17 12
	}
	{
		0
		-37
		0
		0
		-40
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		2
		18
		-90
		44
		8
		24
		-1
		-1
		-46
		16
		13
		-26
		31
		2
		18
		-90
		44
		8
		0
		0
		-4
	}


CELL_LIST {
	154 205
	386 292
	387 292
	384 291
	387 291
	388 291
	384 290
	386 290
	387 290
	385 291
	386 289
	376 174
	377 174
	374 173
	377 173
	378 173
	374 172
	376 172
	377 172
	375 173
	376 171
	140 315
	141 315
	138 314
	141 314
	142 314
	138 313
	140 313
	141 313
	139 314
	140 312
	207 206
	208 206
	205 205
	208 205
	209 205
	205 204
	207 204
	208 204
	206 205
	207 203
	206 258
	207 258
	204 257
	207 257
	208 257
	204 256
	206 256
	207 256
	205 257
	206 255
}

