# PHOTON ASCII

struct ORGANIC[N] {
	X
	Y
	ENERGY
}

struct BARRIER[N] {
	X
	Y
}

struct ER {
	FIDX
	RIDX
	STATE[N] {
		VALUE
	}
}

struct SIMULATION_OPTIONS {
	MODE
}

struct STRAIN_OPTIONS[N] {
	ENABLED
	NAME
	LOOK_MODE
	EAT_MODE
	MAKE_SPORE_MODE
	MAKE_SPORE_ENERGY
	CMOVE_MODE
	OMOVE_MODE
	GROW_MODE
	GROW_ENERGY
	GROW_SIZE
	ROTATE_MODE
	CSHIFT_MODE
	MAKE_ORGANIC_MODE
	MAKE_BARRIER_MODE
	EXUDE_MODE
	SHOUT_MODE
	SPAWN_MODE
	LISTEN_MODE
	BROADCAST_MODE
	SAY_MODE
	READ_MODE
	WRITE_MODE
	KEY_PRESS_MODE
	SEND_MODE
	SEND_ENERGY_MODE
}

struct KFMO[N] {
	MAX_APPLY
	PROB_MUTATE_CODEBLOCK
	PROB_DUPLICATE
	PROB_DELETE
	PROB_INSERT
	PROB_TRANSPOSE
	PROB_MODIFY
	MERGE_MODE
	XLEN
	PROTECTED_CODEBLOCKS
	MAX_CODE_BLOCKS
}

struct STRAIN_OPCODES[N] {
	NPROTECTED
	TABLE[M] {
		NAME
	}
}

struct SPORE {
	X
	Y
	ENERGY
	PARENT
	STRAIN
	SFLAGS
	PROGRAM[N] {
		TEXT_LINE
	}
}

struct CELL {
	ORGANISM_ID
	X
	Y
	MOOD
	MESSAGE

	MACHINE {
		TERMINATED
		CB
		PC
		R[N] {
			VALUE
		}

		CALL_STACK[N] {
			CB
			PC
		}

		DATA_STACK[N] {
			VALUE
		}
	}
}

struct ORGANISM {
	ORGANISM_ID
	STRAIN
	SIM_COUNT
	OFLAGS
	PARENT1
	PARENT2
	GENERATION
	ENERGY
	AGE
	PROGRAM[N] {
		TEXT_LINE
	}
}

struct UNIVERSE {
	SEED
	STEP
	AGE
	CURRENT_CELL { X Y }    # -1 -1 means NULL
	NEXT_ID
	NBORN
	NDIE
	WIDTH
	HEIGHT
	G0
	KEY
	MOUSE_X
	MOUSE_Y
	S0[N] { V }}

struct CELL_LIST[N] {
	X Y 
}

struct ODOR_MAP[N] {
	X Y LEN VALUE
}

UNIVERSE 966193876             # seed
         0           # step
         0           # age
         119 235          # current cell location (x,y)
         8           # next id
         0 0      # number births, deaths
         700 400          # dimensions: width x height
         0             # global register G0
         0             # key
         -1             # mouse_x
         -1             # mouse_y
       { 0 0 0 0 0 0 0 0 }  # S0's for each strain

ER 1 0 63
	3526129669	2989230447	278315425	1631952816
	1187209121	3246203444	2108569705	697483083
	1096544090	923605116	962051732	2010918187
	25439475	2239619427	2501420102	3039855026
	238877949	1038402689	3824771293	1532761117
	3955202814	245693616	2446382623	2877471946
	2486349123	1173936688	436335308	1097941886
	3956447979	1391607086	4228361044	2537250745
	534016316	1416979406	2350808369	1638519401
	3275442473	2810404059	571675155	796551282
	2191127853	298299683	1335855265	883715293
	2675090723	457238518	1351490565	2069573685
	2625829458	435938157	1863330579	2547264821
	1720984416	1189205279	1635955049	230234216
	741934713	1927397268	1059118108	2690518133
	615485575	3833414486	1873808395

SIMULATION_OPTIONS 0   # mode


STRAIN_OPTIONS {
	# Strain 0
	1        # enabled
	"ShootNew"        # strain name these settings were based on
	0        # LOOK mode
	640        # EAT mode
	0        # MAKE-SPORE mode
	100        # MAKE-SPORE energy
	0        # CMOVE mode
	0        # OMOVE mode
	0        # GROW mode
	100        # GROW energy
	20        # GROW size
	0        # ROTATE mode
	0        # CSHIFT mode
	0        # MAKE-ORGANIC mode
	0        # MAKE-BARRIER mode
	0        # EXUDE mode
	0        # SHOUT mode
	45        # SPAWN mode
	0        # LISTEN mode
	2        # BROADCAST mode
	32        # SAY mode
	0        # READ mode
	0        # WRITE mode
	0        # KEY-PRESS mode
	0        # SEND mode
	0        # SEND-ENERGY mode

	# Strain 1
	0        # enabled
	""        # strain name these settings were based on
	0        # LOOK mode
	0        # EAT mode
	0        # MAKE-SPORE mode
	0        # MAKE-SPORE energy
	0        # CMOVE mode
	0        # OMOVE mode
	0        # GROW mode
	0        # GROW energy
	0        # GROW size
	0        # ROTATE mode
	0        # CSHIFT mode
	0        # MAKE-ORGANIC mode
	0        # MAKE-BARRIER mode
	0        # EXUDE mode
	0        # SHOUT mode
	0        # SPAWN mode
	0        # LISTEN mode
	0        # BROADCAST mode
	0        # SAY mode
	0        # READ mode
	0        # WRITE mode
	0        # KEY-PRESS mode
	0        # SEND mode
	0        # SEND-ENERGY mode

	# Strain 2
	0        # enabled
	""        # strain name these settings were based on
	0        # LOOK mode
	0        # EAT mode
	0        # MAKE-SPORE mode
	0        # MAKE-SPORE energy
	0        # CMOVE mode
	0        # OMOVE mode
	0        # GROW mode
	0        # GROW energy
	0        # GROW size
	0        # ROTATE mode
	0        # CSHIFT mode
	0        # MAKE-ORGANIC mode
	0        # MAKE-BARRIER mode
	0        # EXUDE mode
	0        # SHOUT mode
	0        # SPAWN mode
	0        # LISTEN mode
	0        # BROADCAST mode
	0        # SAY mode
	0        # READ mode
	0        # WRITE mode
	0        # KEY-PRESS mode
	0        # SEND mode
	0        # SEND-ENERGY mode

	# Strain 3
	0        # enabled
	""        # strain name these settings were based on
	0        # LOOK mode
	0        # EAT mode
	0        # MAKE-SPORE mode
	0        # MAKE-SPORE energy
	0        # CMOVE mode
	0        # OMOVE mode
	0        # GROW mode
	0        # GROW energy
	0        # GROW size
	0        # ROTATE mode
	0        # CSHIFT mode
	0        # MAKE-ORGANIC mode
	0        # MAKE-BARRIER mode
	0        # EXUDE mode
	0        # SHOUT mode
	0        # SPAWN mode
	0        # LISTEN mode
	0        # BROADCAST mode
	0        # SAY mode
	0        # READ mode
	0        # WRITE mode
	0        # KEY-PRESS mode
	0        # SEND mode
	0        # SEND-ENERGY mode

	# Strain 4
	0        # enabled
	""        # strain name these settings were based on
	0        # LOOK mode
	0        # EAT mode
	0        # MAKE-SPORE mode
	0        # MAKE-SPORE energy
	0        # CMOVE mode
	0        # OMOVE mode
	0        # GROW mode
	0        # GROW energy
	0        # GROW size
	0        # ROTATE mode
	0        # CSHIFT mode
	0        # MAKE-ORGANIC mode
	0        # MAKE-BARRIER mode
	0        # EXUDE mode
	0        # SHOUT mode
	0        # SPAWN mode
	0        # LISTEN mode
	0        # BROADCAST mode
	0        # SAY mode
	0        # READ mode
	0        # WRITE mode
	0        # KEY-PRESS mode
	0        # SEND mode
	0        # SEND-ENERGY mode

	# Strain 5
	1        # enabled
	"bullet2"        # strain name these settings were based on
	1        # LOOK mode
	520        # EAT mode
	0        # MAKE-SPORE mode
	0        # MAKE-SPORE energy
	0        # CMOVE mode
	0        # OMOVE mode
	0        # GROW mode
	0        # GROW energy
	0        # GROW size
	1        # ROTATE mode
	0        # CSHIFT mode
	0        # MAKE-ORGANIC mode
	0        # MAKE-BARRIER mode
	0        # EXUDE mode
	0        # SHOUT mode
	0        # SPAWN mode
	0        # LISTEN mode
	0        # BROADCAST mode
	0        # SAY mode
	0        # READ mode
	0        # WRITE mode
	0        # KEY-PRESS mode
	0        # SEND mode
	1024        # SEND-ENERGY mode

	# Strain 6
	0        # enabled
	""        # strain name these settings were based on
	0        # LOOK mode
	0        # EAT mode
	0        # MAKE-SPORE mode
	0        # MAKE-SPORE energy
	0        # CMOVE mode
	0        # OMOVE mode
	0        # GROW mode
	0        # GROW energy
	0        # GROW size
	0        # ROTATE mode
	0        # CSHIFT mode
	0        # MAKE-ORGANIC mode
	0        # MAKE-BARRIER mode
	0        # EXUDE mode
	0        # SHOUT mode
	0        # SPAWN mode
	0        # LISTEN mode
	0        # BROADCAST mode
	0        # SAY mode
	0        # READ mode
	0        # WRITE mode
	0        # KEY-PRESS mode
	0        # SEND mode
	0        # SEND-ENERGY mode

	# Strain 7
	0        # enabled
	""        # strain name these settings were based on
	0        # LOOK mode
	0        # EAT mode
	0        # MAKE-SPORE mode
	0        # MAKE-SPORE energy
	0        # CMOVE mode
	0        # OMOVE mode
	0        # GROW mode
	0        # GROW energy
	0        # GROW size
	0        # ROTATE mode
	0        # CSHIFT mode
	0        # MAKE-ORGANIC mode
	0        # MAKE-BARRIER mode
	0        # EXUDE mode
	0        # SHOUT mode
	0        # SPAWN mode
	0        # LISTEN mode
	0        # BROADCAST mode
	0        # SAY mode
	0        # READ mode
	0        # WRITE mode
	0        # KEY-PRESS mode
	0        # SEND mode
	0        # SEND-ENERGY mode

}


KFMO {
	# Strain 0
	10		# max apply
	2500		# prob. mutate codeblock
	200		# prob_duplicate
	400		# prob_delete
	200		# prob_insert
	200		# prob_transpose
	200		# prob_modify
	0		# merge_mode
	4		# xlen 
	11		# protected_codeblocks 
	50		# max_code_blocks 

	# Strain 1
	10		# max apply
	2500		# prob. mutate codeblock
	200		# prob_duplicate
	400		# prob_delete
	200		# prob_insert
	200		# prob_transpose
	200		# prob_modify
	0		# merge_mode
	4		# xlen 
	0		# protected_codeblocks 
	100		# max_code_blocks 

	# Strain 2
	10		# max apply
	2500		# prob. mutate codeblock
	200		# prob_duplicate
	400		# prob_delete
	200		# prob_insert
	200		# prob_transpose
	200		# prob_modify
	0		# merge_mode
	4		# xlen 
	0		# protected_codeblocks 
	100		# max_code_blocks 

	# Strain 3
	10		# max apply
	2500		# prob. mutate codeblock
	200		# prob_duplicate
	400		# prob_delete
	200		# prob_insert
	200		# prob_transpose
	200		# prob_modify
	0		# merge_mode
	4		# xlen 
	0		# protected_codeblocks 
	100		# max_code_blocks 

	# Strain 4
	10		# max apply
	2500		# prob. mutate codeblock
	200		# prob_duplicate
	400		# prob_delete
	200		# prob_insert
	200		# prob_transpose
	200		# prob_modify
	0		# merge_mode
	4		# xlen 
	0		# protected_codeblocks 
	100		# max_code_blocks 

	# Strain 5
	10		# max apply
	2500		# prob. mutate codeblock
	200		# prob_duplicate
	400		# prob_delete
	200		# prob_insert
	200		# prob_transpose
	200		# prob_modify
	0		# merge_mode
	4		# xlen 
	0		# protected_codeblocks 
	100		# max_code_blocks 

	# Strain 6
	10		# max apply
	2500		# prob. mutate codeblock
	200		# prob_duplicate
	400		# prob_delete
	200		# prob_insert
	200		# prob_transpose
	200		# prob_modify
	0		# merge_mode
	4		# xlen 
	0		# protected_codeblocks 
	100		# max_code_blocks 

	# Strain 7
	10		# max apply
	2500		# prob. mutate codeblock
	200		# prob_duplicate
	400		# prob_delete
	200		# prob_insert
	200		# prob_transpose
	200		# prob_modify
	0		# merge_mode
	4		# xlen 
	0		# protected_codeblocks 
	100		# max_code_blocks 

}


STRAIN_OPCODES {

	4  # number of protected instructions at start of table
	# instruction table for strain 0
	{
		"MAKE-BARRIER"      			# opcode 0
		"BROADCAST"         			# opcode 1
		"SAY"               			# opcode 2
		"SPAWN"             			# opcode 3
		"call"              			# opcode 4
		"if"                			# opcode 5
		"ifelse"            			# opcode 6
		"?loop"             			# opcode 7
		"?exit"             			# opcode 8
		"pop"               			# opcode 9
		"dup"               			# opcode 10
		"swap"              			# opcode 11
		"over"              			# opcode 12
		"rot"               			# opcode 13
		"?dup"              			# opcode 14
		"-rot"              			# opcode 15
		"2swap"             			# opcode 16
		"2over"             			# opcode 17
		"2dup"              			# opcode 18
		"2pop"              			# opcode 19
		"nip"               			# opcode 20
		"tuck"              			# opcode 21
		"1+"                			# opcode 22
		"1-"                			# opcode 23
		"2+"                			# opcode 24
		"2-"                			# opcode 25
		"2/"                			# opcode 26
		"2*"                			# opcode 27
		"abs"               			# opcode 28
		"sqrt"              			# opcode 29
		"+"                 			# opcode 30
		"-"                 			# opcode 31
		"*"                 			# opcode 32
		"/"                 			# opcode 33
		"mod"               			# opcode 34
		"/mod"              			# opcode 35
		"negate"            			# opcode 36
		"2negate"           			# opcode 37
		"<<"                			# opcode 38
		">>"                			# opcode 39
		"="                 			# opcode 40
		"<>"                			# opcode 41
		"<"                 			# opcode 42
		">"                 			# opcode 43
		"<="                			# opcode 44
		">="                			# opcode 45
		"0="                			# opcode 46
		"or"                			# opcode 47
		"and"               			# opcode 48
		"not"               			# opcode 49
		"invert"            			# opcode 50
		"xor"               			# opcode 51
		"min"               			# opcode 52
		"max"               			# opcode 53
		"CB"                			# opcode 54
		"CBLEN"             			# opcode 55
		"CSLEN"             			# opcode 56
		"DSLEN"             			# opcode 57
		"R0"                			# opcode 58
		"R1"                			# opcode 59
		"R2"                			# opcode 60
		"R3"                			# opcode 61
		"R4"                			# opcode 62
		"R5"                			# opcode 63
		"R6"                			# opcode 64
		"R7"                			# opcode 65
		"R8"                			# opcode 66
		"R9"                			# opcode 67
		"R0!"               			# opcode 68
		"R1!"               			# opcode 69
		"R2!"               			# opcode 70
		"R3!"               			# opcode 71
		"R4!"               			# opcode 72
		"R5!"               			# opcode 73
		"R6!"               			# opcode 74
		"R7!"               			# opcode 75
		"R8!"               			# opcode 76
		"R9!"               			# opcode 77
		"R0++"              			# opcode 78
		"R1++"              			# opcode 79
		"R2++"              			# opcode 80
		"R3++"              			# opcode 81
		"R4++"              			# opcode 82
		"R5++"              			# opcode 83
		"R6++"              			# opcode 84
		"R7++"              			# opcode 85
		"R8++"              			# opcode 86
		"R9++"              			# opcode 87
		"--R0"              			# opcode 88
		"--R1"              			# opcode 89
		"--R2"              			# opcode 90
		"--R3"              			# opcode 91
		"--R4"              			# opcode 92
		"--R5"              			# opcode 93
		"--R6"              			# opcode 94
		"--R7"              			# opcode 95
		"--R8"              			# opcode 96
		"--R9"              			# opcode 97
		"PEEK"              			# opcode 98
		"POKE"              			# opcode 99
		"NUMBER"            			# opcode 100
		"NUMBER!"           			# opcode 101
		"?NUMBER!"          			# opcode 102
		"OPCODE"            			# opcode 103
		"OPCODE!"           			# opcode 104
		"OPCODE'"           			# opcode 105
		"TRAP1"             			# opcode 106
		"TRAP2"             			# opcode 107
		"TRAP3"             			# opcode 108
		"TRAP4"             			# opcode 109
		"TRAP5"             			# opcode 110
		"TRAP6"             			# opcode 111
		"TRAP7"             			# opcode 112
		"TRAP8"             			# opcode 113
		"TRAP9"             			# opcode 114
		"sign"              			# opcode 115
		"pack2"             			# opcode 116
		"unpack2"           			# opcode 117
		"MAX_INT"           			# opcode 118
		"MIN_INT"           			# opcode 119
		"HALT"              			# opcode 120
		"nop"               			# opcode 121
		"CMOVE"             			# opcode 122
		"OMOVE"             			# opcode 123
		"ROTATE"            			# opcode 124
		"EAT"               			# opcode 125
		"MAKE-SPORE"        			# opcode 126
		"MAKE-ORGANIC"      			# opcode 127
		"GROW"              			# opcode 128
		"GROW.CB"           			# opcode 129
		"CSHIFT"            			# opcode 130
		"EXUDE"             			# opcode 131
		"LOOK"              			# opcode 132
		"NEAREST"           			# opcode 133
		"FARTHEST"          			# opcode 134
		"SIZE"              			# opcode 135
		"BIGGEST"           			# opcode 136
		"SMALLEST"          			# opcode 137
		"TEMPERATURE"       			# opcode 138
		"HOTTEST"           			# opcode 139
		"COLDEST"           			# opcode 140
		"SMELL"             			# opcode 141
		"MOOD"              			# opcode 142
		"MOOD!"             			# opcode 143
		"SEND"              			# opcode 144
		"RECV"              			# opcode 145
		"ENERGY"            			# opcode 146
		"AGE"               			# opcode 147
		"NUM-CELLS"         			# opcode 148
		"HAS-NEIGHBOR"      			# opcode 149
		"DIST"              			# opcode 150
		"CHOOSE"            			# opcode 151
		"RND"               			# opcode 152
		"SEND-ENERGY"       			# opcode 153
		"POPULATION"        			# opcode 154
		"POPULATION.S"      			# opcode 155
		"GPS"               			# opcode 156
		"NEIGHBORS"         			# opcode 157
		"SHOUT"             			# opcode 158
		"LISTEN"            			# opcode 159
		"READ"              			# opcode 160
		"WRITE"             			# opcode 161
		"KEY-PRESS"         			# opcode 162
		"MOUSE-POS"         			# opcode 163
		"S0"                			# opcode 164
		"S0!"               			# opcode 165
		"G0"                			# opcode 166
		"G0!"               			# opcode 167
	}

	0  # number of protected instructions at start of table
	# instruction table for strain 1
	{
		"call"              			# opcode 0
		"if"                			# opcode 1
		"ifelse"            			# opcode 2
		"?loop"             			# opcode 3
		"?exit"             			# opcode 4
		"pop"               			# opcode 5
		"dup"               			# opcode 6
		"swap"              			# opcode 7
		"over"              			# opcode 8
		"rot"               			# opcode 9
		"?dup"              			# opcode 10
		"-rot"              			# opcode 11
		"2swap"             			# opcode 12
		"2over"             			# opcode 13
		"2dup"              			# opcode 14
		"2pop"              			# opcode 15
		"nip"               			# opcode 16
		"tuck"              			# opcode 17
		"1+"                			# opcode 18
		"1-"                			# opcode 19
		"2+"                			# opcode 20
		"2-"                			# opcode 21
		"2/"                			# opcode 22
		"2*"                			# opcode 23
		"abs"               			# opcode 24
		"sqrt"              			# opcode 25
		"+"                 			# opcode 26
		"-"                 			# opcode 27
		"*"                 			# opcode 28
		"/"                 			# opcode 29
		"mod"               			# opcode 30
		"/mod"              			# opcode 31
		"negate"            			# opcode 32
		"2negate"           			# opcode 33
		"<<"                			# opcode 34
		">>"                			# opcode 35
		"="                 			# opcode 36
		"<>"                			# opcode 37
		"<"                 			# opcode 38
		">"                 			# opcode 39
		"<="                			# opcode 40
		">="                			# opcode 41
		"0="                			# opcode 42
		"or"                			# opcode 43
		"and"               			# opcode 44
		"not"               			# opcode 45
		"invert"            			# opcode 46
		"xor"               			# opcode 47
		"min"               			# opcode 48
		"max"               			# opcode 49
		"CB"                			# opcode 50
		"CBLEN"             			# opcode 51
		"CSLEN"             			# opcode 52
		"DSLEN"             			# opcode 53
		"R0"                			# opcode 54
		"R1"                			# opcode 55
		"R2"                			# opcode 56
		"R3"                			# opcode 57
		"R4"                			# opcode 58
		"R5"                			# opcode 59
		"R6"                			# opcode 60
		"R7"                			# opcode 61
		"R8"                			# opcode 62
		"R9"                			# opcode 63
		"R0!"               			# opcode 64
		"R1!"               			# opcode 65
		"R2!"               			# opcode 66
		"R3!"               			# opcode 67
		"R4!"               			# opcode 68
		"R5!"               			# opcode 69
		"R6!"               			# opcode 70
		"R7!"               			# opcode 71
		"R8!"               			# opcode 72
		"R9!"               			# opcode 73
		"R0++"              			# opcode 74
		"R1++"              			# opcode 75
		"R2++"              			# opcode 76
		"R3++"              			# opcode 77
		"R4++"              			# opcode 78
		"R5++"              			# opcode 79
		"R6++"              			# opcode 80
		"R7++"              			# opcode 81
		"R8++"              			# opcode 82
		"R9++"              			# opcode 83
		"--R0"              			# opcode 84
		"--R1"              			# opcode 85
		"--R2"              			# opcode 86
		"--R3"              			# opcode 87
		"--R4"              			# opcode 88
		"--R5"              			# opcode 89
		"--R6"              			# opcode 90
		"--R7"              			# opcode 91
		"--R8"              			# opcode 92
		"--R9"              			# opcode 93
		"PEEK"              			# opcode 94
		"POKE"              			# opcode 95
		"NUMBER"            			# opcode 96
		"NUMBER!"           			# opcode 97
		"?NUMBER!"          			# opcode 98
		"OPCODE"            			# opcode 99
		"OPCODE!"           			# opcode 100
		"OPCODE'"           			# opcode 101
		"TRAP1"             			# opcode 102
		"TRAP2"             			# opcode 103
		"TRAP3"             			# opcode 104
		"TRAP4"             			# opcode 105
		"TRAP5"             			# opcode 106
		"TRAP6"             			# opcode 107
		"TRAP7"             			# opcode 108
		"TRAP8"             			# opcode 109
		"TRAP9"             			# opcode 110
		"sign"              			# opcode 111
		"pack2"             			# opcode 112
		"unpack2"           			# opcode 113
		"MAX_INT"           			# opcode 114
		"MIN_INT"           			# opcode 115
		"HALT"              			# opcode 116
		"nop"               			# opcode 117
		"CMOVE"             			# opcode 118
		"OMOVE"             			# opcode 119
		"ROTATE"            			# opcode 120
		"EAT"               			# opcode 121
		"MAKE-SPORE"        			# opcode 122
		"MAKE-ORGANIC"      			# opcode 123
		"MAKE-BARRIER"      			# opcode 124
		"GROW"              			# opcode 125
		"GROW.CB"           			# opcode 126
		"CSHIFT"            			# opcode 127
		"EXUDE"             			# opcode 128
		"LOOK"              			# opcode 129
		"NEAREST"           			# opcode 130
		"FARTHEST"          			# opcode 131
		"SIZE"              			# opcode 132
		"BIGGEST"           			# opcode 133
		"SMALLEST"          			# opcode 134
		"TEMPERATURE"       			# opcode 135
		"HOTTEST"           			# opcode 136
		"COLDEST"           			# opcode 137
		"SMELL"             			# opcode 138
		"MOOD"              			# opcode 139
		"MOOD!"             			# opcode 140
		"BROADCAST"         			# opcode 141
		"SEND"              			# opcode 142
		"RECV"              			# opcode 143
		"ENERGY"            			# opcode 144
		"AGE"               			# opcode 145
		"NUM-CELLS"         			# opcode 146
		"HAS-NEIGHBOR"      			# opcode 147
		"DIST"              			# opcode 148
		"CHOOSE"            			# opcode 149
		"RND"               			# opcode 150
		"SEND-ENERGY"       			# opcode 151
		"POPULATION"        			# opcode 152
		"POPULATION.S"      			# opcode 153
		"GPS"               			# opcode 154
		"NEIGHBORS"         			# opcode 155
		"SHOUT"             			# opcode 156
		"LISTEN"            			# opcode 157
		"SAY"               			# opcode 158
		"READ"              			# opcode 159
		"WRITE"             			# opcode 160
		"KEY-PRESS"         			# opcode 161
		"MOUSE-POS"         			# opcode 162
		"SPAWN"             			# opcode 163
		"S0"                			# opcode 164
		"S0!"               			# opcode 165
		"G0"                			# opcode 166
		"G0!"               			# opcode 167
	}

	0  # number of protected instructions at start of table
	# instruction table for strain 2
	{
		"call"              			# opcode 0
		"if"                			# opcode 1
		"ifelse"            			# opcode 2
		"?loop"             			# opcode 3
		"?exit"             			# opcode 4
		"pop"               			# opcode 5
		"dup"               			# opcode 6
		"swap"              			# opcode 7
		"over"              			# opcode 8
		"rot"               			# opcode 9
		"?dup"              			# opcode 10
		"-rot"              			# opcode 11
		"2swap"             			# opcode 12
		"2over"             			# opcode 13
		"2dup"              			# opcode 14
		"2pop"              			# opcode 15
		"nip"               			# opcode 16
		"tuck"              			# opcode 17
		"1+"                			# opcode 18
		"1-"                			# opcode 19
		"2+"                			# opcode 20
		"2-"                			# opcode 21
		"2/"                			# opcode 22
		"2*"                			# opcode 23
		"abs"               			# opcode 24
		"sqrt"              			# opcode 25
		"+"                 			# opcode 26
		"-"                 			# opcode 27
		"*"                 			# opcode 28
		"/"                 			# opcode 29
		"mod"               			# opcode 30
		"/mod"              			# opcode 31
		"negate"            			# opcode 32
		"2negate"           			# opcode 33
		"<<"                			# opcode 34
		">>"                			# opcode 35
		"="                 			# opcode 36
		"<>"                			# opcode 37
		"<"                 			# opcode 38
		">"                 			# opcode 39
		"<="                			# opcode 40
		">="                			# opcode 41
		"0="                			# opcode 42
		"or"                			# opcode 43
		"and"               			# opcode 44
		"not"               			# opcode 45
		"invert"            			# opcode 46
		"xor"               			# opcode 47
		"min"               			# opcode 48
		"max"               			# opcode 49
		"CB"                			# opcode 50
		"CBLEN"             			# opcode 51
		"CSLEN"             			# opcode 52
		"DSLEN"             			# opcode 53
		"R0"                			# opcode 54
		"R1"                			# opcode 55
		"R2"                			# opcode 56
		"R3"                			# opcode 57
		"R4"                			# opcode 58
		"R5"                			# opcode 59
		"R6"                			# opcode 60
		"R7"                			# opcode 61
		"R8"                			# opcode 62
		"R9"                			# opcode 63
		"R0!"               			# opcode 64
		"R1!"               			# opcode 65
		"R2!"               			# opcode 66
		"R3!"               			# opcode 67
		"R4!"               			# opcode 68
		"R5!"               			# opcode 69
		"R6!"               			# opcode 70
		"R7!"               			# opcode 71
		"R8!"               			# opcode 72
		"R9!"               			# opcode 73
		"R0++"              			# opcode 74
		"R1++"              			# opcode 75
		"R2++"              			# opcode 76
		"R3++"              			# opcode 77
		"R4++"              			# opcode 78
		"R5++"              			# opcode 79
		"R6++"              			# opcode 80
		"R7++"              			# opcode 81
		"R8++"              			# opcode 82
		"R9++"              			# opcode 83
		"--R0"              			# opcode 84
		"--R1"              			# opcode 85
		"--R2"              			# opcode 86
		"--R3"              			# opcode 87
		"--R4"              			# opcode 88
		"--R5"              			# opcode 89
		"--R6"              			# opcode 90
		"--R7"              			# opcode 91
		"--R8"              			# opcode 92
		"--R9"              			# opcode 93
		"PEEK"              			# opcode 94
		"POKE"              			# opcode 95
		"NUMBER"            			# opcode 96
		"NUMBER!"           			# opcode 97
		"?NUMBER!"          			# opcode 98
		"OPCODE"            			# opcode 99
		"OPCODE!"           			# opcode 100
		"OPCODE'"           			# opcode 101
		"TRAP1"             			# opcode 102
		"TRAP2"             			# opcode 103
		"TRAP3"             			# opcode 104
		"TRAP4"             			# opcode 105
		"TRAP5"             			# opcode 106
		"TRAP6"             			# opcode 107
		"TRAP7"             			# opcode 108
		"TRAP8"             			# opcode 109
		"TRAP9"             			# opcode 110
		"sign"              			# opcode 111
		"pack2"             			# opcode 112
		"unpack2"           			# opcode 113
		"MAX_INT"           			# opcode 114
		"MIN_INT"           			# opcode 115
		"HALT"              			# opcode 116
		"nop"               			# opcode 117
		"CMOVE"             			# opcode 118
		"OMOVE"             			# opcode 119
		"ROTATE"            			# opcode 120
		"EAT"               			# opcode 121
		"MAKE-SPORE"        			# opcode 122
		"MAKE-ORGANIC"      			# opcode 123
		"MAKE-BARRIER"      			# opcode 124
		"GROW"              			# opcode 125
		"GROW.CB"           			# opcode 126
		"CSHIFT"            			# opcode 127
		"EXUDE"             			# opcode 128
		"LOOK"              			# opcode 129
		"NEAREST"           			# opcode 130
		"FARTHEST"          			# opcode 131
		"SIZE"              			# opcode 132
		"BIGGEST"           			# opcode 133
		"SMALLEST"          			# opcode 134
		"TEMPERATURE"       			# opcode 135
		"HOTTEST"           			# opcode 136
		"COLDEST"           			# opcode 137
		"SMELL"             			# opcode 138
		"MOOD"              			# opcode 139
		"MOOD!"             			# opcode 140
		"BROADCAST"         			# opcode 141
		"SEND"              			# opcode 142
		"RECV"              			# opcode 143
		"ENERGY"            			# opcode 144
		"AGE"               			# opcode 145
		"NUM-CELLS"         			# opcode 146
		"HAS-NEIGHBOR"      			# opcode 147
		"DIST"              			# opcode 148
		"CHOOSE"            			# opcode 149
		"RND"               			# opcode 150
		"SEND-ENERGY"       			# opcode 151
		"POPULATION"        			# opcode 152
		"POPULATION.S"      			# opcode 153
		"GPS"               			# opcode 154
		"NEIGHBORS"         			# opcode 155
		"SHOUT"             			# opcode 156
		"LISTEN"            			# opcode 157
		"SAY"               			# opcode 158
		"READ"              			# opcode 159
		"WRITE"             			# opcode 160
		"KEY-PRESS"         			# opcode 161
		"MOUSE-POS"         			# opcode 162
		"SPAWN"             			# opcode 163
		"S0"                			# opcode 164
		"S0!"               			# opcode 165
		"G0"                			# opcode 166
		"G0!"               			# opcode 167
	}

	0  # number of protected instructions at start of table
	# instruction table for strain 3
	{
		"call"              			# opcode 0
		"if"                			# opcode 1
		"ifelse"            			# opcode 2
		"?loop"             			# opcode 3
		"?exit"             			# opcode 4
		"pop"               			# opcode 5
		"dup"               			# opcode 6
		"swap"              			# opcode 7
		"over"              			# opcode 8
		"rot"               			# opcode 9
		"?dup"              			# opcode 10
		"-rot"              			# opcode 11
		"2swap"             			# opcode 12
		"2over"             			# opcode 13
		"2dup"              			# opcode 14
		"2pop"              			# opcode 15
		"nip"               			# opcode 16
		"tuck"              			# opcode 17
		"1+"                			# opcode 18
		"1-"                			# opcode 19
		"2+"                			# opcode 20
		"2-"                			# opcode 21
		"2/"                			# opcode 22
		"2*"                			# opcode 23
		"abs"               			# opcode 24
		"sqrt"              			# opcode 25
		"+"                 			# opcode 26
		"-"                 			# opcode 27
		"*"                 			# opcode 28
		"/"                 			# opcode 29
		"mod"               			# opcode 30
		"/mod"              			# opcode 31
		"negate"            			# opcode 32
		"2negate"           			# opcode 33
		"<<"                			# opcode 34
		">>"                			# opcode 35
		"="                 			# opcode 36
		"<>"                			# opcode 37
		"<"                 			# opcode 38
		">"                 			# opcode 39
		"<="                			# opcode 40
		">="                			# opcode 41
		"0="                			# opcode 42
		"or"                			# opcode 43
		"and"               			# opcode 44
		"not"               			# opcode 45
		"invert"            			# opcode 46
		"xor"               			# opcode 47
		"min"               			# opcode 48
		"max"               			# opcode 49
		"CB"                			# opcode 50
		"CBLEN"             			# opcode 51
		"CSLEN"             			# opcode 52
		"DSLEN"             			# opcode 53
		"R0"                			# opcode 54
		"R1"                			# opcode 55
		"R2"                			# opcode 56
		"R3"                			# opcode 57
		"R4"                			# opcode 58
		"R5"                			# opcode 59
		"R6"                			# opcode 60
		"R7"                			# opcode 61
		"R8"                			# opcode 62
		"R9"                			# opcode 63
		"R0!"               			# opcode 64
		"R1!"               			# opcode 65
		"R2!"               			# opcode 66
		"R3!"               			# opcode 67
		"R4!"               			# opcode 68
		"R5!"               			# opcode 69
		"R6!"               			# opcode 70
		"R7!"               			# opcode 71
		"R8!"               			# opcode 72
		"R9!"               			# opcode 73
		"R0++"              			# opcode 74
		"R1++"              			# opcode 75
		"R2++"              			# opcode 76
		"R3++"              			# opcode 77
		"R4++"              			# opcode 78
		"R5++"              			# opcode 79
		"R6++"              			# opcode 80
		"R7++"              			# opcode 81
		"R8++"              			# opcode 82
		"R9++"              			# opcode 83
		"--R0"              			# opcode 84
		"--R1"              			# opcode 85
		"--R2"              			# opcode 86
		"--R3"              			# opcode 87
		"--R4"              			# opcode 88
		"--R5"              			# opcode 89
		"--R6"              			# opcode 90
		"--R7"              			# opcode 91
		"--R8"              			# opcode 92
		"--R9"              			# opcode 93
		"PEEK"              			# opcode 94
		"POKE"              			# opcode 95
		"NUMBER"            			# opcode 96
		"NUMBER!"           			# opcode 97
		"?NUMBER!"          			# opcode 98
		"OPCODE"            			# opcode 99
		"OPCODE!"           			# opcode 100
		"OPCODE'"           			# opcode 101
		"TRAP1"             			# opcode 102
		"TRAP2"             			# opcode 103
		"TRAP3"             			# opcode 104
		"TRAP4"             			# opcode 105
		"TRAP5"             			# opcode 106
		"TRAP6"             			# opcode 107
		"TRAP7"             			# opcode 108
		"TRAP8"             			# opcode 109
		"TRAP9"             			# opcode 110
		"sign"              			# opcode 111
		"pack2"             			# opcode 112
		"unpack2"           			# opcode 113
		"MAX_INT"           			# opcode 114
		"MIN_INT"           			# opcode 115
		"HALT"              			# opcode 116
		"nop"               			# opcode 117
		"CMOVE"             			# opcode 118
		"OMOVE"             			# opcode 119
		"ROTATE"            			# opcode 120
		"EAT"               			# opcode 121
		"MAKE-SPORE"        			# opcode 122
		"MAKE-ORGANIC"      			# opcode 123
		"MAKE-BARRIER"      			# opcode 124
		"GROW"              			# opcode 125
		"GROW.CB"           			# opcode 126
		"CSHIFT"            			# opcode 127
		"EXUDE"             			# opcode 128
		"LOOK"              			# opcode 129
		"NEAREST"           			# opcode 130
		"FARTHEST"          			# opcode 131
		"SIZE"              			# opcode 132
		"BIGGEST"           			# opcode 133
		"SMALLEST"          			# opcode 134
		"TEMPERATURE"       			# opcode 135
		"HOTTEST"           			# opcode 136
		"COLDEST"           			# opcode 137
		"SMELL"             			# opcode 138
		"MOOD"              			# opcode 139
		"MOOD!"             			# opcode 140
		"BROADCAST"         			# opcode 141
		"SEND"              			# opcode 142
		"RECV"              			# opcode 143
		"ENERGY"            			# opcode 144
		"AGE"               			# opcode 145
		"NUM-CELLS"         			# opcode 146
		"HAS-NEIGHBOR"      			# opcode 147
		"DIST"              			# opcode 148
		"CHOOSE"            			# opcode 149
		"RND"               			# opcode 150
		"SEND-ENERGY"       			# opcode 151
		"POPULATION"        			# opcode 152
		"POPULATION.S"      			# opcode 153
		"GPS"               			# opcode 154
		"NEIGHBORS"         			# opcode 155
		"SHOUT"             			# opcode 156
		"LISTEN"            			# opcode 157
		"SAY"               			# opcode 158
		"READ"              			# opcode 159
		"WRITE"             			# opcode 160
		"KEY-PRESS"         			# opcode 161
		"MOUSE-POS"         			# opcode 162
		"SPAWN"             			# opcode 163
		"S0"                			# opcode 164
		"S0!"               			# opcode 165
		"G0"                			# opcode 166
		"G0!"               			# opcode 167
	}

	0  # number of protected instructions at start of table
	# instruction table for strain 4
	{
		"call"              			# opcode 0
		"if"                			# opcode 1
		"ifelse"            			# opcode 2
		"?loop"             			# opcode 3
		"?exit"             			# opcode 4
		"pop"               			# opcode 5
		"dup"               			# opcode 6
		"swap"              			# opcode 7
		"over"              			# opcode 8
		"rot"               			# opcode 9
		"?dup"              			# opcode 10
		"-rot"              			# opcode 11
		"2swap"             			# opcode 12
		"2over"             			# opcode 13
		"2dup"              			# opcode 14
		"2pop"              			# opcode 15
		"nip"               			# opcode 16
		"tuck"              			# opcode 17
		"1+"                			# opcode 18
		"1-"                			# opcode 19
		"2+"                			# opcode 20
		"2-"                			# opcode 21
		"2/"                			# opcode 22
		"2*"                			# opcode 23
		"abs"               			# opcode 24
		"sqrt"              			# opcode 25
		"+"                 			# opcode 26
		"-"                 			# opcode 27
		"*"                 			# opcode 28
		"/"                 			# opcode 29
		"mod"               			# opcode 30
		"/mod"              			# opcode 31
		"negate"            			# opcode 32
		"2negate"           			# opcode 33
		"<<"                			# opcode 34
		">>"                			# opcode 35
		"="                 			# opcode 36
		"<>"                			# opcode 37
		"<"                 			# opcode 38
		">"                 			# opcode 39
		"<="                			# opcode 40
		">="                			# opcode 41
		"0="                			# opcode 42
		"or"                			# opcode 43
		"and"               			# opcode 44
		"not"               			# opcode 45
		"invert"            			# opcode 46
		"xor"               			# opcode 47
		"min"               			# opcode 48
		"max"               			# opcode 49
		"CB"                			# opcode 50
		"CBLEN"             			# opcode 51
		"CSLEN"             			# opcode 52
		"DSLEN"             			# opcode 53
		"R0"                			# opcode 54
		"R1"                			# opcode 55
		"R2"                			# opcode 56
		"R3"                			# opcode 57
		"R4"                			# opcode 58
		"R5"                			# opcode 59
		"R6"                			# opcode 60
		"R7"                			# opcode 61
		"R8"                			# opcode 62
		"R9"                			# opcode 63
		"R0!"               			# opcode 64
		"R1!"               			# opcode 65
		"R2!"               			# opcode 66
		"R3!"               			# opcode 67
		"R4!"               			# opcode 68
		"R5!"               			# opcode 69
		"R6!"               			# opcode 70
		"R7!"               			# opcode 71
		"R8!"               			# opcode 72
		"R9!"               			# opcode 73
		"R0++"              			# opcode 74
		"R1++"              			# opcode 75
		"R2++"              			# opcode 76
		"R3++"              			# opcode 77
		"R4++"              			# opcode 78
		"R5++"              			# opcode 79
		"R6++"              			# opcode 80
		"R7++"              			# opcode 81
		"R8++"              			# opcode 82
		"R9++"              			# opcode 83
		"--R0"              			# opcode 84
		"--R1"              			# opcode 85
		"--R2"              			# opcode 86
		"--R3"              			# opcode 87
		"--R4"              			# opcode 88
		"--R5"              			# opcode 89
		"--R6"              			# opcode 90
		"--R7"              			# opcode 91
		"--R8"              			# opcode 92
		"--R9"              			# opcode 93
		"PEEK"              			# opcode 94
		"POKE"              			# opcode 95
		"NUMBER"            			# opcode 96
		"NUMBER!"           			# opcode 97
		"?NUMBER!"          			# opcode 98
		"OPCODE"            			# opcode 99
		"OPCODE!"           			# opcode 100
		"OPCODE'"           			# opcode 101
		"TRAP1"             			# opcode 102
		"TRAP2"             			# opcode 103
		"TRAP3"             			# opcode 104
		"TRAP4"             			# opcode 105
		"TRAP5"             			# opcode 106
		"TRAP6"             			# opcode 107
		"TRAP7"             			# opcode 108
		"TRAP8"             			# opcode 109
		"TRAP9"             			# opcode 110
		"sign"              			# opcode 111
		"pack2"             			# opcode 112
		"unpack2"           			# opcode 113
		"MAX_INT"           			# opcode 114
		"MIN_INT"           			# opcode 115
		"HALT"              			# opcode 116
		"nop"               			# opcode 117
		"CMOVE"             			# opcode 118
		"OMOVE"             			# opcode 119
		"ROTATE"            			# opcode 120
		"EAT"               			# opcode 121
		"MAKE-SPORE"        			# opcode 122
		"MAKE-ORGANIC"      			# opcode 123
		"MAKE-BARRIER"      			# opcode 124
		"GROW"              			# opcode 125
		"GROW.CB"           			# opcode 126
		"CSHIFT"            			# opcode 127
		"EXUDE"             			# opcode 128
		"LOOK"              			# opcode 129
		"NEAREST"           			# opcode 130
		"FARTHEST"          			# opcode 131
		"SIZE"              			# opcode 132
		"BIGGEST"           			# opcode 133
		"SMALLEST"          			# opcode 134
		"TEMPERATURE"       			# opcode 135
		"HOTTEST"           			# opcode 136
		"COLDEST"           			# opcode 137
		"SMELL"             			# opcode 138
		"MOOD"              			# opcode 139
		"MOOD!"             			# opcode 140
		"BROADCAST"         			# opcode 141
		"SEND"              			# opcode 142
		"RECV"              			# opcode 143
		"ENERGY"            			# opcode 144
		"AGE"               			# opcode 145
		"NUM-CELLS"         			# opcode 146
		"HAS-NEIGHBOR"      			# opcode 147
		"DIST"              			# opcode 148
		"CHOOSE"            			# opcode 149
		"RND"               			# opcode 150
		"SEND-ENERGY"       			# opcode 151
		"POPULATION"        			# opcode 152
		"POPULATION.S"      			# opcode 153
		"GPS"               			# opcode 154
		"NEIGHBORS"         			# opcode 155
		"SHOUT"             			# opcode 156
		"LISTEN"            			# opcode 157
		"SAY"               			# opcode 158
		"READ"              			# opcode 159
		"WRITE"             			# opcode 160
		"KEY-PRESS"         			# opcode 161
		"MOUSE-POS"         			# opcode 162
		"SPAWN"             			# opcode 163
		"S0"                			# opcode 164
		"S0!"               			# opcode 165
		"G0"                			# opcode 166
		"G0!"               			# opcode 167
	}

	2  # number of protected instructions at start of table
	# instruction table for strain 5
	{
		"MAKE-BARRIER"      			# opcode 0
		"SPAWN"             			# opcode 1
		"call"              			# opcode 2
		"if"                			# opcode 3
		"ifelse"            			# opcode 4
		"?loop"             			# opcode 5
		"?exit"             			# opcode 6
		"pop"               			# opcode 7
		"dup"               			# opcode 8
		"swap"              			# opcode 9
		"over"              			# opcode 10
		"rot"               			# opcode 11
		"?dup"              			# opcode 12
		"-rot"              			# opcode 13
		"2swap"             			# opcode 14
		"2over"             			# opcode 15
		"2dup"              			# opcode 16
		"2pop"              			# opcode 17
		"nip"               			# opcode 18
		"tuck"              			# opcode 19
		"1+"                			# opcode 20
		"1-"                			# opcode 21
		"2+"                			# opcode 22
		"2-"                			# opcode 23
		"2/"                			# opcode 24
		"2*"                			# opcode 25
		"abs"               			# opcode 26
		"sqrt"              			# opcode 27
		"+"                 			# opcode 28
		"-"                 			# opcode 29
		"*"                 			# opcode 30
		"/"                 			# opcode 31
		"mod"               			# opcode 32
		"/mod"              			# opcode 33
		"negate"            			# opcode 34
		"2negate"           			# opcode 35
		"<<"                			# opcode 36
		">>"                			# opcode 37
		"="                 			# opcode 38
		"<>"                			# opcode 39
		"<"                 			# opcode 40
		">"                 			# opcode 41
		"<="                			# opcode 42
		">="                			# opcode 43
		"0="                			# opcode 44
		"or"                			# opcode 45
		"and"               			# opcode 46
		"not"               			# opcode 47
		"invert"            			# opcode 48
		"xor"               			# opcode 49
		"min"               			# opcode 50
		"max"               			# opcode 51
		"CB"                			# opcode 52
		"CBLEN"             			# opcode 53
		"CSLEN"             			# opcode 54
		"DSLEN"             			# opcode 55
		"R0"                			# opcode 56
		"R1"                			# opcode 57
		"R2"                			# opcode 58
		"R3"                			# opcode 59
		"R4"                			# opcode 60
		"R5"                			# opcode 61
		"R6"                			# opcode 62
		"R7"                			# opcode 63
		"R8"                			# opcode 64
		"R9"                			# opcode 65
		"R0!"               			# opcode 66
		"R1!"               			# opcode 67
		"R2!"               			# opcode 68
		"R3!"               			# opcode 69
		"R4!"               			# opcode 70
		"R5!"               			# opcode 71
		"R6!"               			# opcode 72
		"R7!"               			# opcode 73
		"R8!"               			# opcode 74
		"R9!"               			# opcode 75
		"R0++"              			# opcode 76
		"R1++"              			# opcode 77
		"R2++"              			# opcode 78
		"R3++"              			# opcode 79
		"R4++"              			# opcode 80
		"R5++"              			# opcode 81
		"R6++"              			# opcode 82
		"R7++"              			# opcode 83
		"R8++"              			# opcode 84
		"R9++"              			# opcode 85
		"--R0"              			# opcode 86
		"--R1"              			# opcode 87
		"--R2"              			# opcode 88
		"--R3"              			# opcode 89
		"--R4"              			# opcode 90
		"--R5"              			# opcode 91
		"--R6"              			# opcode 92
		"--R7"              			# opcode 93
		"--R8"              			# opcode 94
		"--R9"              			# opcode 95
		"PEEK"              			# opcode 96
		"POKE"              			# opcode 97
		"NUMBER"            			# opcode 98
		"NUMBER!"           			# opcode 99
		"?NUMBER!"          			# opcode 100
		"OPCODE"            			# opcode 101
		"OPCODE!"           			# opcode 102
		"OPCODE'"           			# opcode 103
		"TRAP1"             			# opcode 104
		"TRAP2"             			# opcode 105
		"TRAP3"             			# opcode 106
		"TRAP4"             			# opcode 107
		"TRAP5"             			# opcode 108
		"TRAP6"             			# opcode 109
		"TRAP7"             			# opcode 110
		"TRAP8"             			# opcode 111
		"TRAP9"             			# opcode 112
		"sign"              			# opcode 113
		"pack2"             			# opcode 114
		"unpack2"           			# opcode 115
		"MAX_INT"           			# opcode 116
		"MIN_INT"           			# opcode 117
		"HALT"              			# opcode 118
		"nop"               			# opcode 119
		"CMOVE"             			# opcode 120
		"OMOVE"             			# opcode 121
		"ROTATE"            			# opcode 122
		"EAT"               			# opcode 123
		"MAKE-SPORE"        			# opcode 124
		"MAKE-ORGANIC"      			# opcode 125
		"GROW"              			# opcode 126
		"GROW.CB"           			# opcode 127
		"CSHIFT"            			# opcode 128
		"EXUDE"             			# opcode 129
		"LOOK"              			# opcode 130
		"NEAREST"           			# opcode 131
		"FARTHEST"          			# opcode 132
		"SIZE"              			# opcode 133
		"BIGGEST"           			# opcode 134
		"SMALLEST"          			# opcode 135
		"TEMPERATURE"       			# opcode 136
		"HOTTEST"           			# opcode 137
		"COLDEST"           			# opcode 138
		"SMELL"             			# opcode 139
		"MOOD"              			# opcode 140
		"MOOD!"             			# opcode 141
		"BROADCAST"         			# opcode 142
		"SEND"              			# opcode 143
		"RECV"              			# opcode 144
		"ENERGY"            			# opcode 145
		"AGE"               			# opcode 146
		"NUM-CELLS"         			# opcode 147
		"HAS-NEIGHBOR"      			# opcode 148
		"DIST"              			# opcode 149
		"CHOOSE"            			# opcode 150
		"RND"               			# opcode 151
		"SEND-ENERGY"       			# opcode 152
		"POPULATION"        			# opcode 153
		"POPULATION.S"      			# opcode 154
		"GPS"               			# opcode 155
		"NEIGHBORS"         			# opcode 156
		"SHOUT"             			# opcode 157
		"LISTEN"            			# opcode 158
		"SAY"               			# opcode 159
		"READ"              			# opcode 160
		"WRITE"             			# opcode 161
		"KEY-PRESS"         			# opcode 162
		"MOUSE-POS"         			# opcode 163
		"S0"                			# opcode 164
		"S0!"               			# opcode 165
		"G0"                			# opcode 166
		"G0!"               			# opcode 167
	}

	0  # number of protected instructions at start of table
	# instruction table for strain 6
	{
		"call"              			# opcode 0
		"if"                			# opcode 1
		"ifelse"            			# opcode 2
		"?loop"             			# opcode 3
		"?exit"             			# opcode 4
		"pop"               			# opcode 5
		"dup"               			# opcode 6
		"swap"              			# opcode 7
		"over"              			# opcode 8
		"rot"               			# opcode 9
		"?dup"              			# opcode 10
		"-rot"              			# opcode 11
		"2swap"             			# opcode 12
		"2over"             			# opcode 13
		"2dup"              			# opcode 14
		"2pop"              			# opcode 15
		"nip"               			# opcode 16
		"tuck"              			# opcode 17
		"1+"                			# opcode 18
		"1-"                			# opcode 19
		"2+"                			# opcode 20
		"2-"                			# opcode 21
		"2/"                			# opcode 22
		"2*"                			# opcode 23
		"abs"               			# opcode 24
		"sqrt"              			# opcode 25
		"+"                 			# opcode 26
		"-"                 			# opcode 27
		"*"                 			# opcode 28
		"/"                 			# opcode 29
		"mod"               			# opcode 30
		"/mod"              			# opcode 31
		"negate"            			# opcode 32
		"2negate"           			# opcode 33
		"<<"                			# opcode 34
		">>"                			# opcode 35
		"="                 			# opcode 36
		"<>"                			# opcode 37
		"<"                 			# opcode 38
		">"                 			# opcode 39
		"<="                			# opcode 40
		">="                			# opcode 41
		"0="                			# opcode 42
		"or"                			# opcode 43
		"and"               			# opcode 44
		"not"               			# opcode 45
		"invert"            			# opcode 46
		"xor"               			# opcode 47
		"min"               			# opcode 48
		"max"               			# opcode 49
		"CB"                			# opcode 50
		"CBLEN"             			# opcode 51
		"CSLEN"             			# opcode 52
		"DSLEN"             			# opcode 53
		"R0"                			# opcode 54
		"R1"                			# opcode 55
		"R2"                			# opcode 56
		"R3"                			# opcode 57
		"R4"                			# opcode 58
		"R5"                			# opcode 59
		"R6"                			# opcode 60
		"R7"                			# opcode 61
		"R8"                			# opcode 62
		"R9"                			# opcode 63
		"R0!"               			# opcode 64
		"R1!"               			# opcode 65
		"R2!"               			# opcode 66
		"R3!"               			# opcode 67
		"R4!"               			# opcode 68
		"R5!"               			# opcode 69
		"R6!"               			# opcode 70
		"R7!"               			# opcode 71
		"R8!"               			# opcode 72
		"R9!"               			# opcode 73
		"R0++"              			# opcode 74
		"R1++"              			# opcode 75
		"R2++"              			# opcode 76
		"R3++"              			# opcode 77
		"R4++"              			# opcode 78
		"R5++"              			# opcode 79
		"R6++"              			# opcode 80
		"R7++"              			# opcode 81
		"R8++"              			# opcode 82
		"R9++"              			# opcode 83
		"--R0"              			# opcode 84
		"--R1"              			# opcode 85
		"--R2"              			# opcode 86
		"--R3"              			# opcode 87
		"--R4"              			# opcode 88
		"--R5"              			# opcode 89
		"--R6"              			# opcode 90
		"--R7"              			# opcode 91
		"--R8"              			# opcode 92
		"--R9"              			# opcode 93
		"PEEK"              			# opcode 94
		"POKE"              			# opcode 95
		"NUMBER"            			# opcode 96
		"NUMBER!"           			# opcode 97
		"?NUMBER!"          			# opcode 98
		"OPCODE"            			# opcode 99
		"OPCODE!"           			# opcode 100
		"OPCODE'"           			# opcode 101
		"TRAP1"             			# opcode 102
		"TRAP2"             			# opcode 103
		"TRAP3"             			# opcode 104
		"TRAP4"             			# opcode 105
		"TRAP5"             			# opcode 106
		"TRAP6"             			# opcode 107
		"TRAP7"             			# opcode 108
		"TRAP8"             			# opcode 109
		"TRAP9"             			# opcode 110
		"sign"              			# opcode 111
		"pack2"             			# opcode 112
		"unpack2"           			# opcode 113
		"MAX_INT"           			# opcode 114
		"MIN_INT"           			# opcode 115
		"HALT"              			# opcode 116
		"nop"               			# opcode 117
		"CMOVE"             			# opcode 118
		"OMOVE"             			# opcode 119
		"ROTATE"            			# opcode 120
		"EAT"               			# opcode 121
		"MAKE-SPORE"        			# opcode 122
		"MAKE-ORGANIC"      			# opcode 123
		"MAKE-BARRIER"      			# opcode 124
		"GROW"              			# opcode 125
		"GROW.CB"           			# opcode 126
		"CSHIFT"            			# opcode 127
		"EXUDE"             			# opcode 128
		"LOOK"              			# opcode 129
		"NEAREST"           			# opcode 130
		"FARTHEST"          			# opcode 131
		"SIZE"              			# opcode 132
		"BIGGEST"           			# opcode 133
		"SMALLEST"          			# opcode 134
		"TEMPERATURE"       			# opcode 135
		"HOTTEST"           			# opcode 136
		"COLDEST"           			# opcode 137
		"SMELL"             			# opcode 138
		"MOOD"              			# opcode 139
		"MOOD!"             			# opcode 140
		"BROADCAST"         			# opcode 141
		"SEND"              			# opcode 142
		"RECV"              			# opcode 143
		"ENERGY"            			# opcode 144
		"AGE"               			# opcode 145
		"NUM-CELLS"         			# opcode 146
		"HAS-NEIGHBOR"      			# opcode 147
		"DIST"              			# opcode 148
		"CHOOSE"            			# opcode 149
		"RND"               			# opcode 150
		"SEND-ENERGY"       			# opcode 151
		"POPULATION"        			# opcode 152
		"POPULATION.S"      			# opcode 153
		"GPS"               			# opcode 154
		"NEIGHBORS"         			# opcode 155
		"SHOUT"             			# opcode 156
		"LISTEN"            			# opcode 157
		"SAY"               			# opcode 158
		"READ"              			# opcode 159
		"WRITE"             			# opcode 160
		"KEY-PRESS"         			# opcode 161
		"MOUSE-POS"         			# opcode 162
		"SPAWN"             			# opcode 163
		"S0"                			# opcode 164
		"S0!"               			# opcode 165
		"G0"                			# opcode 166
		"G0!"               			# opcode 167
	}

	0  # number of protected instructions at start of table
	# instruction table for strain 7
	{
		"call"              			# opcode 0
		"if"                			# opcode 1
		"ifelse"            			# opcode 2
		"?loop"             			# opcode 3
		"?exit"             			# opcode 4
		"pop"               			# opcode 5
		"dup"               			# opcode 6
		"swap"              			# opcode 7
		"over"              			# opcode 8
		"rot"               			# opcode 9
		"?dup"              			# opcode 10
		"-rot"              			# opcode 11
		"2swap"             			# opcode 12
		"2over"             			# opcode 13
		"2dup"              			# opcode 14
		"2pop"              			# opcode 15
		"nip"               			# opcode 16
		"tuck"              			# opcode 17
		"1+"                			# opcode 18
		"1-"                			# opcode 19
		"2+"                			# opcode 20
		"2-"                			# opcode 21
		"2/"                			# opcode 22
		"2*"                			# opcode 23
		"abs"               			# opcode 24
		"sqrt"              			# opcode 25
		"+"                 			# opcode 26
		"-"                 			# opcode 27
		"*"                 			# opcode 28
		"/"                 			# opcode 29
		"mod"               			# opcode 30
		"/mod"              			# opcode 31
		"negate"            			# opcode 32
		"2negate"           			# opcode 33
		"<<"                			# opcode 34
		">>"                			# opcode 35
		"="                 			# opcode 36
		"<>"                			# opcode 37
		"<"                 			# opcode 38
		">"                 			# opcode 39
		"<="                			# opcode 40
		">="                			# opcode 41
		"0="                			# opcode 42
		"or"                			# opcode 43
		"and"               			# opcode 44
		"not"               			# opcode 45
		"invert"            			# opcode 46
		"xor"               			# opcode 47
		"min"               			# opcode 48
		"max"               			# opcode 49
		"CB"                			# opcode 50
		"CBLEN"             			# opcode 51
		"CSLEN"             			# opcode 52
		"DSLEN"             			# opcode 53
		"R0"                			# opcode 54
		"R1"                			# opcode 55
		"R2"                			# opcode 56
		"R3"                			# opcode 57
		"R4"                			# opcode 58
		"R5"                			# opcode 59
		"R6"                			# opcode 60
		"R7"                			# opcode 61
		"R8"                			# opcode 62
		"R9"                			# opcode 63
		"R0!"               			# opcode 64
		"R1!"               			# opcode 65
		"R2!"               			# opcode 66
		"R3!"               			# opcode 67
		"R4!"               			# opcode 68
		"R5!"               			# opcode 69
		"R6!"               			# opcode 70
		"R7!"               			# opcode 71
		"R8!"               			# opcode 72
		"R9!"               			# opcode 73
		"R0++"              			# opcode 74
		"R1++"              			# opcode 75
		"R2++"              			# opcode 76
		"R3++"              			# opcode 77
		"R4++"              			# opcode 78
		"R5++"              			# opcode 79
		"R6++"              			# opcode 80
		"R7++"              			# opcode 81
		"R8++"              			# opcode 82
		"R9++"              			# opcode 83
		"--R0"              			# opcode 84
		"--R1"              			# opcode 85
		"--R2"              			# opcode 86
		"--R3"              			# opcode 87
		"--R4"              			# opcode 88
		"--R5"              			# opcode 89
		"--R6"              			# opcode 90
		"--R7"              			# opcode 91
		"--R8"              			# opcode 92
		"--R9"              			# opcode 93
		"PEEK"              			# opcode 94
		"POKE"              			# opcode 95
		"NUMBER"            			# opcode 96
		"NUMBER!"           			# opcode 97
		"?NUMBER!"          			# opcode 98
		"OPCODE"            			# opcode 99
		"OPCODE!"           			# opcode 100
		"OPCODE'"           			# opcode 101
		"TRAP1"             			# opcode 102
		"TRAP2"             			# opcode 103
		"TRAP3"             			# opcode 104
		"TRAP4"             			# opcode 105
		"TRAP5"             			# opcode 106
		"TRAP6"             			# opcode 107
		"TRAP7"             			# opcode 108
		"TRAP8"             			# opcode 109
		"TRAP9"             			# opcode 110
		"sign"              			# opcode 111
		"pack2"             			# opcode 112
		"unpack2"           			# opcode 113
		"MAX_INT"           			# opcode 114
		"MIN_INT"           			# opcode 115
		"HALT"              			# opcode 116
		"nop"               			# opcode 117
		"CMOVE"             			# opcode 118
		"OMOVE"             			# opcode 119
		"ROTATE"            			# opcode 120
		"EAT"               			# opcode 121
		"MAKE-SPORE"        			# opcode 122
		"MAKE-ORGANIC"      			# opcode 123
		"MAKE-BARRIER"      			# opcode 124
		"GROW"              			# opcode 125
		"GROW.CB"           			# opcode 126
		"CSHIFT"            			# opcode 127
		"EXUDE"             			# opcode 128
		"LOOK"              			# opcode 129
		"NEAREST"           			# opcode 130
		"FARTHEST"          			# opcode 131
		"SIZE"              			# opcode 132
		"BIGGEST"           			# opcode 133
		"SMALLEST"          			# opcode 134
		"TEMPERATURE"       			# opcode 135
		"HOTTEST"           			# opcode 136
		"COLDEST"           			# opcode 137
		"SMELL"             			# opcode 138
		"MOOD"              			# opcode 139
		"MOOD!"             			# opcode 140
		"BROADCAST"         			# opcode 141
		"SEND"              			# opcode 142
		"RECV"              			# opcode 143
		"ENERGY"            			# opcode 144
		"AGE"               			# opcode 145
		"NUM-CELLS"         			# opcode 146
		"HAS-NEIGHBOR"      			# opcode 147
		"DIST"              			# opcode 148
		"CHOOSE"            			# opcode 149
		"RND"               			# opcode 150
		"SEND-ENERGY"       			# opcode 151
		"POPULATION"        			# opcode 152
		"POPULATION.S"      			# opcode 153
		"GPS"               			# opcode 154
		"NEIGHBORS"         			# opcode 155
		"SHOUT"             			# opcode 156
		"LISTEN"            			# opcode 157
		"SAY"               			# opcode 158
		"READ"              			# opcode 159
		"WRITE"             			# opcode 160
		"KEY-PRESS"         			# opcode 161
		"MOUSE-POS"         			# opcode 162
		"SPAWN"             			# opcode 163
		"S0"                			# opcode 164
		"S0!"               			# opcode 165
		"G0"                			# opcode 166
		"G0!"               			# opcode 167
	}
}


# BARRIER_BEGIN
BARRIER {
	0	176
	0	177
	0	178
	0	179
	0	180
	0	181
	0	182
	0	183
	0	184
	0	185
	0	186
	0	187
	0	188
	0	189
	0	190
	0	191
	0	192
	0	193
	0	194
	0	195
	0	196
	0	197
	0	198
	0	199
	0	200
	0	201
	0	202
	0	203
	0	204
	0	205
	0	206
	0	207
	0	208
	0	209
	0	210
	0	211
	0	212
	0	213
	0	214
	0	215
	0	216
	0	217
	0	218
	0	219
	0	220
	0	221
	0	222
	0	223
	1	173
	1	174
	1	175
	1	176
	1	177
	1	178
	1	179
	1	180
	1	181
	1	182
	1	183
	1	184
	1	185
	1	186
	1	187
	1	188
	1	189
	1	190
	1	191
	1	192
	1	193
	1	194
	1	195
	1	196
	1	197
	1	198
	1	199
	1	200
	1	201
	1	202
	1	203
	1	204
	1	205
	1	206
	1	207
	1	208
	1	209
	1	210
	1	211
	1	212
	1	213
	1	214
	1	215
	1	216
	1	217
	1	218
	1	219
	1	220
	1	221
	1	222
	1	223
	1	224
	1	225
	1	226
	2	170
	2	171
	2	172
	2	173
	2	174
	2	175
	2	176
	2	177
	2	178
	2	179
	2	180
	2	181
	2	218
	2	219
	2	220
	2	221
	2	222
	2	223
	2	224
	2	225
	2	226
	2	227
	2	228
	2	229
	3	164
	3	165
	3	166
	3	167
	3	168
	3	169
	3	170
	3	171
	3	172
	3	173
	3	174
	3	175
	3	224
	3	225
	3	226
	3	227
	3	228
	3	229
	3	230
	3	231
	3	232
	3	233
	3	234
	3	235
	4	161
	4	162
	4	163
	4	164
	4	165
	4	166
	4	167
	4	168
	4	169
	4	170
	4	171
	4	172
	4	227
	4	228
	4	229
	4	230
	4	231
	4	232
	4	233
	4	234
	4	235
	4	236
	4	237
	4	238
	5	157
	5	158
	5	159
	5	160
	5	161
	5	162
	5	163
	5	164
	5	165
	5	166
	5	167
	5	168
	5	169
	5	230
	5	231
	5	232
	5	233
	5	234
	5	235
	5	236
	5	237
	5	238
	5	239
	5	240
	5	241
	6	156
	6	157
	6	158
	6	159
	6	160
	6	161
	6	162
	6	163
	6	236
	6	237
	6	238
	6	239
	6	240
	6	241
	6	242
	6	243
	7	154
	7	155
	7	156
	7	157
	7	158
	7	159
	7	160
	7	239
	7	240
	7	241
	7	242
	7	243
	7	244
	7	245
	8	153
	8	154
	8	155
	8	156
	8	242
	8	243
	8	244
	8	245
	8	246
	8	247
	9	150
	9	151
	9	152
	9	153
	9	154
	9	155
	9	244
	9	245
	9	246
	9	247
	9	248
	9	249
	10	147
	10	148
	10	149
	10	150
	10	151
	10	152
	10	153
	10	246
	10	247
	10	248
	10	249
	10	250
	10	251
	10	252
	11	145
	11	146
	11	147
	11	148
	11	149
	11	150
	11	151
	11	152
	11	248
	11	249
	11	250
	11	251
	11	252
	11	253
	11	254
	12	143
	12	144
	12	145
	12	146
	12	147
	12	148
	12	149
	12	250
	12	251
	12	252
	12	253
	12	254
	12	255
	12	256
	13	142
	13	143
	13	144
	13	145
	13	146
	13	253
	13	254
	13	255
	13	256
	13	257
	14	140
	14	141
	14	142
	14	143
	14	144
	14	255
	14	256
	14	257
	14	258
	14	259
	15	138
	15	139
	15	140
	15	141
	15	142
	15	257
	15	258
	15	259
	15	260
	15	261
	16	136
	16	137
	16	138
	16	139
	16	140
	16	141
	16	258
	16	259
	16	260
	16	261
	16	262
	16	263
	17	134
	17	135
	17	136
	17	137
	17	138
	17	139
	17	260
	17	261
	17	262
	17	263
	17	264
	17	265
	18	132
	18	133
	18	134
	18	135
	18	136
	18	137
	18	262
	18	263
	18	264
	18	265
	18	266
	18	267
	19	131
	19	132
	19	133
	19	134
	19	135
	19	264
	19	265
	19	266
	19	267
	19	268
	20	129
	20	130
	20	131
	20	132
	20	133
	20	266
	20	267
	20	268
	20	269
	20	270
	21	128
	21	129
	21	130
	21	131
	21	268
	21	269
	21	270
	21	271
	22	127
	22	128
	22	129
	22	130
	22	269
	22	270
	22	271
	22	272
	23	126
	23	127
	23	128
	23	271
	23	272
	23	273
	24	124
	24	125
	24	126
	24	127
	24	272
	24	273
	24	274
	24	275
	25	123
	25	124
	25	125
	25	126
	25	273
	25	274
	25	275
	25	276
	26	122
	26	123
	26	124
	26	125
	26	274
	26	275
	26	276
	26	277
	27	121
	27	122
	27	123
	27	276
	27	277
	27	278
	28	119
	28	120
	28	121
	28	122
	28	277
	28	278
	28	279
	28	280
	29	118
	29	119
	29	120
	29	121
	29	278
	29	279
	29	280
	29	281
	30	117
	30	118
	30	119
	30	120
	30	279
	30	280
	30	281
	30	282
	31	116
	31	117
	31	118
	31	281
	31	282
	31	283
	32	114
	32	115
	32	116
	32	117
	32	282
	32	283
	32	284
	32	285
	33	113
	33	114
	33	115
	33	116
	33	283
	33	284
	33	285
	33	286
	34	112
	34	113
	34	114
	34	115
	34	284
	34	285
	34	286
	34	287
	35	111
	35	112
	35	113
	35	286
	35	287
	35	288
	36	109
	36	110
	36	111
	36	112
	36	287
	36	288
	36	289
	36	290
}
BARRIER {
	37	108
	37	109
	37	110
	37	111
	37	288
	37	289
	37	290
	37	291
	38	107
	38	108
	38	109
	38	110
	38	289
	38	290
	38	291
	38	292
	39	106
	39	107
	39	108
	39	291
	39	292
	39	293
	40	105
	40	106
	40	107
	40	292
	40	293
	40	294
	41	104
	41	105
	41	106
	41	293
	41	294
	41	295
	42	103
	42	104
	42	105
	42	294
	42	295
	42	296
	43	102
	43	103
	43	104
	43	295
	43	296
	43	297
	44	101
	44	102
	44	103
	44	296
	44	297
	44	298
	45	100
	45	101
	45	102
	45	297
	45	298
	45	299
	46	99
	46	100
	46	101
	46	298
	46	299
	46	300
	47	98
	47	99
	47	100
	47	299
	47	300
	47	301
	48	97
	48	98
	48	99
	48	300
	48	301
	48	302
	49	96
	49	97
	49	98
	49	301
	49	302
	49	303
	50	95
	50	96
	50	97
	50	302
	50	303
	50	304
	51	94
	51	95
	51	96
	51	303
	51	304
	51	305
	52	93
	52	94
	52	95
	52	304
	52	305
	52	306
	53	91
	53	92
	53	93
	53	94
	53	305
	53	306
	53	307
	54	90
	54	91
	54	92
	54	93
	54	306
	54	307
	54	308
	55	90
	55	91
	55	92
	55	306
	55	307
	55	308
	56	89
	56	90
	56	91
	56	307
	56	308
	56	309
	57	88
	57	89
	57	90
	57	308
	57	309
	57	310
	58	87
	58	88
	58	89
	58	309
	58	310
	58	311
	59	86
	59	87
	59	88
	59	310
	59	311
	59	312
	60	86
	60	87
	60	88
	60	310
	60	311
	60	312
	61	85
	61	86
	61	87
	61	311
	61	312
	61	313
	62	84
	62	85
	62	86
	62	312
	62	313
	62	314
	63	83
	63	84
	63	85
	63	313
	63	314
	63	315
	64	82
	64	83
	64	84
	64	314
	64	315
	64	316
	65	82
	65	83
	65	84
	65	314
	65	315
	65	316
	66	81
	66	82
	66	83
	66	315
	66	316
	66	317
	67	80
	67	81
	67	82
	67	316
	67	317
	67	318
	68	79
	68	80
	68	81
	68	317
	68	318
	68	319
	69	79
	69	80
	69	81
	69	318
	69	319
	69	320
	70	78
	70	79
	70	80
	70	318
	70	319
	70	320
	71	77
	71	78
	71	79
	71	319
	71	320
	71	321
	72	76
	72	77
	72	78
	72	320
	72	321
	72	322
	73	76
	73	77
	73	78
	73	321
	73	322
	73	323
	74	75
	74	76
	74	77
	74	321
	74	322
	74	323
	75	74
	75	75
	75	76
	75	322
	75	323
	75	324
	76	73
	76	74
	76	75
	76	323
	76	324
	76	325
	77	72
	77	73
	77	74
	77	324
	77	325
	77	326
	78	72
	78	73
	78	74
	78	325
	78	326
	78	327
	79	71
	79	72
	79	73
	79	325
	79	326
	79	327
	80	70
	80	71
	80	72
	80	326
	80	327
	80	328
	81	70
	81	71
	81	72
	81	326
	81	327
	81	328
	82	69
	82	70
	82	71
	82	327
	82	328
	82	329
	83	69
	83	70
	83	71
	83	328
	83	329
	83	330
	84	68
	84	69
	84	70
	84	328
	84	329
	84	330
	85	67
	85	68
	85	69
	85	329
	85	330
	85	331
	86	66
	86	67
	86	68
	86	330
	86	331
	86	332
	87	65
	87	66
	87	67
	87	331
	87	332
	87	333
	88	65
	88	66
	88	67
	88	332
	88	333
	88	334
	89	64
	89	65
	89	66
	89	332
	89	333
	89	334
	90	63
	90	64
	90	65
	90	333
	90	334
	90	335
	91	63
	91	64
	91	65
	91	333
	91	334
	91	335
	92	62
	92	63
	92	64
	92	334
	92	335
	92	336
	93	62
	93	63
	93	64
	93	335
	93	336
	93	337
	94	61
	94	62
	94	63
	94	335
	94	336
	94	337
	95	60
	95	61
	95	62
	95	336
	95	337
	95	338
	96	60
	96	61
	96	62
	96	336
	96	337
	96	338
	97	59
	97	60
	97	61
	97	337
	97	338
	97	339
	98	59
	98	60
	98	61
	98	338
	98	339
	98	340
	99	58
	99	59
	99	60
	99	338
	99	339
	99	340
	100	57
	100	58
	100	59
	100	339
	100	340
	100	341
	101	57
	101	58
	101	59
	101	339
	101	340
	101	341
	102	56
	102	57
	102	58
	102	340
	102	341
	102	342
	103	56
	103	57
	103	58
	103	341
	103	342
	103	343
	104	55
	104	56
	104	57
	104	341
	104	342
	104	343
	105	55
	105	56
	105	57
	105	341
	105	342
	105	343
	106	54
	106	55
	106	56
	106	342
	106	343
	106	344
	107	54
	107	55
	107	56
	107	342
	107	343
	107	344
	108	54
	108	55
	108	56
	108	343
	108	344
	108	345
	109	53
	109	54
	109	55
	109	343
	109	344
	109	345
	110	52
	110	53
	110	54
	110	344
	110	345
	110	346
	111	52
	111	53
	111	54
	111	344
	111	345
	111	346
	112	51
	112	52
	112	53
	112	345
	112	346
	112	347
	113	51
	113	52
	113	53
	113	346
	113	347
	113	348
	114	50
	114	51
	114	52
	114	346
	114	347
	114	348
	115	49
	115	50
	115	51
	115	347
	115	348
	115	349
	116	49
	116	50
	116	51
	116	347
	116	348
	116	349
	117	48
	117	49
	117	50
	117	348
	117	349
	117	350
	118	48
	118	49
	118	50
	118	349
	118	350
	118	351
	119	47
	119	48
}
BARRIER {
	119	49
	119	349
	119	350
	119	351
	120	47
	120	48
	120	49
	120	349
	120	350
	120	351
	121	46
	121	47
	121	48
	121	350
	121	351
	121	352
	122	46
	122	47
	122	48
	122	350
	122	351
	122	352
	123	46
	123	47
	123	48
	123	351
	123	352
	123	353
	124	45
	124	46
	124	47
	124	351
	124	352
	124	353
	125	45
	125	46
	125	47
	125	351
	125	352
	125	353
	126	44
	126	45
	126	46
	126	352
	126	353
	126	354
	127	44
	127	45
	127	46
	127	352
	127	353
	127	354
	128	44
	128	45
	128	46
	128	353
	128	354
	128	355
	129	43
	129	44
	129	45
	129	353
	129	354
	129	355
	130	42
	130	43
	130	44
	130	354
	130	355
	130	356
	131	42
	131	43
	131	44
	131	354
	131	355
	131	356
	132	41
	132	42
	132	43
	132	355
	132	356
	132	357
	133	41
	133	42
	133	43
	133	356
	133	357
	133	358
	134	40
	134	41
	134	42
	134	356
	134	357
	134	358
	135	40
	135	41
	135	42
	135	356
	135	357
	135	358
	136	39
	136	40
	136	41
	136	357
	136	358
	136	359
	137	39
	137	40
	137	41
	137	357
	137	358
	137	359
	138	39
	138	40
	138	41
	138	358
	138	359
	138	360
	139	38
	139	39
	139	40
	139	358
	139	359
	139	360
	140	38
	140	39
	140	40
	140	358
	140	359
	140	360
	141	37
	141	38
	141	39
	141	359
	141	360
	141	361
	142	37
	142	38
	142	39
	142	359
	142	360
	142	361
	143	37
	143	38
	143	39
	143	360
	143	361
	143	362
	144	36
	144	37
	144	38
	144	360
	144	361
	144	362
	145	36
	145	37
	145	38
	145	360
	145	361
	145	362
	146	35
	146	36
	146	37
	146	361
	146	362
	146	363
	147	35
	147	36
	147	37
	147	361
	147	362
	147	363
	148	35
	148	36
	148	37
	148	362
	148	363
	148	364
	149	34
	149	35
	149	36
	149	362
	149	363
	149	364
	150	34
	150	35
	150	36
	150	363
	150	364
	150	365
	151	33
	151	34
	151	35
	151	363
	151	364
	151	365
	152	33
	152	34
	152	35
	152	364
	152	365
	152	366
	153	32
	153	33
	153	34
	153	364
	153	365
	153	366
	154	32
	154	33
	154	34
	154	364
	154	365
	154	366
	155	31
	155	32
	155	33
	155	365
	155	366
	155	367
	156	31
	156	32
	156	33
	156	365
	156	366
	156	367
	157	31
	157	32
	157	33
	157	366
	157	367
	157	368
	158	30
	158	31
	158	32
	158	366
	158	367
	158	368
	159	30
	159	31
	159	32
	159	366
	159	367
	159	368
	160	30
	160	31
	160	32
	160	366
	160	367
	160	368
	161	30
	161	31
	161	32
	161	366
	161	367
	161	368
	162	30
	162	31
	162	32
	162	367
	162	368
	162	369
	163	29
	163	30
	163	31
	163	367
	163	368
	163	369
	164	29
	164	30
	164	31
	164	367
	164	368
	164	369
	165	28
	165	29
	165	30
	165	368
	165	369
	165	370
	166	28
	166	29
	166	30
	166	368
	166	369
	166	370
	167	28
	167	29
	167	30
	167	369
	167	370
	167	371
	168	27
	168	28
	168	29
	168	369
	168	370
	168	371
	169	27
	169	28
	169	29
	169	370
	169	371
	169	372
	170	26
	170	27
	170	28
	170	370
	170	371
	170	372
	171	26
	171	27
	171	28
	171	371
	171	372
	171	373
	172	25
	172	26
	172	27
	172	109
	172	110
	172	111
	172	371
	172	372
	172	373
	173	25
	173	26
	173	27
	173	108
	173	109
	173	110
	173	111
	173	112
	173	113
	173	114
	173	115
	173	116
	173	371
	173	372
	173	373
	174	25
	174	26
	174	27
	174	108
	174	109
	174	110
	174	111
	174	112
	174	113
	174	114
	174	115
	174	116
	174	117
	174	118
	174	119
	174	120
	174	121
	174	371
	174	372
	174	373
	175	25
	175	26
	175	27
	175	107
	175	108
	175	109
	175	112
	175	113
	175	114
	175	115
	175	116
	175	117
	175	118
	175	119
	175	120
	175	121
	175	122
	175	123
	175	124
	175	125
	175	371
	175	372
	175	373
	176	25
	176	26
	176	27
	176	107
	176	108
	176	109
	176	110
	176	117
	176	118
	176	119
	176	120
	176	121
	176	122
	176	123
	176	124
	176	125
	176	126
	176	127
	176	128
	176	372
	176	373
	176	374
	177	24
	177	25
	177	26
	177	108
	177	109
	177	110
	177	122
	177	123
	177	124
	177	125
	177	126
	177	127
	177	128
	177	129
	177	130
	177	131
	177	132
	177	133
	177	372
	177	373
	177	374
	178	24
	178	25
	178	26
	178	108
	178	109
	178	110
	178	125
	178	126
	178	127
	178	128
	178	129
	178	130
	178	131
	178	132
	178	133
	178	134
	178	135
	178	136
	178	373
	178	374
	178	375
	179	23
	179	24
	179	25
	179	108
	179	109
	179	110
	179	129
	179	130
	179	131
	179	132
	179	133
	179	134
	179	135
	179	136
	179	137
	179	138
	179	139
	179	140
	179	373
	179	374
	179	375
	180	23
	180	24
	180	25
	180	108
	180	109
	180	110
	180	133
	180	134
	180	135
	180	136
	180	137
	180	138
	180	139
	180	140
	180	141
	180	142
	180	143
	180	144
	180	145
	180	374
	180	375
	180	376
	181	22
	181	23
	181	24
	181	108
	181	109
	181	110
	181	137
	181	138
	181	139
	181	140
}
BARRIER {
	181	141
	181	142
	181	143
	181	144
	181	145
	181	146
	181	374
	181	375
	181	376
	182	22
	182	23
	182	24
	182	108
	182	109
	182	110
	182	141
	182	142
	182	143
	182	144
	182	145
	182	146
	182	147
	182	148
	182	149
	182	150
	182	151
	182	152
	182	374
	182	375
	182	376
	183	22
	183	23
	183	24
	183	109
	183	110
	183	111
	183	146
	183	147
	183	148
	183	149
	183	150
	183	151
	183	152
	183	153
	183	154
	183	155
	183	156
	183	374
	183	375
	183	376
	184	22
	184	23
	184	24
	184	109
	184	110
	184	111
	184	147
	184	148
	184	149
	184	150
	184	151
	184	152
	184	153
	184	154
	184	155
	184	156
	184	157
	184	158
	184	159
	184	160
	184	374
	184	375
	184	376
	185	22
	185	23
	185	24
	185	109
	185	110
	185	111
	185	152
	185	153
	185	154
	185	155
	185	156
	185	157
	185	158
	185	159
	185	160
	185	161
	185	162
	185	163
	185	375
	185	376
	185	377
	186	21
	186	22
	186	23
	186	109
	186	110
	186	111
	186	157
	186	158
	186	159
	186	160
	186	161
	186	162
	186	163
	186	164
	186	165
	186	375
	186	376
	186	377
	187	21
	187	22
	187	23
	187	109
	187	110
	187	111
	187	161
	187	162
	187	163
	187	164
	187	165
	187	166
	187	167
	187	168
	187	169
	187	375
	187	376
	187	377
	188	21
	188	22
	188	23
	188	110
	188	111
	188	112
	188	164
	188	165
	188	166
	188	167
	188	168
	188	169
	188	170
	188	171
	188	375
	188	376
	188	377
	189	21
	189	22
	189	23
	189	110
	189	111
	189	112
	189	166
	189	167
	189	168
	189	169
	189	170
	189	171
	189	172
	189	376
	189	377
	189	378
	190	20
	190	21
	190	22
	190	110
	190	111
	190	112
	190	113
	190	114
	190	170
	190	171
	190	172
	190	173
	190	376
	190	377
	190	378
	191	20
	191	21
	191	22
	191	111
	191	112
	191	113
	191	114
	191	115
	191	116
	191	172
	191	173
	191	174
	191	376
	191	377
	191	378
	192	19
	192	20
	192	21
	192	112
	192	113
	192	114
	192	115
	192	116
	192	117
	192	118
	192	173
	192	174
	192	175
	192	176
	192	377
	192	378
	192	379
	193	19
	193	20
	193	21
	193	115
	193	116
	193	117
	193	118
	193	119
	193	174
	193	175
	193	176
	193	177
	193	377
	193	378
	193	379
	194	19
	194	20
	194	21
	194	116
	194	117
	194	118
	194	119
	194	120
	194	121
	194	175
	194	176
	194	177
	194	178
	194	179
	194	378
	194	379
	194	380
	195	18
	195	19
	195	20
	195	119
	195	120
	195	121
	195	122
	195	123
	195	177
	195	178
	195	179
	195	180
	195	181
	195	378
	195	379
	195	380
	196	18
	196	19
	196	20
	196	120
	196	121
	196	122
	196	123
	196	124
	196	125
	196	178
	196	179
	196	180
	196	181
	196	182
	196	378
	196	379
	196	380
	197	18
	197	19
	197	20
	197	122
	197	123
	197	124
	197	125
	197	126
	197	127
	197	128
	197	180
	197	181
	197	182
	197	183
	197	184
	197	185
	197	378
	197	379
	197	380
	198	18
	198	19
	198	20
	198	124
	198	125
	198	126
	198	127
	198	128
	198	129
	198	130
	198	182
	198	183
	198	184
	198	185
	198	186
	198	187
	198	188
	198	379
	198	380
	198	381
	199	17
	199	18
	199	19
	199	126
	199	127
	199	128
	199	129
	199	130
	199	131
	199	132
	199	183
	199	184
	199	185
	199	186
	199	187
	199	188
	199	189
	199	190
	199	379
	199	380
	199	381
	200	17
	200	18
	200	19
	200	129
	200	130
	200	131
	200	132
	200	133
	200	134
	200	135
	200	136
	200	137
	200	186
	200	187
	200	188
	200	189
	200	190
	200	191
	200	192
	200	193
	200	194
	200	195
	200	196
	200	197
	200	198
	200	379
	200	380
	200	381
	201	17
	201	18
	201	19
	201	131
	201	132
	201	133
	201	134
	201	135
	201	136
	201	137
	201	138
	201	139
	201	140
	201	188
	201	189
	201	190
	201	191
	201	192
	201	193
	201	194
	201	195
	201	196
	201	197
	201	198
	201	199
	201	200
	201	201
	201	202
	201	203
	201	379
	201	380
	201	381
	202	17
	202	18
	202	19
	202	133
	202	134
	202	135
	202	136
	202	137
	202	138
	202	139
	202	140
	202	141
	202	142
	202	191
	202	192
	202	193
	202	194
	202	195
	202	196
	202	197
	202	198
	202	199
	202	200
	202	201
	202	202
	202	203
	202	204
	202	205
	202	206
	202	207
	202	208
	202	209
	202	379
	202	380
	202	381
	203	17
	203	18
	203	19
	203	138
	203	139
	203	140
	203	141
	203	142
	203	143
	203	144
	203	145
	203	146
	203	199
	203	200
	203	201
	203	202
	203	203
	203	204
	203	205
	203	206
	203	207
	203	208
	203	209
	203	210
	203	380
	203	381
	203	382
	204	16
	204	17
	204	18
	204	141
	204	142
	204	143
	204	144
	204	145
	204	146
	204	147
	204	203
	204	204
	204	205
	204	206
	204	207
	204	208
	204	209
	204	210
	204	380
	204	381
	204	382
	205	16
	205	17
	205	18
	205	143
	205	144
	205	145
	205	146
	205	147
	205	148
	205	149
	205	208
	205	209
	205	210
	205	380
	205	381
	205	382
	206	16
	206	17
	206	18
	206	147
	206	148
	206	149
}
BARRIER {
	206	150
	206	151
	206	152
	206	153
	206	208
	206	209
	206	210
	206	380
	206	381
	206	382
	207	16
	207	17
	207	18
	207	148
	207	149
	207	150
	207	151
	207	152
	207	153
	207	154
	207	155
	207	156
	207	157
	207	158
	207	208
	207	209
	207	210
	207	211
	207	381
	207	382
	207	383
	208	15
	208	16
	208	17
	208	150
	208	151
	208	152
	208	153
	208	154
	208	155
	208	156
	208	157
	208	158
	208	159
	208	160
	208	161
	208	162
	208	209
	208	210
	208	211
	208	212
	208	381
	208	382
	208	383
	209	15
	209	16
	209	17
	209	154
	209	155
	209	156
	209	157
	209	158
	209	159
	209	160
	209	161
	209	162
	209	163
	209	164
	209	210
	209	211
	209	212
	209	381
	209	382
	209	383
	210	15
	210	16
	210	17
	210	159
	210	160
	210	161
	210	162
	210	163
	210	164
	210	165
	210	166
	210	167
	210	168
	210	211
	210	212
	210	213
	210	381
	210	382
	210	383
	211	15
	211	16
	211	17
	211	163
	211	164
	211	165
	211	166
	211	167
	211	168
	211	169
	211	170
	211	211
	211	212
	211	213
	211	382
	211	383
	211	384
	212	14
	212	15
	212	16
	212	165
	212	166
	212	167
	212	168
	212	169
	212	170
	212	171
	212	172
	212	173
	212	174
	212	175
	212	176
	212	211
	212	212
	212	213
	212	214
	212	382
	212	383
	212	384
	213	14
	213	15
	213	16
	213	169
	213	170
	213	171
	213	172
	213	173
	213	174
	213	175
	213	176
	213	177
	213	178
	213	179
	213	180
	213	181
	213	182
	213	183
	213	184
	213	212
	213	213
	213	214
	213	382
	213	383
	213	384
	214	14
	214	15
	214	16
	214	171
	214	172
	214	173
	214	174
	214	175
	214	176
	214	177
	214	178
	214	179
	214	180
	214	181
	214	182
	214	183
	214	184
	214	185
	214	186
	214	187
	214	188
	214	189
	214	190
	214	212
	214	213
	214	214
	214	382
	214	383
	214	384
	215	14
	215	15
	215	16
	215	177
	215	178
	215	179
	215	180
	215	181
	215	182
	215	183
	215	184
	215	185
	215	186
	215	187
	215	188
	215	189
	215	190
	215	191
	215	192
	215	193
	215	194
	215	195
	215	196
	215	212
	215	213
	215	214
	215	383
	215	384
	215	385
	216	13
	216	14
	216	15
	216	185
	216	186
	216	187
	216	188
	216	189
	216	190
	216	191
	216	192
	216	193
	216	194
	216	195
	216	196
	216	197
	216	198
	216	199
	216	200
	216	201
	216	202
	216	203
	216	212
	216	213
	216	214
	216	383
	216	384
	216	385
	217	13
	217	14
	217	15
	217	191
	217	192
	217	193
	217	194
	217	195
	217	196
	217	197
	217	198
	217	199
	217	200
	217	201
	217	202
	217	203
	217	204
	217	205
	217	206
	217	207
	217	208
	217	209
	217	210
	217	211
	217	212
	217	213
	217	214
	217	383
	217	384
	217	385
	218	13
	218	14
	218	15
	218	197
	218	198
	218	199
	218	200
	218	201
	218	202
	218	203
	218	204
	218	205
	218	206
	218	207
	218	208
	218	209
	218	210
	218	211
	218	212
	218	213
	218	214
	218	383
	218	384
	218	385
	219	13
	219	14
	219	15
	219	203
	219	204
	219	205
	219	206
	219	207
	219	208
	219	209
	219	210
	219	211
	219	212
	219	213
	219	384
	219	385
	219	386
	220	12
	220	13
	220	14
	220	384
	220	385
	220	386
	221	12
	221	13
	221	14
	221	384
	221	385
	221	386
	222	12
	222	13
	222	14
	222	384
	222	385
	222	386
	223	12
	223	13
	223	14
	223	384
	223	385
	223	386
	224	12
	224	13
	224	14
	224	385
	224	386
	224	387
	225	11
	225	12
	225	13
	225	385
	225	386
	225	387
	226	11
	226	12
	226	13
	226	385
	226	386
	226	387
	227	11
	227	12
	227	13
	227	385
	227	386
	227	387
	228	11
	228	12
	228	13
	228	386
	228	387
	228	388
	229	10
	229	11
	229	12
	229	386
	229	387
	229	388
	230	10
	230	11
	230	12
	230	386
	230	387
	230	388
	231	10
	231	11
	231	12
	231	386
	231	387
	231	388
	232	10
	232	11
	232	12
	232	387
	232	388
	232	389
	233	9
	233	10
	233	11
	233	387
	233	388
	233	389
	234	9
	234	10
	234	11
	234	387
	234	388
	234	389
	235	9
	235	10
	235	11
	235	387
	235	388
	235	389
	236	9
	236	10
	236	11
	236	388
	236	389
	236	390
	237	9
	237	10
	237	11
	237	388
	237	389
	237	390
	238	9
	238	10
	238	11
	238	344
	238	345
	238	346
	238	388
	238	389
	238	390
	239	9
	239	10
	239	11
	239	342
	239	343
	239	344
	239	345
	239	346
	239	347
	239	388
	239	389
	239	390
	240	9
	240	10
	240	11
	240	339
	240	340
	240	341
	240	342
	240	343
	240	344
	240	345
	240	346
	240	347
	240	348
	240	388
	240	389
	240	390
	241	8
	241	9
	241	10
	241	338
	241	339
	241	340
	241	341
	241	342
	241	343
	241	344
	241	346
	241	347
	241	348
	241	388
	241	389
	241	390
	242	8
	242	9
	242	10
	242	336
	242	337
	242	338
	242	339
	242	340
	242	341
	242	346
	242	347
	242	348
	242	349
	242	388
	242	389
	242	390
	243	8
	243	9
	243	10
	243	335
	243	336
	243	337
	243	338
	243	347
	243	348
}
BARRIER {
	243	349
	243	388
	243	389
	243	390
	244	8
	244	9
	244	10
	244	333
	244	334
	244	335
	244	336
	244	337
	244	347
	244	348
	244	349
	244	350
	244	389
	244	390
	244	391
	245	7
	245	8
	245	9
	245	332
	245	333
	245	334
	245	335
	245	348
	245	349
	245	350
	245	351
	245	389
	245	390
	245	391
	246	7
	246	8
	246	9
	246	330
	246	331
	246	332
	246	333
	246	334
	246	349
	246	350
	246	351
	246	352
	246	389
	246	390
	246	391
	247	7
	247	8
	247	9
	247	328
	247	329
	247	330
	247	331
	247	332
	247	350
	247	351
	247	352
	247	353
	247	389
	247	390
	247	391
	248	7
	248	8
	248	9
	248	327
	248	328
	248	329
	248	330
	248	331
	248	351
	248	352
	248	353
	248	390
	248	391
	248	392
	249	6
	249	7
	249	8
	249	326
	249	327
	249	328
	249	329
	249	351
	249	352
	249	353
	249	354
	249	390
	249	391
	249	392
	250	6
	250	7
	250	8
	250	325
	250	326
	250	327
	250	352
	250	353
	250	354
	250	355
	250	356
	250	390
	250	391
	250	392
	251	6
	251	7
	251	8
	251	324
	251	325
	251	326
	251	353
	251	354
	251	355
	251	356
	251	357
	251	390
	251	391
	251	392
	252	6
	252	7
	252	8
	252	322
	252	323
	252	324
	252	325
	252	354
	252	355
	252	356
	252	391
	252	392
	252	393
	253	6
	253	7
	253	8
	253	321
	253	322
	253	323
	253	324
	253	354
	253	355
	253	356
	253	391
	253	392
	253	393
	254	6
	254	7
	254	8
	254	319
	254	320
	254	321
	254	322
	254	323
	254	353
	254	354
	254	355
	254	391
	254	392
	254	393
	255	6
	255	7
	255	8
	255	317
	255	318
	255	319
	255	320
	255	321
	255	322
	255	353
	255	354
	255	355
	255	391
	255	392
	255	393
	256	6
	256	7
	256	8
	256	316
	256	317
	256	318
	256	319
	256	320
	256	321
	256	353
	256	354
	256	355
	256	391
	256	392
	256	393
	257	5
	257	6
	257	7
	257	315
	257	316
	257	317
	257	318
	257	319
	257	352
	257	353
	257	354
	257	391
	257	392
	257	393
	258	5
	258	6
	258	7
	258	314
	258	315
	258	316
	258	317
	258	351
	258	352
	258	353
	258	391
	258	392
	258	393
	259	5
	259	6
	259	7
	259	315
	259	316
	259	317
	259	351
	259	352
	259	353
	259	392
	259	393
	259	394
	260	5
	260	6
	260	7
	260	316
	260	317
	260	318
	260	351
	260	352
	260	353
	260	392
	260	393
	260	394
	261	5
	261	6
	261	7
	261	316
	261	317
	261	318
	261	350
	261	351
	261	352
	261	392
	261	393
	261	394
	262	5
	262	6
	262	7
	262	317
	262	318
	262	319
	262	349
	262	350
	262	351
	262	392
	262	393
	262	394
	263	5
	263	6
	263	7
	263	318
	263	319
	263	320
	263	349
	263	350
	263	351
	263	392
	263	393
	263	394
	264	4
	264	5
	264	6
	264	319
	264	320
	264	321
	264	348
	264	349
	264	350
	264	392
	264	393
	264	394
	265	4
	265	5
	265	6
	265	320
	265	321
	265	322
	265	348
	265	349
	265	350
	265	392
	265	393
	265	394
	266	4
	266	5
	266	6
	266	320
	266	321
	266	322
	266	348
	266	349
	266	350
	266	392
	266	393
	266	394
	267	4
	267	5
	267	6
	267	321
	267	322
	267	323
	267	324
	267	348
	267	349
	267	350
	267	393
	267	394
	267	395
	268	4
	268	5
	268	6
	268	322
	268	323
	268	324
	268	325
	268	347
	268	348
	268	349
	268	393
	268	394
	268	395
	269	4
	269	5
	269	6
	269	323
	269	324
	269	325
	269	326
	269	327
	269	346
	269	347
	269	348
	269	393
	269	394
	269	395
	270	4
	270	5
	270	6
	270	325
	270	326
	270	327
	270	328
	270	329
	270	346
	270	347
	270	348
	270	393
	270	394
	270	395
	271	4
	271	5
	271	6
	271	326
	271	327
	271	328
	271	329
	271	330
	271	331
	271	345
	271	346
	271	347
	271	393
	271	394
	271	395
	272	3
	272	4
	272	5
	272	328
	272	329
	272	330
	272	331
	272	332
	272	345
	272	346
	272	347
	272	393
	272	394
	272	395
	273	3
	273	4
	273	5
	273	330
	273	331
	273	332
	273	333
	273	334
	273	335
	273	344
	273	345
	273	346
	273	347
	273	393
	273	394
	273	395
	274	3
	274	4
	274	5
	274	332
	274	333
	274	334
	274	335
	274	336
	274	337
	274	338
	274	339
	274	340
	274	341
	274	342
	274	343
	274	344
	274	345
	274	346
	274	393
	274	394
	274	395
	275	3
	275	4
	275	5
	275	333
	275	334
	275	335
	275	336
	275	337
	275	338
	275	339
	275	340
	275	341
	275	342
	275	343
	275	344
	275	345
	275	394
	275	395
	275	396
	276	3
	276	4
	276	5
	276	336
	276	337
	276	338
	276	339
	276	340
	276	341
	276	342
	276	343
	276	394
	276	395
	276	396
	277	3
	277	4
	277	5
	277	394
	277	395
	277	396
	278	3
	278	4
	278	5
	278	394
	278	395
	278	396
	279	2
	279	3
	279	4
	279	394
	279	395
	279	396
	280	2
	280	3
	280	4
	280	394
	280	395
	280	396
	281	2
	281	3
	281	4
	281	394
	281	395
	281	396
	282	2
	282	3
	282	4
	282	395
	282	396
}
BARRIER {
	282	397
	283	2
	283	3
	283	4
	283	395
	283	396
	283	397
	284	2
	284	3
	284	4
	284	395
	284	396
	284	397
	285	2
	285	3
	285	4
	285	395
	285	396
	285	397
	286	2
	286	3
	286	4
	286	395
	286	396
	286	397
	287	1
	287	2
	287	3
	287	395
	287	396
	287	397
	288	1
	288	2
	288	3
	288	395
	288	396
	288	397
	289	1
	289	2
	289	3
	289	396
	289	397
	289	398
	290	1
	290	2
	290	3
	290	396
	290	397
	290	398
	291	1
	291	2
	291	3
	291	396
	291	397
	291	398
	292	1
	292	2
	292	3
	292	396
	292	397
	292	398
	293	1
	293	2
	293	3
	293	396
	293	397
	293	398
	294	1
	294	2
	294	3
	294	396
	294	397
	294	398
	295	1
	295	2
	295	3
	295	396
	295	397
	295	398
	296	1
	296	2
	296	3
	296	396
	296	397
	296	398
	297	1
	297	2
	297	3
	297	396
	297	397
	297	398
	298	0
	298	1
	298	2
	298	396
	298	397
	298	398
	299	0
	299	1
	299	2
	299	396
	299	397
	299	398
	300	0
	300	1
	300	2
	300	397
	300	398
	300	399
	301	0
	301	1
	301	2
	301	397
	301	398
	301	399
	302	0
	302	1
	302	2
	302	397
	302	398
	302	399
	303	0
	303	1
	303	2
	303	397
	303	398
	303	399
	304	0
	304	1
	304	2
	304	397
	304	398
	304	399
	305	0
	305	1
	305	2
	305	397
	305	398
	305	399
	306	0
	306	1
	306	2
	306	397
	306	398
	306	399
	307	0
	307	1
	307	2
	307	397
	307	398
	307	399
	308	0
	308	1
	308	2
	308	397
	308	398
	308	399
	309	0
	309	1
	309	2
	309	397
	309	398
	309	399
	310	0
	310	1
	310	2
	310	397
	310	398
	310	399
	311	0
	311	1
	311	2
	311	397
	311	398
	311	399
	312	0
	312	1
	312	2
	312	397
	312	398
	312	399
	313	0
	313	1
	313	2
	313	397
	313	398
	313	399
	314	0
	314	1
	314	2
	314	397
	314	398
	314	399
	315	0
	315	1
	315	397
	315	398
	315	399
	316	0
	316	1
	316	397
	316	398
	316	399
	317	0
	317	1
	317	397
	317	398
	317	399
	318	0
	318	1
	318	398
	318	399
	319	0
	319	1
	319	398
	319	399
	320	0
	320	1
	320	398
	320	399
	321	0
	321	1
	321	398
	321	399
	322	0
	322	1
	322	398
	322	399
	323	0
	323	1
	323	398
	323	399
	324	0
	324	1
	324	398
	324	399
	325	0
	325	1
	325	398
	325	399
	326	0
	326	1
	326	398
	326	399
	327	0
	327	1
	327	398
	327	399
	328	0
	328	1
	328	398
	328	399
	329	0
	329	1
	329	398
	329	399
	330	0
	330	1
	330	398
	330	399
	331	0
	331	1
	331	398
	331	399
	332	0
	332	1
	332	398
	332	399
	333	0
	333	1
	333	398
	333	399
	334	0
	334	1
	334	398
	334	399
	335	0
	335	1
	335	398
	335	399
	336	0
	336	1
	336	398
	336	399
	337	0
	337	1
	337	398
	337	399
	338	0
	338	1
	338	398
	338	399
	339	0
	339	1
	339	398
	339	399
	340	0
	340	1
	340	398
	340	399
	341	0
	341	1
	341	398
	341	399
	342	0
	342	1
	342	398
	342	399
	343	0
	343	1
	343	398
	343	399
	344	0
	344	1
	344	398
	344	399
	345	0
	345	1
	345	159
	345	160
	345	161
	345	398
	345	399
	346	0
	346	1
	346	158
	346	159
	346	160
	346	161
	346	162
	346	163
	346	164
	346	165
	346	166
	346	167
	346	168
	346	169
	346	170
	346	171
	346	172
	346	398
	346	399
	347	0
	347	1
	347	157
	347	158
	347	159
	347	160
	347	161
	347	162
	347	163
	347	164
	347	165
	347	166
	347	167
	347	168
	347	169
	347	170
	347	171
	347	172
	347	173
	347	398
	347	399
	348	0
	348	1
	348	157
	348	158
	348	159
	348	162
	348	163
	348	164
	348	165
	348	166
	348	167
	348	168
	348	169
	348	170
	348	171
	348	172
	348	173
	348	174
	348	398
	348	399
	349	0
	349	1
	349	156
	349	157
	349	158
	349	173
	349	174
	349	175
	349	398
	349	399
	350	0
	350	1
	350	156
	350	157
	350	158
	350	174
	350	175
	350	176
	350	399
	351	0
	351	1
	351	155
	351	156
	351	157
	351	174
	351	175
	351	176
	351	398
	351	399
	352	0
	352	1
	352	155
	352	156
	352	157
	352	175
	352	176
	352	177
	352	398
	352	399
	353	0
	353	1
	353	155
	353	156
	353	157
	353	175
	353	176
	353	177
	353	398
	353	399
	354	0
	354	1
	354	154
	354	155
	354	156
	354	175
	354	176
	354	398
	354	399
	355	0
	355	1
	355	153
	355	154
	355	155
	355	175
	355	176
	355	398
	355	399
	356	0
	356	1
	356	153
	356	154
	356	155
	356	175
	356	176
	356	398
	356	399
	357	0
	357	1
	357	152
	357	153
	357	154
	357	175
	357	176
	357	398
	357	399
	358	0
	358	1
	358	152
	358	153
	358	154
	358	175
	358	176
	358	177
	358	289
	358	290
	358	291
	358	292
	358	293
	358	294
	358	398
	358	399
	359	0
	359	1
	359	152
	359	153
	359	154
	359	175
	359	176
	359	177
	359	288
	359	289
	359	290
	359	291
	359	292
	359	293
	359	294
	359	295
}
BARRIER {
	359	296
	359	398
	359	399
	360	0
	360	1
	360	151
	360	152
	360	153
	360	175
	360	176
	360	177
	360	286
	360	287
	360	288
	360	289
	360	290
	360	291
	360	292
	360	293
	360	294
	360	295
	360	296
	360	297
	360	398
	360	399
	361	0
	361	1
	361	151
	361	152
	361	153
	361	175
	361	176
	361	177
	361	285
	361	286
	361	287
	361	288
	361	289
	361	295
	361	296
	361	297
	361	298
	361	398
	361	399
	362	0
	362	1
	362	150
	362	151
	362	152
	362	175
	362	176
	362	177
	362	283
	362	284
	362	285
	362	286
	362	287
	362	297
	362	298
	362	299
	362	300
	362	398
	362	399
	363	0
	363	1
	363	150
	363	151
	363	152
	363	175
	363	176
	363	177
	363	282
	363	283
	363	284
	363	285
	363	295
	363	296
	363	297
	363	298
	363	299
	363	300
	363	301
	363	398
	363	399
	364	0
	364	1
	364	150
	364	151
	364	152
	364	175
	364	176
	364	177
	364	281
	364	282
	364	283
	364	284
	364	294
	364	295
	364	296
	364	297
	364	298
	364	299
	364	300
	364	398
	364	399
	365	0
	365	1
	365	149
	365	150
	365	151
	365	175
	365	176
	365	177
	365	280
	365	281
	365	282
	365	294
	365	295
	365	296
	365	297
	365	298
	365	398
	365	399
	366	0
	366	1
	366	149
	366	150
	366	151
	366	175
	366	176
	366	177
	366	279
	366	280
	366	281
	366	294
	366	295
	366	296
	366	297
	366	398
	366	399
	367	0
	367	1
	367	148
	367	149
	367	150
	367	175
	367	176
	367	177
	367	278
	367	279
	367	280
	367	295
	367	296
	367	297
	367	398
	367	399
	368	0
	368	1
	368	148
	368	149
	368	150
	368	175
	368	176
	368	177
	368	277
	368	278
	368	279
	368	296
	368	297
	368	298
	368	398
	368	399
	369	0
	369	1
	369	147
	369	148
	369	149
	369	175
	369	176
	369	177
	369	276
	369	277
	369	278
	369	297
	369	298
	369	299
	369	398
	369	399
	370	0
	370	1
	370	147
	370	148
	370	149
	370	174
	370	175
	370	176
	370	275
	370	276
	370	277
	370	298
	370	299
	370	300
	370	398
	370	399
	371	0
	371	1
	371	146
	371	147
	371	148
	371	174
	371	175
	371	176
	371	274
	371	275
	371	276
	371	298
	371	299
	371	300
	371	398
	371	399
	372	0
	372	1
	372	146
	372	147
	372	148
	372	174
	372	175
	372	176
	372	272
	372	273
	372	274
	372	275
	372	299
	372	300
	372	301
	372	398
	372	399
	373	0
	373	1
	373	145
	373	146
	373	147
	373	174
	373	175
	373	176
	373	271
	373	272
	373	273
	373	274
	373	300
	373	301
	373	302
	373	398
	373	399
	374	0
	374	1
	374	145
	374	146
	374	147
	374	174
	374	175
	374	176
	374	270
	374	271
	374	272
	374	273
	374	301
	374	302
	374	303
	374	398
	374	399
	375	0
	375	1
	375	144
	375	145
	375	146
	375	174
	375	175
	375	176
	375	269
	375	270
	375	271
	375	301
	375	302
	375	303
	375	398
	375	399
	376	0
	376	1
	376	144
	376	145
	376	146
	376	174
	376	175
	376	176
	376	269
	376	270
	376	271
	376	302
	376	303
	376	304
	376	398
	376	399
	377	0
	377	1
	377	143
	377	144
	377	145
	377	174
	377	175
	377	176
	377	268
	377	269
	377	270
	377	303
	377	304
	377	305
	377	398
	377	399
	378	0
	378	1
	378	143
	378	144
	378	145
	378	174
	378	175
	378	176
	378	267
	378	268
	378	269
	378	303
	378	304
	378	305
	378	306
	378	398
	378	399
	379	0
	379	1
	379	143
	379	144
	379	145
	379	174
	379	175
	379	176
	379	267
	379	268
	379	269
	379	304
	379	305
	379	306
	379	398
	379	399
	380	0
	380	1
	380	142
	380	143
	380	144
	380	174
	380	175
	380	176
	380	266
	380	267
	380	268
	380	304
	380	305
	380	306
	380	398
	380	399
	381	0
	381	1
	381	142
	381	143
	381	144
	381	174
	381	175
	381	176
	381	266
	381	267
	381	268
	381	305
	381	306
	381	307
	381	398
	381	399
	382	0
	382	1
	382	142
	382	143
	382	144
	382	174
	382	175
	382	176
	382	266
	382	267
	382	268
	382	305
	382	306
	382	307
	382	397
	382	398
	382	399
	383	0
	383	1
	383	141
	383	142
	383	143
	383	174
	383	175
	383	176
	383	265
	383	266
	383	267
	383	306
	383	307
	383	308
	383	397
	383	398
	383	399
	384	0
	384	1
	384	141
	384	142
	384	143
	384	174
	384	175
	384	176
	384	264
	384	265
	384	266
	384	306
	384	307
	384	308
	384	397
	384	398
	384	399
	385	0
	385	1
	385	2
	385	140
	385	141
	385	142
	385	174
	385	175
	385	176
	385	264
	385	265
	385	266
	385	307
	385	308
	385	309
	385	397
	385	398
	385	399
	386	0
	386	1
	386	2
	386	140
	386	141
	386	142
	386	174
	386	175
	386	176
	386	264
	386	265
	386	266
	386	307
	386	308
	386	309
	386	397
	386	398
	386	399
	387	0
	387	1
	387	2
	387	139
	387	140
	387	141
	387	174
	387	175
	387	176
	387	263
	387	264
	387	265
	387	307
	387	308
	387	309
	387	397
	387	398
	387	399
	388	0
	388	1
	388	2
	388	139
	388	140
	388	141
	388	174
	388	175
	388	176
	388	263
	388	264
}
BARRIER {
	388	265
	388	307
	388	308
	388	309
	388	397
	388	398
	388	399
	389	0
	389	1
	389	2
	389	139
	389	140
	389	141
	389	173
	389	174
	389	175
	389	262
	389	263
	389	264
	389	307
	389	308
	389	309
	389	397
	389	398
	389	399
	390	0
	390	1
	390	2
	390	139
	390	140
	390	141
	390	173
	390	174
	390	175
	390	261
	390	262
	390	263
	390	306
	390	307
	390	308
	390	397
	390	398
	390	399
	391	0
	391	1
	391	2
	391	139
	391	140
	391	141
	391	173
	391	174
	391	175
	391	261
	391	262
	391	263
	391	306
	391	307
	391	308
	391	397
	391	398
	391	399
	392	0
	392	1
	392	2
	392	138
	392	139
	392	140
	392	173
	392	174
	392	175
	392	261
	392	262
	392	263
	392	306
	392	307
	392	308
	392	397
	392	398
	392	399
	393	0
	393	1
	393	2
	393	138
	393	139
	393	140
	393	173
	393	174
	393	175
	393	261
	393	262
	393	263
	393	305
	393	306
	393	307
	393	397
	393	398
	393	399
	394	0
	394	1
	394	2
	394	137
	394	138
	394	139
	394	173
	394	174
	394	175
	394	260
	394	261
	394	262
	394	305
	394	306
	394	307
	394	397
	394	398
	394	399
	395	0
	395	1
	395	2
	395	137
	395	138
	395	139
	395	173
	395	174
	395	175
	395	260
	395	261
	395	262
	395	305
	395	306
	395	307
	395	397
	395	398
	395	399
	396	0
	396	1
	396	2
	396	137
	396	138
	396	139
	396	173
	396	174
	396	175
	396	259
	396	260
	396	261
	396	304
	396	305
	396	306
	396	397
	396	398
	396	399
	397	0
	397	1
	397	2
	397	136
	397	137
	397	138
	397	139
	397	173
	397	174
	397	175
	397	259
	397	260
	397	261
	397	304
	397	305
	397	306
	397	397
	397	398
	397	399
	398	0
	398	1
	398	2
	398	136
	398	137
	398	138
	398	173
	398	174
	398	175
	398	259
	398	260
	398	261
	398	303
	398	304
	398	305
	398	397
	398	398
	398	399
	399	0
	399	1
	399	2
	399	135
	399	136
	399	137
	399	138
	399	173
	399	174
	399	175
	399	259
	399	260
	399	261
	399	303
	399	304
	399	305
	399	397
	399	398
	399	399
	400	0
	400	1
	400	2
	400	135
	400	136
	400	137
	400	173
	400	174
	400	175
	400	259
	400	260
	400	261
	400	303
	400	304
	400	305
	400	396
	400	397
	400	398
	401	0
	401	1
	401	2
	401	135
	401	136
	401	137
	401	172
	401	173
	401	174
	401	259
	401	260
	401	261
	401	302
	401	303
	401	304
	401	396
	401	397
	401	398
	402	1
	402	2
	402	3
	402	134
	402	135
	402	136
	402	172
	402	173
	402	174
	402	259
	402	260
	402	261
	402	302
	402	303
	402	304
	402	396
	402	397
	402	398
	403	1
	403	2
	403	3
	403	134
	403	135
	403	136
	403	172
	403	173
	403	174
	403	260
	403	261
	403	262
	403	301
	403	302
	403	303
	403	396
	403	397
	403	398
	404	1
	404	2
	404	3
	404	133
	404	134
	404	135
	404	172
	404	173
	404	174
	404	260
	404	261
	404	262
	404	301
	404	302
	404	303
	404	396
	404	397
	404	398
	405	1
	405	2
	405	3
	405	133
	405	134
	405	135
	405	172
	405	173
	405	174
	405	260
	405	261
	405	262
	405	301
	405	302
	405	303
	405	396
	405	397
	405	398
	406	1
	406	2
	406	3
	406	133
	406	134
	406	135
	406	172
	406	173
	406	174
	406	260
	406	261
	406	262
	406	300
	406	301
	406	302
	406	396
	406	397
	406	398
	407	1
	407	2
	407	3
	407	132
	407	133
	407	134
	407	172
	407	173
	407	174
	407	260
	407	261
	407	262
	407	300
	407	301
	407	302
	407	396
	407	397
	407	398
	408	1
	408	2
	408	3
	408	132
	408	133
	408	134
	408	172
	408	173
	408	174
	408	260
	408	261
	408	262
	408	299
	408	300
	408	301
	408	396
	408	397
	408	398
	409	1
	409	2
	409	3
	409	131
	409	132
	409	133
	409	172
	409	173
	409	174
	409	260
	409	261
	409	262
	409	299
	409	300
	409	301
	409	396
	409	397
	409	398
	410	1
	410	2
	410	3
	410	131
	410	132
	410	133
	410	171
	410	172
	410	173
	410	261
	410	262
	410	263
	410	299
	410	300
	410	301
	410	396
	410	397
	410	398
	411	1
	411	2
	411	3
	411	131
	411	132
	411	133
	411	171
	411	172
	411	173
	411	261
	411	262
	411	263
	411	298
	411	299
	411	300
	411	395
	411	396
	411	397
	412	1
	412	2
	412	3
	412	131
	412	132
	412	133
	412	170
	412	171
	412	172
	412	261
	412	262
	412	263
	412	298
	412	299
	412	300
	412	395
	412	396
	412	397
	413	2
	413	3
	413	4
	413	130
	413	131
	413	132
	413	170
	413	171
	413	172
	413	261
	413	262
	413	263
	413	297
	413	298
	413	299
	413	395
	413	396
	413	397
	414	2
	414	3
	414	4
	414	130
	414	131
	414	132
	414	170
	414	171
	414	172
	414	262
	414	263
	414	264
	414	297
	414	298
	414	299
	414	395
	414	396
	414	397
	415	2
	415	3
	415	4
	415	130
	415	131
	415	132
	415	169
	415	170
	415	171
	415	262
	415	263
	415	264
	415	296
	415	297
	415	298
	415	395
	415	396
	415	397
	416	2
	416	3
	416	4
	416	129
	416	130
}
BARRIER {
	416	131
	416	169
	416	170
	416	171
	416	263
	416	264
	416	265
	416	296
	416	297
	416	298
	416	395
	416	396
	416	397
	417	2
	417	3
	417	4
	417	129
	417	130
	417	131
	417	169
	417	170
	417	171
	417	263
	417	264
	417	265
	417	295
	417	296
	417	297
	417	395
	417	396
	417	397
	418	2
	418	3
	418	4
	418	128
	418	129
	418	130
	418	169
	418	170
	418	171
	418	264
	418	265
	418	266
	418	294
	418	295
	418	296
	418	394
	418	395
	418	396
	419	2
	419	3
	419	4
	419	128
	419	129
	419	130
	419	169
	419	170
	419	171
	419	265
	419	266
	419	267
	419	293
	419	294
	419	295
	419	394
	419	395
	419	396
	420	2
	420	3
	420	4
	420	128
	420	129
	420	130
	420	169
	420	170
	420	171
	420	266
	420	267
	420	268
	420	293
	420	294
	420	295
	420	394
	420	395
	420	396
	421	3
	421	4
	421	5
	421	127
	421	128
	421	129
	421	169
	421	170
	421	171
	421	267
	421	268
	421	269
	421	293
	421	294
	421	295
	421	394
	421	395
	421	396
	422	3
	422	4
	422	5
	422	127
	422	128
	422	129
	422	169
	422	170
	422	171
	422	268
	422	269
	422	270
	422	293
	422	294
	422	295
	422	394
	422	395
	422	396
	423	3
	423	4
	423	5
	423	127
	423	128
	423	129
	423	169
	423	170
	423	171
	423	269
	423	270
	423	271
	423	292
	423	293
	423	294
	423	394
	423	395
	423	396
	424	3
	424	4
	424	5
	424	127
	424	128
	424	129
	424	168
	424	169
	424	170
	424	270
	424	271
	424	272
	424	291
	424	292
	424	293
	424	394
	424	395
	424	396
	425	3
	425	4
	425	5
	425	127
	425	128
	425	129
	425	168
	425	169
	425	170
	425	271
	425	272
	425	273
	425	290
	425	291
	425	292
	425	393
	425	394
	425	395
	426	3
	426	4
	426	5
	426	126
	426	127
	426	128
	426	167
	426	168
	426	169
	426	272
	426	273
	426	274
	426	290
	426	291
	426	292
	426	393
	426	394
	426	395
	427	3
	427	4
	427	5
	427	126
	427	127
	427	128
	427	167
	427	168
	427	169
	427	273
	427	274
	427	275
	427	289
	427	290
	427	291
	427	393
	427	394
	427	395
	428	4
	428	5
	428	6
	428	126
	428	127
	428	128
	428	167
	428	168
	428	169
	428	274
	428	275
	428	276
	428	288
	428	289
	428	290
	428	393
	428	394
	428	395
	429	4
	429	5
	429	6
	429	126
	429	127
	429	128
	429	166
	429	167
	429	168
	429	275
	429	276
	429	277
	429	288
	429	289
	429	290
	429	393
	429	394
	429	395
	430	4
	430	5
	430	6
	430	126
	430	127
	430	128
	430	166
	430	167
	430	168
	430	276
	430	277
	430	278
	430	287
	430	288
	430	289
	430	393
	430	394
	430	395
	431	4
	431	5
	431	6
	431	125
	431	126
	431	127
	431	166
	431	167
	431	168
	431	277
	431	278
	431	279
	431	280
	431	281
	431	282
	431	283
	431	284
	431	285
	431	286
	431	287
	431	288
	431	393
	431	394
	431	395
	432	4
	432	5
	432	6
	432	125
	432	126
	432	127
	432	166
	432	167
	432	168
	432	278
	432	279
	432	280
	432	281
	432	282
	432	283
	432	284
	432	285
	432	286
	432	287
	432	393
	432	394
	432	395
	433	4
	433	5
	433	6
	433	125
	433	126
	433	127
	433	166
	433	167
	433	168
	433	279
	433	280
	433	281
	433	282
	433	283
	433	284
	433	285
	433	286
	433	392
	433	393
	433	394
	434	4
	434	5
	434	6
	434	125
	434	126
	434	127
	434	166
	434	167
	434	168
	434	392
	434	393
	434	394
	435	4
	435	5
	435	6
	435	125
	435	126
	435	127
	435	166
	435	167
	435	168
	435	392
	435	393
	435	394
	436	5
	436	6
	436	7
	436	124
	436	125
	436	126
	436	166
	436	167
	436	168
	436	392
	436	393
	436	394
	437	5
	437	6
	437	7
	437	124
	437	125
	437	126
	437	165
	437	166
	437	167
	437	392
	437	393
	437	394
	438	5
	438	6
	438	7
	438	124
	438	125
	438	126
	438	165
	438	166
	438	167
	438	392
	438	393
	438	394
	439	5
	439	6
	439	7
	439	124
	439	125
	439	126
	439	165
	439	166
	439	167
	439	392
	439	393
	439	394
	440	5
	440	6
	440	7
	440	124
	440	125
	440	126
	440	164
	440	165
	440	166
	440	392
	440	393
	440	394
	441	5
	441	6
	441	7
	441	123
	441	124
	441	125
	441	164
	441	165
	441	166
	441	391
	441	392
	441	393
	442	5
	442	6
	442	7
	442	123
	442	124
	442	125
	442	164
	442	165
	442	166
	442	391
	442	392
	442	393
	443	6
	443	7
	443	8
	443	123
	443	124
	443	125
	443	164
	443	165
	443	166
	443	391
	443	392
	443	393
	444	6
	444	7
	444	8
	444	123
	444	124
	444	125
	444	164
	444	165
	444	166
	444	391
	444	392
	444	393
	445	6
	445	7
	445	8
	445	122
	445	123
	445	124
	445	164
	445	165
	445	166
	445	391
	445	392
	445	393
	446	6
	446	7
	446	8
	446	122
	446	123
	446	124
	446	163
	446	164
	446	165
	446	391
	446	392
	446	393
	447	6
	447	7
	447	8
	447	122
	447	123
	447	124
	447	163
	447	164
	447	165
	447	391
	447	392
	447	393
	448	6
}
BARRIER {
	448	7
	448	8
	448	122
	448	123
	448	124
	448	163
	448	164
	448	165
	448	390
	448	391
	448	392
	449	6
	449	7
	449	8
	449	122
	449	123
	449	124
	449	163
	449	164
	449	165
	449	390
	449	391
	449	392
	450	6
	450	7
	450	8
	450	122
	450	123
	450	124
	450	163
	450	164
	450	165
	450	390
	450	391
	450	392
	451	7
	451	8
	451	9
	451	122
	451	123
	451	124
	451	162
	451	163
	451	164
	451	390
	451	391
	451	392
	452	7
	452	8
	452	9
	452	121
	452	122
	452	123
	452	162
	452	163
	452	164
	452	389
	452	390
	452	391
	453	7
	453	8
	453	9
	453	121
	453	122
	453	123
	453	162
	453	163
	453	164
	453	389
	453	390
	453	391
	454	7
	454	8
	454	9
	454	121
	454	122
	454	123
	454	162
	454	163
	454	164
	454	389
	454	390
	454	391
	455	8
	455	9
	455	10
	455	120
	455	121
	455	122
	455	162
	455	163
	455	164
	455	389
	455	390
	455	391
	456	8
	456	9
	456	10
	456	120
	456	121
	456	122
	456	162
	456	163
	456	164
	456	388
	456	389
	456	390
	457	8
	457	9
	457	10
	457	120
	457	121
	457	122
	457	162
	457	163
	457	164
	457	388
	457	389
	457	390
	458	8
	458	9
	458	10
	458	120
	458	121
	458	122
	458	161
	458	162
	458	163
	458	388
	458	389
	458	390
	459	9
	459	10
	459	11
	459	120
	459	121
	459	122
	459	161
	459	162
	459	163
	459	388
	459	389
	459	390
	460	9
	460	10
	460	11
	460	120
	460	121
	460	122
	460	161
	460	162
	460	163
	460	388
	460	389
	460	390
	461	9
	461	10
	461	11
	461	120
	461	121
	461	122
	461	161
	461	162
	461	163
	461	388
	461	389
	461	390
	462	9
	462	10
	462	11
	462	119
	462	120
	462	121
	462	161
	462	162
	462	163
	462	388
	462	389
	462	390
	463	9
	463	10
	463	11
	463	119
	463	120
	463	121
	463	160
	463	161
	463	162
	463	388
	463	389
	463	390
	464	9
	464	10
	464	11
	464	119
	464	120
	464	121
	464	160
	464	161
	464	162
	464	387
	464	388
	464	389
	465	9
	465	10
	465	11
	465	119
	465	120
	465	121
	465	160
	465	161
	465	162
	465	387
	465	388
	465	389
	466	9
	466	10
	466	11
	466	119
	466	120
	466	121
	466	160
	466	161
	466	162
	466	387
	466	388
	466	389
	467	10
	467	11
	467	12
	467	119
	467	120
	467	121
	467	160
	467	161
	467	162
	467	387
	467	388
	467	389
	468	10
	468	11
	468	12
	468	119
	468	120
	468	121
	468	160
	468	161
	468	162
	468	386
	468	387
	468	388
	469	10
	469	11
	469	12
	469	118
	469	119
	469	120
	469	160
	469	161
	469	162
	469	386
	469	387
	469	388
	470	10
	470	11
	470	12
	470	118
	470	119
	470	120
	470	160
	470	161
	470	162
	470	386
	470	387
	470	388
	471	11
	471	12
	471	13
	471	118
	471	119
	471	120
	471	159
	471	160
	471	161
	471	386
	471	387
	471	388
	472	11
	472	12
	472	13
	472	118
	472	119
	472	120
	472	159
	472	160
	472	161
	472	385
	472	386
	472	387
	473	11
	473	12
	473	13
	473	118
	473	119
	473	120
	473	159
	473	160
	473	161
	473	385
	473	386
	473	387
	474	11
	474	12
	474	13
	474	118
	474	119
	474	120
	474	159
	474	160
	474	161
	474	385
	474	386
	474	387
	475	12
	475	13
	475	14
	475	118
	475	119
	475	120
	475	158
	475	159
	475	160
	475	385
	475	386
	475	387
	476	12
	476	13
	476	14
	476	118
	476	119
	476	120
	476	158
	476	159
	476	160
	476	384
	476	385
	476	386
	477	12
	477	13
	477	14
	477	117
	477	118
	477	119
	477	158
	477	159
	477	160
	477	384
	477	385
	477	386
	478	12
	478	13
	478	14
	478	117
	478	118
	478	119
	478	158
	478	159
	478	160
	478	384
	478	385
	478	386
	479	12
	479	13
	479	14
	479	117
	479	118
	479	119
	479	158
	479	159
	479	160
	479	384
	479	385
	479	386
	480	13
	480	14
	480	15
	480	117
	480	118
	480	119
	480	158
	480	159
	480	160
	480	384
	480	385
	480	386
	481	13
	481	14
	481	15
	481	117
	481	118
	481	119
	481	158
	481	159
	481	160
	481	383
	481	384
	481	385
	482	13
	482	14
	482	15
	482	117
	482	118
	482	119
	482	120
	482	157
	482	158
	482	159
	482	383
	482	384
	482	385
	483	13
	483	14
	483	15
	483	118
	483	119
	483	120
	483	121
	483	157
	483	158
	483	159
	483	383
	483	384
	483	385
	484	14
	484	15
	484	16
	484	119
	484	120
	484	121
	484	122
	484	157
	484	158
	484	159
	484	383
	484	384
	484	385
	485	14
	485	15
	485	16
	485	120
	485	121
	485	122
	485	123
	485	156
	485	157
	485	158
	485	382
	485	383
	485	384
	486	14
	486	15
	486	16
	486	121
	486	122
	486	123
	486	124
	486	125
	486	156
	486	157
	486	158
	486	382
	486	383
	486	384
	487	14
	487	15
	487	16
	487	123
	487	124
	487	125
	487	126
	487	156
	487	157
	487	158
	487	382
	487	383
	487	384
	488	15
	488	16
	488	17
	488	124
	488	125
	488	126
	488	127
	488	155
	488	156
	488	157
	488	382
	488	383
	488	384
	489	15
}
BARRIER {
	489	16
	489	17
	489	126
	489	127
	489	128
	489	129
	489	155
	489	156
	489	157
	489	381
	489	382
	489	383
	490	15
	490	16
	490	17
	490	127
	490	128
	490	129
	490	130
	490	131
	490	132
	490	155
	490	156
	490	157
	490	381
	490	382
	490	383
	491	15
	491	16
	491	17
	491	128
	491	129
	491	130
	491	131
	491	132
	491	133
	491	134
	491	155
	491	156
	491	157
	491	381
	491	382
	491	383
	492	16
	492	17
	492	18
	492	130
	492	131
	492	132
	492	133
	492	134
	492	135
	492	136
	492	155
	492	156
	492	157
	492	381
	492	382
	492	383
	493	16
	493	17
	493	18
	493	133
	493	134
	493	135
	493	136
	493	137
	493	138
	493	155
	493	156
	493	157
	493	380
	493	381
	493	382
	494	16
	494	17
	494	18
	494	135
	494	136
	494	137
	494	138
	494	139
	494	140
	494	141
	494	154
	494	155
	494	156
	494	380
	494	381
	494	382
	495	16
	495	17
	495	18
	495	137
	495	138
	495	139
	495	140
	495	141
	495	142
	495	143
	495	144
	495	154
	495	155
	495	156
	495	380
	495	381
	495	382
	496	17
	496	18
	496	19
	496	139
	496	140
	496	141
	496	142
	496	143
	496	144
	496	145
	496	146
	496	147
	496	153
	496	154
	496	155
	496	380
	496	381
	496	382
	497	17
	497	18
	497	19
	497	142
	497	143
	497	144
	497	145
	497	146
	497	147
	497	148
	497	149
	497	150
	497	151
	497	152
	497	153
	497	154
	497	155
	497	379
	497	380
	497	381
	498	17
	498	18
	498	19
	498	145
	498	146
	498	147
	498	148
	498	149
	498	150
	498	151
	498	152
	498	153
	498	154
	498	155
	498	379
	498	380
	498	381
	499	17
	499	18
	499	19
	499	148
	499	149
	499	150
	499	151
	499	152
	499	153
	499	154
	499	379
	499	380
	499	381
	500	17
	500	18
	500	19
	500	379
	500	380
	500	381
	501	18
	501	19
	501	20
	501	379
	501	380
	501	381
	502	18
	502	19
	502	20
	502	378
	502	379
	502	380
	503	18
	503	19
	503	20
	503	378
	503	379
	503	380
	504	18
	504	19
	504	20
	504	378
	504	379
	504	380
	505	19
	505	20
	505	21
	505	378
	505	379
	505	380
	506	19
	506	20
	506	21
	506	377
	506	378
	506	379
	507	19
	507	20
	507	21
	507	377
	507	378
	507	379
	508	20
	508	21
	508	22
	508	376
	508	377
	508	378
	509	20
	509	21
	509	22
	509	376
	509	377
	509	378
	510	21
	510	22
	510	23
	510	376
	510	377
	510	378
	511	21
	511	22
	511	23
	511	375
	511	376
	511	377
	512	21
	512	22
	512	23
	512	375
	512	376
	512	377
	513	21
	513	22
	513	23
	513	375
	513	376
	513	377
	514	22
	514	23
	514	24
	514	375
	514	376
	514	377
	515	22
	515	23
	515	24
	515	374
	515	375
	515	376
	516	22
	516	23
	516	24
	516	374
	516	375
	516	376
	517	22
	517	23
	517	24
	517	374
	517	375
	517	376
	518	22
	518	23
	518	24
	518	374
	518	375
	518	376
	519	23
	519	24
	519	25
	519	374
	519	375
	519	376
	520	23
	520	24
	520	25
	520	373
	520	374
	520	375
	521	24
	521	25
	521	26
	521	373
	521	374
	521	375
	522	24
	522	25
	522	26
	522	372
	522	373
	522	374
	523	25
	523	26
	523	27
	523	372
	523	373
	523	374
	524	25
	524	26
	524	27
	524	371
	524	372
	524	373
	525	25
	525	26
	525	27
	525	371
	525	372
	525	373
	526	25
	526	26
	526	27
	526	371
	526	372
	526	373
	527	25
	527	26
	527	27
	527	371
	527	372
	527	373
	528	26
	528	27
	528	28
	528	371
	528	372
	528	373
	529	26
	529	27
	529	28
	529	370
	529	371
	529	372
	530	27
	530	28
	530	29
	530	370
	530	371
	530	372
	531	27
	531	28
	531	29
	531	369
	531	370
	531	371
	532	28
	532	29
	532	30
	532	369
	532	370
	532	371
	533	28
	533	29
	533	30
	533	368
	533	369
	533	370
	534	28
	534	29
	534	30
	534	368
	534	369
	534	370
	535	29
	535	30
	535	31
	535	367
	535	368
	535	369
	536	29
	536	30
	536	31
	536	367
	536	368
	536	369
	537	30
	537	31
	537	32
	537	366
	537	367
	537	368
	538	30
	538	31
	538	32
	538	366
	538	367
	538	368
	539	30
	539	31
	539	32
	539	366
	539	367
	539	368
	540	30
	540	31
	540	32
	540	366
	540	367
	540	368
	541	30
	541	31
	541	32
	541	366
	541	367
	541	368
	542	31
	542	32
	542	33
	542	366
	542	367
	542	368
	543	31
	543	32
	543	33
	543	365
	543	366
	543	367
	544	31
	544	32
	544	33
	544	365
	544	366
	544	367
	545	32
	545	33
	545	34
	545	364
	545	365
	545	366
	546	32
	546	33
	546	34
	546	364
	546	365
	546	366
	547	33
	547	34
	547	35
	547	363
	547	364
	547	365
	548	33
	548	34
	548	35
	548	363
	548	364
	548	365
	549	34
	549	35
	549	36
	549	363
	549	364
	549	365
	550	34
	550	35
	550	36
	550	362
	550	363
	550	364
	551	35
	551	36
	551	37
	551	362
	551	363
	551	364
	552	35
	552	36
	552	37
	552	361
	552	362
	552	363
	553	35
	553	36
	553	37
	553	361
	553	362
	553	363
	554	36
}
BARRIER {
	554	37
	554	38
	554	360
	554	361
	554	362
	555	36
	555	37
	555	38
	555	360
	555	361
	555	362
	556	37
	556	38
	556	39
	556	360
	556	361
	556	362
	557	37
	557	38
	557	39
	557	359
	557	360
	557	361
	558	37
	558	38
	558	39
	558	359
	558	360
	558	361
	559	38
	559	39
	559	40
	559	358
	559	359
	559	360
	560	38
	560	39
	560	40
	560	358
	560	359
	560	360
	561	39
	561	40
	561	41
	561	358
	561	359
	561	360
	562	39
	562	40
	562	41
	562	357
	562	358
	562	359
	563	39
	563	40
	563	41
	563	357
	563	358
	563	359
	564	40
	564	41
	564	42
	564	356
	564	357
	564	358
	565	40
	565	41
	565	42
	565	356
	565	357
	565	358
	566	41
	566	42
	566	43
	566	356
	566	357
	566	358
	567	41
	567	42
	567	43
	567	355
	567	356
	567	357
	568	42
	568	43
	568	44
	568	354
	568	355
	568	356
	569	42
	569	43
	569	44
	569	354
	569	355
	569	356
	570	43
	570	44
	570	45
	570	353
	570	354
	570	355
	571	44
	571	45
	571	46
	571	352
	571	353
	571	354
	572	44
	572	45
	572	46
	572	352
	572	353
	572	354
	573	44
	573	45
	573	46
	573	352
	573	353
	573	354
	574	45
	574	46
	574	47
	574	351
	574	352
	574	353
	575	45
	575	46
	575	47
	575	351
	575	352
	575	353
	576	46
	576	47
	576	48
	576	351
	576	352
	576	353
	577	46
	577	47
	577	48
	577	350
	577	351
	577	352
	578	46
	578	47
	578	48
	578	350
	578	351
	578	352
	579	47
	579	48
	579	49
	579	349
	579	350
	579	351
	580	47
	580	48
	580	49
	580	349
	580	350
	580	351
	581	48
	581	49
	581	50
	581	349
	581	350
	581	351
	582	48
	582	49
	582	50
	582	348
	582	349
	582	350
	583	49
	583	50
	583	51
	583	347
	583	348
	583	349
	584	49
	584	50
	584	51
	584	347
	584	348
	584	349
	585	50
	585	51
	585	52
	585	346
	585	347
	585	348
	586	51
	586	52
	586	53
	586	345
	586	346
	586	347
	587	51
	587	52
	587	53
	587	345
	587	346
	587	347
	588	52
	588	53
	588	54
	588	344
	588	345
	588	346
	589	52
	589	53
	589	54
	589	344
	589	345
	589	346
	590	53
	590	54
	590	55
	590	343
	590	344
	590	345
	591	54
	591	55
	591	56
	591	342
	591	343
	591	344
	592	54
	592	55
	592	56
	592	342
	592	343
	592	344
	593	54
	593	55
	593	56
	593	342
	593	343
	593	344
	594	55
	594	56
	594	57
	594	341
	594	342
	594	343
	595	55
	595	56
	595	57
	595	341
	595	342
	595	343
	596	56
	596	57
	596	58
	596	341
	596	342
	596	343
	597	56
	597	57
	597	58
	597	340
	597	341
	597	342
	598	57
	598	58
	598	59
	598	339
	598	340
	598	341
	599	57
	599	58
	599	59
	599	339
	599	340
	599	341
	600	58
	600	59
	600	60
	600	338
	600	339
	600	340
	601	59
	601	60
	601	61
	601	337
	601	338
	601	339
	602	59
	602	60
	602	61
	602	337
	602	338
	602	339
	603	60
	603	61
	603	62
	603	336
	603	337
	603	338
	604	60
	604	61
	604	62
	604	336
	604	337
	604	338
	605	61
	605	62
	605	63
	605	335
	605	336
	605	337
	606	62
	606	63
	606	64
	606	334
	606	335
	606	336
	607	62
	607	63
	607	64
	607	334
	607	335
	607	336
	608	63
	608	64
	608	65
	608	333
	608	334
	608	335
	609	63
	609	64
	609	65
	609	333
	609	334
	609	335
	610	64
	610	65
	610	66
	610	332
	610	333
	610	334
	611	65
	611	66
	611	67
	611	331
	611	332
	611	333
	612	65
	612	66
	612	67
	612	331
	612	332
	612	333
	613	66
	613	67
	613	68
	613	330
	613	331
	613	332
	614	67
	614	68
	614	69
	614	329
	614	330
	614	331
	615	68
	615	69
	615	70
	615	328
	615	329
	615	330
	616	69
	616	70
	616	71
	616	327
	616	328
	616	329
	617	69
	617	70
	617	71
	617	327
	617	328
	617	329
	618	70
	618	71
	618	72
	618	326
	618	327
	618	328
	619	70
	619	71
	619	72
	619	326
	619	327
	619	328
	620	71
	620	72
	620	73
	620	325
	620	326
	620	327
	621	72
	621	73
	621	74
	621	324
	621	325
	621	326
	622	72
	622	73
	622	74
	622	324
	622	325
	622	326
	623	73
	623	74
	623	75
	623	323
	623	324
	623	325
	624	74
	624	75
	624	76
	624	322
	624	323
	624	324
	625	75
	625	76
	625	77
	625	321
	625	322
	625	323
	626	76
	626	77
	626	78
	626	320
	626	321
	626	322
	627	76
	627	77
	627	78
	627	320
	627	321
	627	322
	628	77
	628	78
	628	79
	628	319
	628	320
	628	321
	629	78
	629	79
	629	80
	629	318
	629	319
	629	320
	630	79
	630	80
	630	81
	630	318
	630	319
	630	320
	631	79
	631	80
	631	81
	631	317
	631	318
	631	319
	632	80
	632	81
	632	82
	632	316
	632	317
	632	318
	633	81
	633	82
	633	83
	633	315
	633	316
	633	317
	634	82
	634	83
	634	84
	634	314
	634	315
	634	316
	635	83
	635	84
	635	85
	635	314
	635	315
	635	316
	636	83
	636	84
	636	85
	636	313
	636	314
	636	315
	637	84
	637	85
	637	86
}
BARRIER {
	637	312
	637	313
	637	314
	638	85
	638	86
	638	87
	638	311
	638	312
	638	313
	639	86
	639	87
	639	88
	639	310
	639	311
	639	312
	640	87
	640	88
	640	89
	640	310
	640	311
	640	312
	641	87
	641	88
	641	89
	641	309
	641	310
	641	311
	642	88
	642	89
	642	90
	642	308
	642	309
	642	310
	643	89
	643	90
	643	91
	643	307
	643	308
	643	309
	644	90
	644	91
	644	92
	644	306
	644	307
	644	308
	645	91
	645	92
	645	93
	645	306
	645	307
	645	308
	646	92
	646	93
	646	94
	646	305
	646	306
	646	307
	647	93
	647	94
	647	95
	647	304
	647	305
	647	306
	648	94
	648	95
	648	96
	648	303
	648	304
	648	305
	649	95
	649	96
	649	97
	649	302
	649	303
	649	304
	650	96
	650	97
	650	98
	650	301
	650	302
	650	303
	651	97
	651	98
	651	99
	651	300
	651	301
	651	302
	652	98
	652	99
	652	100
	652	299
	652	300
	652	301
	653	99
	653	100
	653	101
	653	298
	653	299
	653	300
	654	100
	654	101
	654	102
	654	297
	654	298
	654	299
	655	101
	655	102
	655	103
	655	296
	655	297
	655	298
	656	102
	656	103
	656	104
	656	295
	656	296
	656	297
	657	103
	657	104
	657	105
	657	106
	657	293
	657	294
	657	295
	657	296
	658	104
	658	105
	658	106
	658	107
	658	292
	658	293
	658	294
	658	295
	659	105
	659	106
	659	107
	659	108
	659	291
	659	292
	659	293
	659	294
	660	107
	660	108
	660	109
	660	290
	660	291
	660	292
	661	108
	661	109
	661	110
	661	111
	661	288
	661	289
	661	290
	661	291
	662	109
	662	110
	662	111
	662	112
	662	287
	662	288
	662	289
	662	290
	663	110
	663	111
	663	112
	663	113
	663	286
	663	287
	663	288
	663	289
	664	112
	664	113
	664	114
	664	285
	664	286
	664	287
	665	113
	665	114
	665	115
	665	116
	665	283
	665	284
	665	285
	665	286
	666	114
	666	115
	666	116
	666	117
	666	282
	666	283
	666	284
	666	285
	667	115
	667	116
	667	117
	667	118
	667	281
	667	282
	667	283
	667	284
	668	117
	668	118
	668	119
	668	280
	668	281
	668	282
	669	118
	669	119
	669	120
	669	121
	669	278
	669	279
	669	280
	669	281
	670	119
	670	120
	670	121
	670	122
	670	277
	670	278
	670	279
	670	280
	671	120
	671	121
	671	122
	671	123
	671	276
	671	277
	671	278
	671	279
	672	122
	672	123
	672	124
	672	275
	672	276
	672	277
	673	123
	673	124
	673	125
	673	126
	673	273
	673	274
	673	275
	673	276
	674	124
	674	125
	674	126
	674	127
	674	272
	674	273
	674	274
	674	275
	675	125
	675	126
	675	127
	675	128
	675	271
	675	272
	675	273
	675	274
	676	127
	676	128
	676	129
	676	270
	676	271
	676	272
	677	128
	677	129
	677	130
	677	131
	677	268
	677	269
	677	270
	677	271
	678	129
	678	130
	678	131
	678	132
	678	133
	678	266
	678	267
	678	268
	678	269
	678	270
	679	130
	679	131
	679	132
	679	133
	679	134
	679	265
	679	266
	679	267
	679	268
	679	269
	680	132
	680	133
	680	134
	680	135
	680	136
	680	263
	680	264
	680	265
	680	266
	680	267
	681	134
	681	135
	681	136
	681	137
	681	138
	681	261
	681	262
	681	263
	681	264
	681	265
	682	135
	682	136
	682	137
	682	138
	682	139
	682	140
	682	259
	682	260
	682	261
	682	262
	682	263
	682	264
	683	137
	683	138
	683	139
	683	140
	683	141
	683	142
	683	257
	683	258
	683	259
	683	260
	683	261
	683	262
	684	139
	684	140
	684	141
	684	142
	684	143
	684	144
	684	255
	684	256
	684	257
	684	258
	684	259
	684	260
	685	141
	685	142
	685	143
	685	144
	685	145
	685	254
	685	255
	685	256
	685	257
	685	258
	686	143
	686	144
	686	145
	686	146
	686	147
	686	148
	686	251
	686	252
	686	253
	686	254
	686	255
	686	256
	687	145
	687	146
	687	147
	687	148
	687	149
	687	150
	687	151
	687	248
	687	249
	687	250
	687	251
	687	252
	687	253
	687	254
	688	146
	688	147
	688	148
	688	149
	688	150
	688	151
	688	152
	688	153
	688	246
	688	247
	688	248
	688	249
	688	250
	688	251
	688	252
	688	253
	689	149
	689	150
	689	151
	689	152
	689	153
	689	154
	689	155
	689	244
	689	245
	689	246
	689	247
	689	248
	689	249
	689	250
	690	152
	690	153
	690	154
	690	155
	690	156
	690	243
	690	244
	690	245
	690	246
	690	247
	691	154
	691	155
	691	156
	691	157
	691	158
	691	159
	691	240
	691	241
	691	242
	691	243
	691	244
	691	245
	692	156
	692	157
	692	158
	692	159
	692	160
	692	161
	692	162
	692	237
	692	238
	692	239
	692	240
	692	241
	692	242
	692	243
	693	157
	693	158
	693	159
	693	160
	693	161
	693	162
	693	163
	693	164
	693	165
	693	166
	693	167
	693	168
	693	231
	693	232
	693	233
	693	234
	693	235
	693	236
	693	237
	693	238
	693	239
	693	240
	693	241
	693	242
	694	160
	694	161
	694	162
	694	163
	694	164
	694	165
	694	166
	694	167
	694	168
	694	169
	694	170
	694	171
	694	228
	694	229
	694	230
	694	231
	694	232
	694	233
	694	234
	694	235
	694	236
	694	237
	694	238
}
BARRIER {
	694	239
	695	163
	695	164
	695	165
	695	166
	695	167
	695	168
	695	169
	695	170
	695	171
	695	172
	695	173
	695	174
	695	225
	695	226
	695	227
	695	228
	695	229
	695	230
	695	231
	695	232
	695	233
	695	234
	695	235
	695	236
	696	169
	696	170
	696	171
	696	172
	696	173
	696	174
	696	175
	696	176
	696	177
	696	178
	696	179
	696	180
	696	219
	696	220
	696	221
	696	222
	696	223
	696	224
	696	225
	696	226
	696	227
	696	228
	696	229
	696	230
	697	172
	697	173
	697	174
	697	175
	697	176
	697	177
	697	178
	697	179
	697	180
	697	181
	697	182
	697	183
	697	184
	697	185
	697	186
	697	213
	697	214
	697	215
	697	216
	697	217
	697	218
	697	219
	697	220
	697	221
	697	222
	697	223
	697	224
	697	225
	697	226
	697	227
	698	175
	698	176
	698	177
	698	178
	698	179
	698	180
	698	181
	698	182
	698	183
	698	184
	698	185
	698	186
	698	187
	698	188
	698	189
	698	190
	698	191
	698	192
	698	193
	698	194
	698	195
	698	196
	698	197
	698	198
	698	201
	698	202
	698	203
	698	204
	698	205
	698	206
	698	207
	698	208
	698	209
	698	210
	698	211
	698	212
	698	213
	698	214
	698	215
	698	216
	698	217
	698	218
	698	219
	698	220
	698	221
	698	222
	698	223
	698	224
	699	181
	699	182
	699	183
	699	184
	699	185
	699	186
	699	187
	699	188
	699	189
	699	190
	699	191
	699	192
	699	193
	699	194
	699	195
	699	196
	699	197
	699	198
	699	199
	699	200
	699	201
	699	202
	699	203
	699	204
	699	205
	699	206
	699	207
	699	208
	699	209
	699	210
	699	211
	699	212
	699	213
	699	214
	699	215
	699	216
	699	217
	699	218
}
# BARRIER_END

# ODOR BEGIN
ODOR_MAP {
	   0 0      700  0
	   0 1      700  0
	   0 2      700  0
	   0 3      700  0
	   0 4      700  0
	   0 5      700  0
	   0 6      700  0
	   0 7      700  0
	   0 8      700  0
	   0 9      700  0
	   0 10     700  0
	   0 11     700  0
	   0 12     700  0
	   0 13     700  0
	   0 14     700  0
	   0 15     700  0
	   0 16     700  0
	   0 17     700  0
	   0 18     700  0
	   0 19     700  0
	   0 20     700  0
	   0 21     700  0
	   0 22     700  0
	   0 23     700  0
	   0 24     700  0
	   0 25     700  0
	   0 26     700  0
	   0 27     700  0
	   0 28     700  0
	   0 29     700  0
	   0 30     700  0
	   0 31     700  0
	   0 32     700  0
	   0 33     700  0
	   0 34     700  0
	   0 35     700  0
	   0 36     700  0
	   0 37     700  0
	   0 38     700  0
	   0 39     700  0
	   0 40     700  0
	   0 41     700  0
	   0 42     700  0
	   0 43     700  0
	   0 44     700  0
	   0 45     700  0
	   0 46     700  0
	   0 47     700  0
	   0 48     700  0
	   0 49     700  0
	   0 50     700  0
	   0 51     700  0
	   0 52     700  0
	   0 53     700  0
	   0 54     700  0
	   0 55     700  0
	   0 56     700  0
	   0 57     700  0
	   0 58     700  0
	   0 59     700  0
	   0 60     700  0
	   0 61     700  0
	   0 62     700  0
	   0 63     700  0
	   0 64     700  0
	   0 65     700  0
	   0 66     700  0
	   0 67     700  0
	   0 68     700  0
	   0 69     700  0
	   0 70     700  0
	   0 71     700  0
	   0 72     700  0
	   0 73     700  0
	   0 74     700  0
	   0 75     700  0
	   0 76     700  0
	   0 77     700  0
	   0 78     700  0
	   0 79     700  0
	   0 80     700  0
	   0 81     700  0
	   0 82     700  0
	   0 83     700  0
	   0 84     700  0
	   0 85     700  0
	   0 86     700  0
	   0 87     700  0
	   0 88     700  0
	   0 89     700  0
	   0 90     700  0
	   0 91     700  0
	   0 92     700  0
	   0 93     700  0
	   0 94     700  0
	   0 95     700  0
	   0 96     700  0
	   0 97     700  0
	   0 98     700  0
	   0 99     700  0
	   0 100    700  0
	   0 101    700  0
	   0 102    700  0
	   0 103    700  0
	   0 104    700  0
	   0 105    700  0
	   0 106    700  0
	   0 107    700  0
	   0 108    700  0
	   0 109    700  0
	   0 110    700  0
	   0 111    700  0
	   0 112    700  0
	   0 113    700  0
	   0 114    700  0
	   0 115    700  0
	   0 116    700  0
	   0 117    700  0
	   0 118    700  0
	   0 119    700  0
	   0 120    700  0
	   0 121    700  0
	   0 122    700  0
	   0 123    700  0
	   0 124    700  0
	   0 125    700  0
	   0 126    700  0
	   0 127    700  0
	   0 128    700  0
	   0 129    700  0
	   0 130    700  0
	   0 131    700  0
	   0 132    700  0
	   0 133    700  0
	   0 134    700  0
	   0 135    700  0
	   0 136    700  0
	   0 137    700  0
	   0 138    700  0
	   0 139    700  0
	   0 140    700  0
	   0 141    700  0
	   0 142    700  0
	   0 143    700  0
	   0 144    700  0
	   0 145    700  0
	   0 146    700  0
	   0 147    700  0
	   0 148    700  0
	   0 149    700  0
	   0 150    700  0
	   0 151    700  0
	   0 152    700  0
	   0 153    700  0
	   0 154    700  0
	   0 155    700  0
	   0 156    700  0
	   0 157    700  0
	   0 158    700  0
	   0 159    700  0
	   0 160    700  0
	   0 161    700  0
	   0 162    700  0
	   0 163    700  0
	   0 164    700  0
	   0 165    700  0
	   0 166    700  0
	   0 167    700  0
	   0 168    700  0
	   0 169    700  0
	   0 170    700  0
	   0 171    700  0
	   0 172    700  0
	   0 173    700  0
	   0 174    700  0
	   0 175    700  0
	   0 176    700  0
	   0 177    700  0
	   0 178    700  0
	   0 179    700  0
	   0 180    700  0
	   0 181    700  0
	   0 182    700  0
	   0 183    700  0
	   0 184    700  0
	   0 185    700  0
	   0 186    700  0
	   0 187    700  0
	   0 188    700  0
	   0 189    700  0
	   0 190    700  0
	   0 191    700  0
	   0 192    700  0
	   0 193    700  0
	   0 194    700  0
	   0 195    700  0
	   0 196    700  0
	   0 197    700  0
	   0 198    700  0
	   0 199    700  0
	   0 200    700  0
	   0 201    700  0
	   0 202    700  0
	   0 203    700  0
	   0 204    700  0
	   0 205    700  0
	   0 206    700  0
	   0 207    700  0
	   0 208    700  0
	   0 209    700  0
	   0 210    700  0
	   0 211    700  0
	   0 212    700  0
	   0 213    700  0
	   0 214    700  0
	   0 215    700  0
	   0 216    700  0
	   0 217    700  0
	   0 218    700  0
	   0 219    700  0
	   0 220    700  0
	   0 221    700  0
	   0 222    700  0
	   0 223    700  0
	   0 224    700  0
	   0 225    700  0
	   0 226    700  0
	   0 227    700  0
	   0 228    700  0
	   0 229    700  0
	   0 230    700  0
	   0 231    700  0
	   0 232    700  0
	   0 233    700  0
	   0 234    700  0
	   0 235    700  0
	   0 236    700  0
	   0 237    700  0
	   0 238    700  0
	   0 239    700  0
	   0 240    700  0
	   0 241    700  0
	   0 242    700  0
	   0 243    700  0
	   0 244    700  0
	   0 245    700  0
	   0 246    700  0
	   0 247    700  0
	   0 248    700  0
	   0 249    700  0
	   0 250    700  0
	   0 251    700  0
	   0 252    700  0
	   0 253    700  0
	   0 254    700  0
	   0 255    700  0
	   0 256    700  0
	   0 257    700  0
	   0 258    700  0
	   0 259    700  0
	   0 260    700  0
	   0 261    700  0
	   0 262    700  0
	   0 263    700  0
	   0 264    700  0
	   0 265    700  0
	   0 266    700  0
	   0 267    700  0
	   0 268    700  0
	   0 269    700  0
	   0 270    700  0
	   0 271    700  0
	   0 272    700  0
	   0 273    700  0
	   0 274    700  0
	   0 275    700  0
	   0 276    700  0
	   0 277    700  0
	   0 278    700  0
	   0 279    700  0
	   0 280    700  0
	   0 281    700  0
	   0 282    700  0
	   0 283    700  0
	   0 284    700  0
	   0 285    700  0
	   0 286    700  0
	   0 287    700  0
	   0 288    700  0
	   0 289    700  0
	   0 290    700  0
	   0 291    700  0
	   0 292    700  0
	   0 293    700  0
	   0 294    700  0
	   0 295    700  0
	   0 296    700  0
	   0 297    700  0
	   0 298    700  0
	   0 299    700  0
	   0 300    700  0
	   0 301    700  0
	   0 302    700  0
	   0 303    700  0
	   0 304    700  0
	   0 305    700  0
	   0 306    700  0
	   0 307    700  0
	   0 308    700  0
	   0 309    700  0
	   0 310    700  0
	   0 311    700  0
	   0 312    700  0
	   0 313    700  0
	   0 314    700  0
	   0 315    700  0
	   0 316    700  0
	   0 317    700  0
	   0 318    700  0
	   0 319    700  0
	   0 320    700  0
	   0 321    700  0
	   0 322    700  0
	   0 323    700  0
	   0 324    700  0
	   0 325    700  0
	   0 326    700  0
	   0 327    700  0
	   0 328    700  0
	   0 329    700  0
	   0 330    700  0
	   0 331    700  0
	   0 332    700  0
	   0 333    700  0
	   0 334    700  0
	   0 335    700  0
	   0 336    700  0
	   0 337    700  0
	   0 338    700  0
	   0 339    700  0
	   0 340    700  0
	   0 341    700  0
	   0 342    700  0
	   0 343    700  0
	   0 344    700  0
	   0 345    700  0
	   0 346    700  0
	   0 347    700  0
	   0 348    700  0
	   0 349    700  0
	   0 350    700  0
	   0 351    700  0
	   0 352    700  0
	   0 353    700  0
	   0 354    700  0
	   0 355    700  0
	   0 356    700  0
	   0 357    700  0
	   0 358    700  0
	   0 359    700  0
	   0 360    700  0
	   0 361    700  0
	   0 362    700  0
	   0 363    700  0
	   0 364    700  0
	   0 365    700  0
	   0 366    700  0
	   0 367    700  0
	   0 368    700  0
	   0 369    700  0
	   0 370    700  0
	   0 371    700  0
	   0 372    700  0
	   0 373    700  0
	   0 374    700  0
	   0 375    700  0
	   0 376    700  0
	   0 377    700  0
	   0 378    700  0
	   0 379    700  0
	   0 380    700  0
	   0 381    700  0
	   0 382    700  0
	   0 383    700  0
	   0 384    700  0
	   0 385    700  0
	   0 386    700  0
	   0 387    700  0
	   0 388    700  0
	   0 389    700  0
	   0 390    700  0
	   0 391    700  0
	   0 392    700  0
	   0 393    700  0
	   0 394    700  0
	   0 395    700  0
	   0 396    700  0
	   0 397    700  0
	   0 398    700  0
	   0 399    700  0
}

# ODOR END


ORGANIC {
}

ORGANISM 7  0 6 0   1713659353 1713659353  31151 143 602
  {  # program
	"main:"
	"{"
	"      11  call "
	"}"
	""
	"row1:"
	"{"
	"      1  BROADCAST  7  NEAREST  EAT  HALT "
	"}"
	""
	"row2:"
	"{"
	"      HALT "
	"}"
	""
	"row3:"
	"{"
	"     "
	"}"
	""
	"row4:"
	"{"
	"     "
	"}"
	""
	"row5:"
	"{"
	"     "
	"}"
	""
	"row6:"
	"{"
	"     "
	"}"
	""
	"row7:"
	"{"
	"     "
	"}"
	""
	"row8:"
	"{"
	"      DSLEN  58  >  ?exit  DSLEN  2  <  ?exit  2dup  1  5  10  SPAWN  -rot  2pop "
	"}"
	""
	"row9:"
	"{"
	"     "
	"}"
	""
	"row10:"
	"{"
	"      2dup  OMOVE  ?loop  2dup  EAT  pop  2dup  OMOVE  pop  2dup  EAT  pop  2dup"
	"      OMOVE  pop  2dup  EAT  pop  2negate  ENERGY  -rot  SEND-ENERGY  pop "
	"}"
	""
	"row11:"
	"{"
	"      -19  -9  CBLEN  -84  -12  GROW  -11  mod  -33  KEY-PRESS  -1  56  GROW  -40"
	"      17  call  77  2dup  -91  -36  93  --R7  call  R5!  44  72  -96  18  GROW  53"
	"      -3  R2++  -29  31  POPULATION  <<  CBLEN  KEY-PRESS  CBLEN  -84  50 "
	"}"
	""
	"row12:"
	"{"
	"      90  --R4  -47  -25  -3 "
	"}"
	""
	"row13:"
	"{"
	"      67  -18  G0!  R7!  <  COLDEST  31  2  38  -99  FARTHEST  9  AGE  nop  21  GROW "
	"}"
	""
	"row14:"
	"{"
	"      --R7  --R7  R3!  OPCODE!  >=  -5  MAKE-SPORE  -47  -2  -2  -36  -57  NEAREST"
	"      unpack2  -15 "
	"}"
	""
	"row15:"
	"{"
	"      2dup  OMOVE  ?loop  EAT  EAT  or  ?loop  55  R9  GROW "
	"}"
	""
	"row16:"
	"{"
	"      -89  HOTTEST  TRAP8  -40  5  GROW  ENERGY  5  /  R0!  pop  ?loop  -1  0  R0"
	"      MAKE-SPORE  -40  0  R0  MAKE-SPORE  NUMBER!  R5!  -40  ?loop  ?exit  33  -3"
	"      TRAP9  --R3  swap  -3  HOTTEST  -98  -46  34  24  -81  -40  -34  SEND  5  -72"
	"      <>  -72  -65  0  G0!  75  R9!  12  90  40  CB  -76  ?NUMBER!  R2!  32  58  -33"
	"      -  CMOVE  or  -92  KEY-PRESS  MOOD  81  -33 "
	"}"
	""
	"row17:"
	"{"
	"      -46  16  13  call  R5!  15  call  CMOVE  -47  14  12  or  -61  OMOVE  16  call"
	"      -3  HOTTEST  call  -7  53  64  -20  HOTTEST  TRAP8  50  NUM-CELLS  MOOD!  73"
	"      SMALLEST  R6  MOUSE-POS  R5  -81  -1  -16  69  -82  R6++  2/  53  -8  --R7"
	"      -86  R7  R0  MAKE-SPORE  NUMBER!  R5!  MIN_INT  -80  -12  34  R0++  DIST "
	"}"
	""
	"row18:"
	"{"
	"     "
	"}"
	""
	"row19:"
	"{"
	"     "
	"}"
	""
	"row20:"
	"{"
	"     "
	"}"
	""
	"row21:"
	"{"
	"     "
	"}"
	""
	"row22:"
	"{"
	"      -18  TRAP3  MOUSE-POS  if  R3  -62  42 "
	"}"
	""
	"row23:"
	"{"
	"      TRAP8  47  -95 "
	"}"
	""
	"row24:"
	"{"
	"      R3++  55  MIN_INT "
	"}"
	""
	"row25:"
	"{"
	"      2-  37  R2 "
	"}"
	""
	"row26:"
	"{"
	"      -89  HOTTEST  TRAP8  -40  5  GROW  ENERGY  5  /  R0!  pop  ?loop  -1  0  R0"
	"      MAKE-SPORE  -40  0  R0  MAKE-SPORE  NUMBER!  R5!  -40  ?loop  ?exit  33  -3"
	"      TRAP9  --R3  swap  -3  HOTTEST  -98  -46  34  24  -81  -40  -34  SEND  5  -72"
	"      <>  -72  -65  0  G0!  75  R9!  12  90  40  CB  -76  ?NUMBER!  R2!  32  58  -33"
	"      -  -79  89  SHOUT  -53  MOOD  81  -33 "
	"}"
	""
	"row27:"
	"{"
	"      WRITE  NUMBER!  4 "
	"}"
	""
	"row28:"
	"{"
	"      -47  -25  -3  R3++  55  MIN_INT "
	"}"
	""
	"row29:"
	"{"
	"      -3  -7 "
	"}"
	""
	"row30:"
	"{"
	"      71  55 "
	"}"
	""
	"row31:"
	"{"
	"      20  --R6  R8  MOUSE-POS  -49  15  20  TRAP8  41  19  call  CMOVE  HAS-NEIGHBOR"
	"      36  PEEK  or  -57  2negate  20  --R1  99  -84  -15  call  -7  82  HOTTEST  47"
	"      10  16  ?loop  47  NUM-CELLS  81  -2  -67  tuck  27  68  45  -56  call  51"
	"      R7!  <  COLDEST  R5!  MIN_INT  -49  -30  -77  34  G0  ROTATE  LISTEN  5  TRAP7"
	"      HOTTEST  34  sqrt  82  pop  NUMBER!  4  44  min  NEAREST  R6++ "
	"}"
	""
	"row32:"
	"{"
	"      18  --R6  R8  MOUSE-POS  -47  R8++  TRAP2  72  TRAP1  -64  12  <=  43  22  call"
	"      CMOVE  10  SIZE  pop  ?NUMBER!  0  R2++  -59  OMOVE  12  <=  99  2+  -30  ?loop"
	"      85  -76  TRAP3  -19  MAKE-SPORE  59  -60  32  --R8  -31  -63  -80  -87  62"
	"      -95  R2!  -92  -96  -40  NEAREST  56  TRAP7  R6++ "
	"}"
	""
	"row33:"
	"{"
	"      -35  -11  call  -1 "
	"}"
	""
	"row34:"
	"{"
	"      --R9  if  83  TRAP6  R6!  EAT  -2 "
	"}"
	""
	"row35:"
	"{"
	"     "
	"}"
	""
	"row36:"
	"{"
	"      MOOD "
	"}"
	""
	"row37:"
	"{"
	"      -44  -43  71  POKE  15  TRAP6  --R2 "
	"}"
	""
	"row38:"
	"{"
	"      PEEK "
	"}"
	""
	"row39:"
	"{"
	"      -16  --R6  R8  MOUSE-POS  46  16  13  TRAP8  40  -21  --R0  R9  GROW  -92  KEY-PRESS"
	"      -52  OMOVE  23  --R1  93  -88  -11  call  --R3  >=  -1  89  HOTTEST  45  10"
	"      11  ?loop  45  NUM-CELLS  81  -9  -61  tuck  31  64  38  58  call  -48  R7!"
	"      <  COLDEST  R5!  MIN_INT  -75  31  --R2  ROTATE  LISTEN  2  16  13  TRAP7  HOTTEST"
	"      31  sqrt  85  pop  45  14  EAT  NEIGHBORS  min  NEAREST  -39  -6  HOTTEST  R6++ "
	"}"
	""
	"row40:"
	"{"
	"     "
	"}"
	""
	"row41:"
	"{"
	"      83  35  nop  swap  -44  FARTHEST  59  *  HOTTEST "
	"}"
	""
	"row42:"
	"{"
	"     "
	"}"
	""
	"row43:"
	"{"
	"      -16  --R6  R8  MOUSE-POS  46  16  13  TRAP8  call  CMOVE  or  -92  KEY-PRESS"
	"      -52  OMOVE  23  --R1  93  -88  86  91  57  89  not  43  14  10  ?loop  45  NUM-CELLS"
	"      81  -9  -61  tuck  31  64  38  58  call  -48  R7!  <  COLDEST  R5!  MIN_INT"
	"      -75  31  G0  ROTATE  LISTEN  2  TRAP7  HOTTEST  31  sqrt  45  min  NEAREST"
	"      R6++ "
	"}"
	""
	"row44:"
	"{"
	"      -50  49  LISTEN  -56  rot "
	"}"
	""
	"row45:"
	"{"
	"      64  -20 "
	"}"
	""
	"row46:"
	"{"
	"      -16  --R6  R8  MOUSE-POS  46  16  13  TRAP8  call  -79  90  SHOUT  -53  -52"
	"      NUMBER!  OMOVE  23  --R1  93  -88  -11  call  -1  89  HOTTEST  45  10  11  ?loop"
	"      45  NUM-CELLS  81  -9  -61  tuck  31  call  -48  R7!  <  R6  R5!  MIN_INT  -75"
	"      31  G0  ROTATE  LISTEN  2  TRAP7  HOTTEST  31  sqrt  49  pop  KEY-PRESS  CMOVE "
	"}"
	""
	"row47:"
	"{"
	"      min  -59  GROW  52  over  -7  -18  -31  R2  G0!  -70  R0++  27 "
	"}"
	""
	"row48:"
	"{"
	"      DIST  -68  min "
	"}"
	""
	"row49:"
	"{"
	"      -31 "
	"}"
	""
	"row50:"
	"{"
	"      POKE  -59  -79  -21  32  WRITE "
	"}"
	""
	"row51:"
	"{"
	"      --R7  -5  97  HAS-NEIGHBOR  TRAP6  >=  40  -5  MAKE-SPORE  90  71  36 "
	"}"
	""
	"row52:"
	"{"
	"      DSLEN  R2! "
	"}"
	""
	"row53:"
	"{"
	"      2-  37  R2 "
	"}"
	""
	"row54:"
	"{"
	"     "
	"}"
	""
	"row55:"
	"{"
	"      ?loop  15  14  <=  41  19  call  CMOVE  R0!  -57  55  90  R8!  23  OMOVE  20"
	"      TRAP8  2+  KEY-PRESS  42  2+  2negate  -89  ?loop  47  NUM-CELLS  R5  81  -2"
	"      23  -67  tuck  R7!  27  68  62  -65  -84  R7!  <  COLDEST  R5!  MIN_INT  -77"
	"      NEAREST  R3++  69  33  -15  call  -3  TRAP9  --R3  5  57  TRAP7  R6++ "
	"}"
	""
	"row56:"
	"{"
	"      sqrt  -38  36  PEEK  -59  -50  R6  TRAP6  -26  41  ENERGY  55  R9 "
	"}"
	""
	"row57:"
	"{"
	"      -40  over "
	"}"
	""
	"row58:"
	"{"
	"      rot "
	"}"
	""
	"row59:"
	"{"
	"      --R7  --R7  R3!  MAKE-SPORE  90  -93  -2  62  -95  -57  41  19  call  CMOVE"
	"      NEAREST  unpack2  -15 "
	"}"
  }

CELL 7   276 237
	0 0
	0 8 7
	{ 28 0 0 0 0
	  0 0 67 0 0 }
	{
		0 1
		11 15
		17 15
		16 2
	}
	{
		-18
		18
		0
	}

CELL 7   277 237
	0 0
	0 16 2
	{ 28 0 0 0 0
	  0 0 67 0 0 }
	{
		0 1
		11 15
		17 15
	}
	{
		0
		0
		-184
	}

CELL 7   277 235
	0 0
	0 8 7
	{ 28 0 0 0 0
	  0 0 67 0 0 }
	{
		0 1
		11 15
		17 15
		16 2
	}
	{
		0
		55
		55
		0
	}

CELL 7   278 236
	0 0
	0 16 2
	{ 28 0 0 0 0
	  0 0 67 0 0 }
	{
		0 1
		11 15
		17 15
	}
	{
		0
		2
		2
	}

CELL 7   276 235
	0 0
	0 16 2
	{ 28 0 0 0 0
	  0 0 67 0 0 }
	{
		0 1
		11 15
		17 15
	}
	{
		-51
		0
	}

CELL 7   277 236
	0 0
	0 8 15
	{ 26 0 0 0 0
	  0 0 67 0 0 }
	{
		0 1
		11 15
		17 15
		16 2
	}
	{
		0
	}

ORGANISM 6  0 6 0   1713659353 1713659353  31151 143 602
  {  # program
	"main:"
	"{"
	"      11  call "
	"}"
	""
	"row1:"
	"{"
	"      1  BROADCAST  7  NEAREST  EAT  HALT "
	"}"
	""
	"row2:"
	"{"
	"      HALT "
	"}"
	""
	"row3:"
	"{"
	"     "
	"}"
	""
	"row4:"
	"{"
	"     "
	"}"
	""
	"row5:"
	"{"
	"     "
	"}"
	""
	"row6:"
	"{"
	"     "
	"}"
	""
	"row7:"
	"{"
	"     "
	"}"
	""
	"row8:"
	"{"
	"      DSLEN  58  >  ?exit  DSLEN  2  <  ?exit  2dup  1  5  10  SPAWN  -rot  2pop "
	"}"
	""
	"row9:"
	"{"
	"     "
	"}"
	""
	"row10:"
	"{"
	"      2dup  OMOVE  ?loop  2dup  EAT  pop  2dup  OMOVE  pop  2dup  EAT  pop  2dup"
	"      OMOVE  pop  2dup  EAT  pop  2negate  ENERGY  -rot  SEND-ENERGY  pop "
	"}"
	""
	"row11:"
	"{"
	"      -19  -9  CBLEN  -84  -12  GROW  -11  mod  -33  KEY-PRESS  -1  56  GROW  -40"
	"      17  call  77  2dup  -91  -36  93  --R7  call  R5!  44  72  -96  18  GROW  53"
	"      -3  R2++  -29  31  POPULATION  <<  CBLEN  KEY-PRESS  CBLEN  -84  50 "
	"}"
	""
	"row12:"
	"{"
	"      90  --R4  -47  -25  -3 "
	"}"
	""
	"row13:"
	"{"
	"      67  -18  G0!  R7!  <  COLDEST  31  2  38  -99  FARTHEST  9  AGE  nop  21  GROW "
	"}"
	""
	"row14:"
	"{"
	"      --R7  --R7  R3!  OPCODE!  >=  -5  MAKE-SPORE  -47  -2  -2  -36  -57  NEAREST"
	"      unpack2  -15 "
	"}"
	""
	"row15:"
	"{"
	"      2dup  OMOVE  ?loop  EAT  EAT  or  ?loop  55  R9  GROW "
	"}"
	""
	"row16:"
	"{"
	"      -89  HOTTEST  TRAP8  -40  5  GROW  ENERGY  5  /  R0!  pop  ?loop  -1  0  R0"
	"      MAKE-SPORE  -40  0  R0  MAKE-SPORE  NUMBER!  R5!  -40  ?loop  ?exit  33  -3"
	"      TRAP9  --R3  swap  -3  HOTTEST  -98  -46  34  24  -81  -40  -34  SEND  5  -72"
	"      <>  -72  -65  0  G0!  75  R9!  12  90  40  CB  -76  ?NUMBER!  R2!  32  58  -33"
	"      -  CMOVE  or  -92  KEY-PRESS  MOOD  81  -33 "
	"}"
	""
	"row17:"
	"{"
	"      -46  16  13  call  R5!  15  call  CMOVE  -47  14  12  or  -61  OMOVE  16  call"
	"      -3  HOTTEST  call  -7  53  64  -20  HOTTEST  TRAP8  50  NUM-CELLS  MOOD!  73"
	"      SMALLEST  R6  MOUSE-POS  R5  -81  -1  -16  69  -82  R6++  2/  53  -8  --R7"
	"      -86  R7  R0  MAKE-SPORE  NUMBER!  R5!  MIN_INT  -80  -12  34  R0++  DIST "
	"}"
	""
	"row18:"
	"{"
	"     "
	"}"
	""
	"row19:"
	"{"
	"     "
	"}"
	""
	"row20:"
	"{"
	"     "
	"}"
	""
	"row21:"
	"{"
	"     "
	"}"
	""
	"row22:"
	"{"
	"      -18  TRAP3  MOUSE-POS  if  R3  -62  42 "
	"}"
	""
	"row23:"
	"{"
	"      TRAP8  47  -95 "
	"}"
	""
	"row24:"
	"{"
	"      R3++  55  MIN_INT "
	"}"
	""
	"row25:"
	"{"
	"      2-  37  R2 "
	"}"
	""
	"row26:"
	"{"
	"      -89  HOTTEST  TRAP8  -40  5  GROW  ENERGY  5  /  R0!  pop  ?loop  -1  0  R0"
	"      MAKE-SPORE  -40  0  R0  MAKE-SPORE  NUMBER!  R5!  -40  ?loop  ?exit  33  -3"
	"      TRAP9  --R3  swap  -3  HOTTEST  -98  -46  34  24  -81  -40  -34  SEND  5  -72"
	"      <>  -72  -65  0  G0!  75  R9!  12  90  40  CB  -76  ?NUMBER!  R2!  32  58  -33"
	"      -  -79  89  SHOUT  -53  MOOD  81  -33 "
	"}"
	""
	"row27:"
	"{"
	"      WRITE  NUMBER!  4 "
	"}"
	""
	"row28:"
	"{"
	"      -47  -25  -3  R3++  55  MIN_INT "
	"}"
	""
	"row29:"
	"{"
	"      -3  -7 "
	"}"
	""
	"row30:"
	"{"
	"      71  55 "
	"}"
	""
	"row31:"
	"{"
	"      20  --R6  R8  MOUSE-POS  -49  15  20  TRAP8  41  19  call  CMOVE  HAS-NEIGHBOR"
	"      36  PEEK  or  -57  2negate  20  --R1  99  -84  -15  call  -7  82  HOTTEST  47"
	"      10  16  ?loop  47  NUM-CELLS  81  -2  -67  tuck  27  68  45  -56  call  51"
	"      R7!  <  COLDEST  R5!  MIN_INT  -49  -30  -77  34  G0  ROTATE  LISTEN  5  TRAP7"
	"      HOTTEST  34  sqrt  82  pop  NUMBER!  4  44  min  NEAREST  R6++ "
	"}"
	""
	"row32:"
	"{"
	"      18  --R6  R8  MOUSE-POS  -47  R8++  TRAP2  72  TRAP1  -64  12  <=  43  22  call"
	"      CMOVE  10  SIZE  pop  ?NUMBER!  0  R2++  -59  OMOVE  12  <=  99  2+  -30  ?loop"
	"      85  -76  TRAP3  -19  MAKE-SPORE  59  -60  32  --R8  -31  -63  -80  -87  62"
	"      -95  R2!  -92  -96  -40  NEAREST  56  TRAP7  R6++ "
	"}"
	""
	"row33:"
	"{"
	"      -35  -11  call  -1 "
	"}"
	""
	"row34:"
	"{"
	"      --R9  if  83  TRAP6  R6!  EAT  -2 "
	"}"
	""
	"row35:"
	"{"
	"     "
	"}"
	""
	"row36:"
	"{"
	"      MOOD "
	"}"
	""
	"row37:"
	"{"
	"      -44  -43  71  POKE  15  TRAP6  --R2 "
	"}"
	""
	"row38:"
	"{"
	"      PEEK "
	"}"
	""
	"row39:"
	"{"
	"      -16  --R6  R8  MOUSE-POS  46  16  13  TRAP8  40  -21  --R0  R9  GROW  -92  KEY-PRESS"
	"      -52  OMOVE  23  --R1  93  -88  -11  call  --R3  >=  -1  89  HOTTEST  45  10"
	"      11  ?loop  45  NUM-CELLS  81  -9  -61  tuck  31  64  38  58  call  -48  R7!"
	"      <  COLDEST  R5!  MIN_INT  -75  31  --R2  ROTATE  LISTEN  2  16  13  TRAP7  HOTTEST"
	"      31  sqrt  85  pop  45  14  EAT  NEIGHBORS  min  NEAREST  -39  -6  HOTTEST  R6++ "
	"}"
	""
	"row40:"
	"{"
	"     "
	"}"
	""
	"row41:"
	"{"
	"      83  35  nop  swap  -44  FARTHEST  59  *  HOTTEST "
	"}"
	""
	"row42:"
	"{"
	"     "
	"}"
	""
	"row43:"
	"{"
	"      -16  --R6  R8  MOUSE-POS  46  16  13  TRAP8  call  CMOVE  or  -92  KEY-PRESS"
	"      -52  OMOVE  23  --R1  93  -88  86  91  57  89  not  43  14  10  ?loop  45  NUM-CELLS"
	"      81  -9  -61  tuck  31  64  38  58  call  -48  R7!  <  COLDEST  R5!  MIN_INT"
	"      -75  31  G0  ROTATE  LISTEN  2  TRAP7  HOTTEST  31  sqrt  45  min  NEAREST"
	"      R6++ "
	"}"
	""
	"row44:"
	"{"
	"      -50  49  LISTEN  -56  rot "
	"}"
	""
	"row45:"
	"{"
	"      64  -20 "
	"}"
	""
	"row46:"
	"{"
	"      -16  --R6  R8  MOUSE-POS  46  16  13  TRAP8  call  -79  90  SHOUT  -53  -52"
	"      NUMBER!  OMOVE  23  --R1  93  -88  -11  call  -1  89  HOTTEST  45  10  11  ?loop"
	"      45  NUM-CELLS  81  -9  -61  tuck  31  call  -48  R7!  <  R6  R5!  MIN_INT  -75"
	"      31  G0  ROTATE  LISTEN  2  TRAP7  HOTTEST  31  sqrt  49  pop  KEY-PRESS  CMOVE "
	"}"
	""
	"row47:"
	"{"
	"      min  -59  GROW  52  over  -7  -18  -31  R2  G0!  -70  R0++  27 "
	"}"
	""
	"row48:"
	"{"
	"      DIST  -68  min "
	"}"
	""
	"row49:"
	"{"
	"      -31 "
	"}"
	""
	"row50:"
	"{"
	"      POKE  -59  -79  -21  32  WRITE "
	"}"
	""
	"row51:"
	"{"
	"      --R7  -5  97  HAS-NEIGHBOR  TRAP6  >=  40  -5  MAKE-SPORE  90  71  36 "
	"}"
	""
	"row52:"
	"{"
	"      DSLEN  R2! "
	"}"
	""
	"row53:"
	"{"
	"      2-  37  R2 "
	"}"
	""
	"row54:"
	"{"
	"     "
	"}"
	""
	"row55:"
	"{"
	"      ?loop  15  14  <=  41  19  call  CMOVE  R0!  -57  55  90  R8!  23  OMOVE  20"
	"      TRAP8  2+  KEY-PRESS  42  2+  2negate  -89  ?loop  47  NUM-CELLS  R5  81  -2"
	"      23  -67  tuck  R7!  27  68  62  -65  -84  R7!  <  COLDEST  R5!  MIN_INT  -77"
	"      NEAREST  R3++  69  33  -15  call  -3  TRAP9  --R3  5  57  TRAP7  R6++ "
	"}"
	""
	"row56:"
	"{"
	"      sqrt  -38  36  PEEK  -59  -50  R6  TRAP6  -26  41  ENERGY  55  R9 "
	"}"
	""
	"row57:"
	"{"
	"      -40  over "
	"}"
	""
	"row58:"
	"{"
	"      rot "
	"}"
	""
	"row59:"
	"{"
	"      --R7  --R7  R3!  MAKE-SPORE  90  -93  -2  62  -95  -57  41  19  call  CMOVE"
	"      NEAREST  unpack2  -15 "
	"}"
  }

CELL 6   118 159
	0 0
	0 8 7
	{ 28 0 0 0 0
	  0 0 67 0 0 }
	{
		0 1
		11 15
		17 15
		16 2
	}
	{
		-18
		18
		0
	}

CELL 6   119 159
	0 0
	0 16 2
	{ 28 0 0 0 0
	  0 0 67 0 0 }
	{
		0 1
		11 15
		17 15
	}
	{
		0
		0
		-184
	}

CELL 6   119 157
	0 0
	0 8 7
	{ 28 0 0 0 0
	  0 0 67 0 0 }
	{
		0 1
		11 15
		17 15
		16 2
	}
	{
		0
		55
		55
		0
	}

CELL 6   120 158
	0 0
	0 16 2
	{ 28 0 0 0 0
	  0 0 67 0 0 }
	{
		0 1
		11 15
		17 15
	}
	{
		0
		2
		2
	}

CELL 6   118 157
	0 0
	0 16 2
	{ 28 0 0 0 0
	  0 0 67 0 0 }
	{
		0 1
		11 15
		17 15
	}
	{
		-51
		0
	}

CELL 6   119 158
	0 0
	0 8 15
	{ 26 0 0 0 0
	  0 0 67 0 0 }
	{
		0 1
		11 15
		17 15
		16 2
	}
	{
		0
	}

ORGANISM 5  0 5 0   1713797134 1713797134  31143 100000 94
  {  # program
	"main:"
	"{"
	"      11  call "
	"}"
	""
	"row1:"
	"{"
	"      1  BROADCAST  7  NEAREST  EAT  HALT "
	"}"
	""
	"row2:"
	"{"
	"      HALT "
	"}"
	""
	"row3:"
	"{"
	"     "
	"}"
	""
	"row4:"
	"{"
	"     "
	"}"
	""
	"row5:"
	"{"
	"     "
	"}"
	""
	"row6:"
	"{"
	"     "
	"}"
	""
	"row7:"
	"{"
	"     "
	"}"
	""
	"row8:"
	"{"
	"      DSLEN  58  >  ?exit  DSLEN  2  <  ?exit  2dup  1  5  10  SPAWN  -rot  2pop "
	"}"
	""
	"row9:"
	"{"
	"     "
	"}"
	""
	"row10:"
	"{"
	"      2dup  OMOVE  ?loop  2dup  EAT  pop  2dup  OMOVE  pop  2dup  EAT  pop  2dup"
	"      OMOVE  pop  2dup  EAT  pop  2negate  ENERGY  -rot  SEND-ENERGY  pop "
	"}"
	""
	"row11:"
	"{"
	"      -19  -9  CBLEN  -84  -12  GROW  -11  mod  -33  KEY-PRESS  -1  56  GROW  -40"
	"      17  call  77  2dup  OMOVE  R2!  EAT  -59  -91  -36  93  --R7  call  R5!  44"
	"      72  -96  18  GROW  53  -3  R2++  -29  31  POPULATION  <<  CBLEN  KEY-PRESS"
	"      CBLEN  -84  50 "
	"}"
	""
	"row12:"
	"{"
	"      DSLEN  ?loop  call  CMOVE "
	"}"
	""
	"row13:"
	"{"
	"      67  -18  35  59  *  HOTTEST  31  2  38  -99  FARTHEST  9  AGE  nop  21  GROW "
	"}"
	""
	"row14:"
	"{"
	"      --R7  --R7  R3!  OPCODE!  >=  -5  MAKE-SPORE  -45  -2  -2  -36  -57  NEAREST"
	"      unpack2  -15 "
	"}"
	""
	"row15:"
	"{"
	"      2dup  OMOVE  ?loop  EAT  EAT  or  ?loop  55  R9  GROW "
	"}"
	""
	"row16:"
	"{"
	"      -89  HOTTEST  TRAP8  -40  5  GROW  ENERGY  5  /  R0!  pop  ?loop  -1  0  R0"
	"      MAKE-SPORE  -40  0  R0  MAKE-SPORE  NUMBER!  R5!  -40  ?loop  ?exit  33  -3"
	"      TRAP9  --R3  swap  -3  HOTTEST  -98  -46  34  24  -81  -40  -34  SEND  5  -72"
	"      <>  -72  -65  0  G0!  75  R9!  12  90  40  CB  -76  ?NUMBER!  R2!  32  58  -33"
	"      -  -79  90  SHOUT  -53  MOOD  81  -33 "
	"}"
	""
	"row17:"
	"{"
	"      -46  16  13  call  R5!  15  call  CMOVE  -47  14  12  or  -61  OMOVE  16  call"
	"      -3  HOTTEST  call  -7  HOTTEST  TRAP8  50  NUM-CELLS  MOOD!  73  SMALLEST  R6"
	"      MOUSE-POS  R5  -81  -1  -16  69  -82  R6++  2/  53  -8  --R7  -86  R7  R0  MAKE-SPORE"
	"      NUMBER!  R5!  MIN_INT  -80  -12  34  R0++  DIST "
	"}"
	""
	"row18:"
	"{"
	"      11  ?loop  MOOD  rot "
	"}"
	""
	"row19:"
	"{"
	"      call  unpack2  SEND "
	"}"
	""
	"row20:"
	"{"
	"     "
	"}"
	""
	"row21:"
	"{"
	"     "
	"}"
	""
	"row22:"
	"{"
	"      R3  -62  42 "
	"}"
	""
	"row23:"
	"{"
	"     "
	"}"
	""
	"row24:"
	"{"
	"     "
	"}"
	""
	"row25:"
	"{"
	"      POKE  -59  80  KEY-PRESS  HOTTEST "
	"}"
	""
	"row26:"
	"{"
	"      -89  HOTTEST  TRAP8  -40  5  GROW  ENERGY  5  /  R0!  pop  ?loop  -1  0  R0"
	"      MAKE-SPORE  -40  0  R0  MAKE-SPORE  NUMBER!  R5!  -40  ?loop  ?exit  33  -3"
	"      TRAP9  --R3  swap  -3  HOTTEST  -98  -46  34  24  -81  -40  -34  SEND  5  -72"
	"      <>  -72  -65  0  G0!  75  R9!  12  90  40  CB  -76  ?NUMBER!  R2!  32  58  -79"
	"      90  SHOUT  -53  MOOD  81  -33 "
	"}"
	""
	"row27:"
	"{"
	"      -1  -84  -37  -2  -36  -57  -  R6!  7 "
	"}"
	""
	"row28:"
	"{"
	"      -16  --R6  R8  MOUSE-POS  46  >>  OPCODE  TRAP8  call  CMOVE  or  -92  KEY-PRESS"
	"      -52  OMOVE  23  --R1  93  -88  -11  call  -1  89  HOTTEST  45  10  11  ?loop"
	"      45  NUM-CELLS  81  -9  -61  tuck  31  61  42  62  call  -48  R7!  <  COLDEST"
	"      R5!  MIN_INT  -75  31  G0  ROTATE  LISTEN  2  TRAP7  HOTTEST  31  sqrt  45"
	"      min  NEAREST  R6++ "
	"}"
	""
	"row29:"
	"{"
	"      -32  30  6  SHOUT "
	"}"
	""
	"row30:"
	"{"
	"      71  55 "
	"}"
	""
	"row31:"
	"{"
	"      20  --R6  R8  MOUSE-POS  -49  15  20  TRAP8  41  19  call  CMOVE  HAS-NEIGHBOR"
	"      36  PEEK  or  -57  2negate  20  --R1  99  -84  -15  call  -7  82  HOTTEST  47"
	"      10  16  ?loop  47  NUM-CELLS  81  -2  -67  tuck  27  68  45  -56  call  51"
	"      MIN_INT  -49  -77  34  G0  ROTATE  LISTEN  5  TRAP7  HOTTEST  34  sqrt  82"
	"      pop  44  min  NEAREST  R6++ "
	"}"
	""
	"row32:"
	"{"
	"      18  --R6  R8  MOUSE-POS  -47  R8++  TRAP1  -64  12  <=  43  22  call  CMOVE"
	"      10  SIZE  pop  ?NUMBER!  0  R2++  -59  OMOVE  12  <=  99  2+  -30  ?loop  85"
	"      -76  TRAP3  -19  MAKE-SPORE  59  -60  32  --R8  -31  -63  -80  -87  R7!  <"
	"      COLDEST  -92  -96  -40  NEAREST  56  TRAP7  R6++ "
	"}"
	""
	"row33:"
	"{"
	"      -38  87  87  90 "
	"}"
	""
	"row34:"
	"{"
	"      if  82  TRAP6  16  13  -6 "
	"}"
	""
	"row35:"
	"{"
	"     "
	"}"
	""
	"row36:"
	"{"
	"     "
	"}"
	""
	"row37:"
	"{"
	"      90 "
	"}"
	""
	"row38:"
	"{"
	"     "
	"}"
	""
	"row39:"
	"{"
	"      --R6  -29 "
	"}"
	""
	"row40:"
	"{"
	"      58 "
	"}"
	""
	"row41:"
	"{"
	"     "
	"}"
	""
	"row42:"
	"{"
	"      62  -95  -59  80  R2! "
	"}"
	""
	"row43:"
	"{"
	"     "
	"}"
	""
	"row44:"
	"{"
	"     "
	"}"
	""
	"row45:"
	"{"
	"      <>  -71  0  R6  -50  49  LISTEN  -56  rot "
	"}"
	""
	"row46:"
	"{"
	"      27  53  64  -20 "
	"}"
	""
	"row47:"
	"{"
	"      POKE  -59  80  KEY-PRESS  HOTTEST "
	"}"
	""
	"row48:"
	"{"
	"      min  GROW  52  over  +  -7  -21  -33  NEAREST  TRAP1  -70  R0++  27 "
	"}"
	""
	"row49:"
	"{"
	"      38  or  -65  min "
	"}"
	""
	"row50:"
	"{"
	"     "
	"}"
	""
	"row51:"
	"{"
	"      -16  --R6  R8  MOUSE-POS  46  16  13  TRAP8  call  CMOVE  or  -92  KEY-PRESS"
	"      -52  OMOVE  23  --R1  93  -88  -11  call  -1  89  HOTTEST  45  10  11  ?loop"
	"      45  NUM-CELLS  81  -9  -61  tuck  31  64  38  58  call  -48  R7!  <  COLDEST"
	"      R5!  MIN_INT  -75  31  G0  ROTATE  LISTEN  2  TRAP7  HOTTEST  31  sqrt  45"
	"      min  NEAREST  R6++ "
	"}"
	""
	"row52:"
	"{"
	"      -16  --R6  R8  MOUSE-POS  46  16  13  TRAP8  40  -21  --R0  R9  GROW  -92  KEY-PRESS"
	"      -52  OMOVE  23  --R1  93  -88  -11  call  --R3  >=  -1  89  HOTTEST  45  10"
	"      11  ?loop  45  NUM-CELLS  81  -9  -61  tuck  31  64  call  58  call  -48  R7!"
	"      <  COLDEST  R5!  MIN_INT  -75  31  --R2  ROTATE  LISTEN  2  16  13  TRAP7  HOTTEST"
	"      31  sqrt  85  pop  45  14  EAT  NEIGHBORS  min  NEAREST  -39  -6  HOTTEST  R6++ "
	"}"
	""
	"row53:"
	"{"
	"      38  TRAP8 "
	"}"
	""
	"row54:"
	"{"
	"     "
	"}"
	""
	"row55:"
	"{"
	"      sqrt  -38  HAS-NEIGHBOR  36  PEEK  -59  -50  R6  TRAP6  -26  41  ENERGY  55"
	"      R9 "
	"}"
	""
	"row56:"
	"{"
	"      27  53  64  -20 "
	"}"
	""
	"row57:"
	"{"
	"      -40  over  ?exit "
	"}"
	""
	"row58:"
	"{"
	"      75  11  ?loop  MOOD  rot "
	"}"
	""
	"row59:"
	"{"
	"      --R7  --R7  R3!  MAKE-SPORE  90  -93  -2  62  -95  -57  41  19  call  CMOVE"
	"      NEAREST  unpack2  -15 "
	"}"
  }

CELL 5   195 272
	0 0
	0 15 2
	{ 0 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 15
		17 6
	}
	{
		-19
		-1
		1
		-33
		0
		0
		-40
		5
	}

CELL 5   193 272
	0 0
	0 15 10
	{ 0 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 15
		17 6
	}
	{
		0
	}

CELL 5   192 271
	0 0
	0 15 10
	{ 0 0 0 0 0
	  1 0 0 0 0 }
	{
		0 1
		11 15
		17 6
	}
	{
		0
	}

CELL 5   192 270
	0 0
	0 8 13
	{ 0 0 0 0 0
	  0 0 0 0 0 }
	{
		0 1
		11 15
		17 15
		16 2
	}
	{
		-19
		-1
		-1
		-33
		0
		1
		-40
		-46
		16
		67
		1
		-47
		5
		2
		-2
		1
	}

CELL 5   194 271
	0 0
	0 15 4
	{ 0 0 0 0 0
	  1 0 0 0 0 }
	{
		0 1
		11 15
		17 6
	}
	{
		-19
		-1
		1
		-33
		0
		0
	}

ORGANISM 4  0 5 0   1713797134 1713797134  31143 100000 94
  {  # program
	"main:"
	"{"
	"      11  call "
	"}"
	""
	"row1:"
	"{"
	"      1  BROADCAST  7  NEAREST  EAT  HALT "
	"}"
	""
	"row2:"
	"{"
	"      HALT "
	"}"
	""
	"row3:"
	"{"
	"     "
	"}"
	""
	"row4:"
	"{"
	"     "
	"}"
	""
	"row5:"
	"{"
	"     "
	"}"
	""
	"row6:"
	"{"
	"     "
	"}"
	""
	"row7:"
	"{"
	"     "
	"}"
	""
	"row8:"
	"{"
	"      DSLEN  58  >  ?exit  DSLEN  2  <  ?exit  2dup  1  5  10  SPAWN  -rot  2pop "
	"}"
	""
	"row9:"
	"{"
	"     "
	"}"
	""
	"row10:"
	"{"
	"      2dup  OMOVE  ?loop  2dup  EAT  pop  2dup  OMOVE  pop  2dup  EAT  pop  2dup"
	"      OMOVE  pop  2dup  EAT  pop  2negate  ENERGY  -rot  SEND-ENERGY  pop "
	"}"
	""
	"row11:"
	"{"
	"      -19  -9  CBLEN  -84  -12  GROW  -11  mod  -33  KEY-PRESS  -1  56  GROW  -40"
	"      17  call  77  2dup  OMOVE  R2!  EAT  -59  -91  -36  93  --R7  call  R5!  44"
	"      72  -96  18  GROW  53  -3  R2++  -29  31  POPULATION  <<  CBLEN  KEY-PRESS"
	"      CBLEN  -84  50 "
	"}"
	""
	"row12:"
	"{"
	"      DSLEN  ?loop  call  CMOVE "
	"}"
	""
	"row13:"
	"{"
	"      67  -18  35  59  *  HOTTEST  31  2  38  -99  FARTHEST  9  AGE  nop  21  GROW "
	"}"
	""
	"row14:"
	"{"
	"      --R7  --R7  R3!  OPCODE!  >=  -5  MAKE-SPORE  -45  -2  -2  -36  -57  NEAREST"
	"      unpack2  -15 "
	"}"
	""
	"row15:"
	"{"
	"      2dup  OMOVE  ?loop  EAT  EAT  or  ?loop  55  R9  GROW "
	"}"
	""
	"row16:"
	"{"
	"      -89  HOTTEST  TRAP8  -40  5  GROW  ENERGY  5  /  R0!  pop  ?loop  -1  0  R0"
	"      MAKE-SPORE  -40  0  R0  MAKE-SPORE  NUMBER!  R5!  -40  ?loop  ?exit  33  -3"
	"      TRAP9  --R3  swap  -3  HOTTEST  -98  -46  34  24  -81  -40  -34  SEND  5  -72"
	"      <>  -72  -65  0  G0!  75  R9!  12  90  40  CB  -76  ?NUMBER!  R2!  32  58  -33"
	"      -  -79  90  SHOUT  -53  MOOD  81  -33 "
	"}"
	""
	"row17:"
	"{"
	"      -46  16  13  call  R5!  15  call  CMOVE  -47  14  12  or  -61  OMOVE  16  call"
	"      -3  HOTTEST  call  -7  HOTTEST  TRAP8  50  NUM-CELLS  MOOD!  73  SMALLEST  R6"
	"      MOUSE-POS  R5  -81  -1  -16  69  -82  R6++  2/  53  -8  --R7  -86  R7  R0  MAKE-SPORE"
	"      NUMBER!  R5!  MIN_INT  -80  -12  34  R0++  DIST "
	"}"
	""
	"row18:"
	"{"
	"      11  ?loop  MOOD  rot "
	"}"
	""
	"row19:"
	"{"
	"      call  unpack2  SEND "
	"}"
	""
	"row20:"
	"{"
	"     "
	"}"
	""
	"row21:"
	"{"
	"     "
	"}"
	""
	"row22:"
	"{"
	"      R3  -62  42 "
	"}"
	""
	"row23:"
	"{"
	"     "
	"}"
	""
	"row24:"
	"{"
	"     "
	"}"
	""
	"row25:"
	"{"
	"      POKE  -59  80  KEY-PRESS  HOTTEST "
	"}"
	""
	"row26:"
	"{"
	"      -89  HOTTEST  TRAP8  -40  5  GROW  ENERGY  5  /  R0!  pop  ?loop  -1  0  R0"
	"      MAKE-SPORE  -40  0  R0  MAKE-SPORE  NUMBER!  R5!  -40  ?loop  ?exit  33  -3"
	"      TRAP9  --R3  swap  -3  HOTTEST  -98  -46  34  24  -81  -40  -34  SEND  5  -72"
	"      <>  -72  -65  0  G0!  75  R9!  12  90  40  CB  -76  ?NUMBER!  R2!  32  58  -79"
	"      90  SHOUT  -53  MOOD  81  -33 "
	"}"
	""
	"row27:"
	"{"
	"      -1  -84  -37  -2  -36  -57  -  R6!  7 "
	"}"
	""
	"row28:"
	"{"
	"      -16  --R6  R8  MOUSE-POS  46  >>  OPCODE  TRAP8  call  CMOVE  or  -92  KEY-PRESS"
	"      -52  OMOVE  23  --R1  93  -88  -11  call  -1  89  HOTTEST  45  10  11  ?loop"
	"      45  NUM-CELLS  81  -9  -61  tuck  31  61  42  62  call  -48  R7!  <  COLDEST"
	"      R5!  MIN_INT  -75  31  G0  ROTATE  LISTEN  2  TRAP7  HOTTEST  31  sqrt  45"
	"      min  NEAREST  R6++ "
	"}"
	""
	"row29:"
	"{"
	"      -32  30  6  SHOUT "
	"}"
	""
	"row30:"
	"{"
	"      71  55 "
	"}"
	""
	"row31:"
	"{"
	"      20  --R6  R8  MOUSE-POS  -49  15  20  TRAP8  41  19  call  CMOVE  HAS-NEIGHBOR"
	"      36  PEEK  or  -57  2negate  20  --R1  99  -84  -15  call  -7  82  HOTTEST  47"
	"      10  16  ?loop  47  NUM-CELLS  81  -2  -67  tuck  27  68  45  -56  call  51"
	"      MIN_INT  -49  -77  34  G0  ROTATE  LISTEN  5  TRAP7  HOTTEST  34  sqrt  82"
	"      pop  44  min  NEAREST  R6++ "
	"}"
	""
	"row32:"
	"{"
	"      18  --R6  R8  MOUSE-POS  -47  R8++  TRAP1  -64  12  <=  43  22  call  CMOVE"
	"      10  SIZE  pop  ?NUMBER!  0  R2++  -59  OMOVE  12  <=  99  2+  -30  ?loop  85"
	"      -76  TRAP3  -19  MAKE-SPORE  59  -60  32  --R8  -31  -63  -80  -87  R7!  <"
	"      COLDEST  -92  -96  -40  NEAREST  56  TRAP7  R6++ "
	"}"
	""
	"row33:"
	"{"
	"      -38  87  87  90 "
	"}"
	""
	"row34:"
	"{"
	"      if  82  TRAP6  16  13  -6 "
	"}"
	""
	"row35:"
	"{"
	"     "
	"}"
	""
	"row36:"
	"{"
	"     "
	"}"
	""
	"row37:"
	"{"
	"      90 "
	"}"
	""
	"row38:"
	"{"
	"     "
	"}"
	""
	"row39:"
	"{"
	"      --R6  -29 "
	"}"
	""
	"row40:"
	"{"
	"      58 "
	"}"
	""
	"row41:"
	"{"
	"     "
	"}"
	""
	"row42:"
	"{"
	"      62  -95  -59  80  R2! "
	"}"
	""
	"row43:"
	"{"
	"     "
	"}"
	""
	"row44:"
	"{"
	"     "
	"}"
	""
	"row45:"
	"{"
	"      <>  -71  0  R6  -50  49  LISTEN  -56  rot "
	"}"
	""
	"row46:"
	"{"
	"      27  53  64  -20 "
	"}"
	""
	"row47:"
	"{"
	"      POKE  -59  80  KEY-PRESS  HOTTEST "
	"}"
	""
	"row48:"
	"{"
	"      min  GROW  52  over  +  -7  -21  -33  NEAREST  TRAP1  -70  R0++  27 "
	"}"
	""
	"row49:"
	"{"
	"      38  or  -65  min "
	"}"
	""
	"row50:"
	"{"
	"     "
	"}"
	""
	"row51:"
	"{"
	"      -16  --R6  R8  MOUSE-POS  46  16  13  TRAP8  call  CMOVE  or  -92  KEY-PRESS"
	"      -52  OMOVE  23  --R1  93  -88  -11  call  -1  89  HOTTEST  45  10  11  ?loop"
	"      45  NUM-CELLS  81  -9  -61  tuck  31  64  38  58  call  -48  R7!  <  COLDEST"
	"      R5!  MIN_INT  -75  31  G0  ROTATE  LISTEN  2  TRAP7  HOTTEST  31  sqrt  45"
	"      min  NEAREST  R6++ "
	"}"
	""
	"row52:"
	"{"
	"      -16  --R6  R8  MOUSE-POS  46  16  13  TRAP8  40  -21  --R0  R9  GROW  -92  KEY-PRESS"
	"      -52  OMOVE  23  --R1  93  -88  -11  call  --R3  >=  -1  89  HOTTEST  45  10"
	"      11  ?loop  45  NUM-CELLS  81  -9  -61  tuck  31  64  call  58  call  -48  R7!"
	"      <  COLDEST  R5!  MIN_INT  -75  31  --R2  ROTATE  LISTEN  2  16  13  TRAP7  HOTTEST"
	"      31  sqrt  85  pop  45  14  EAT  NEIGHBORS  min  NEAREST  -39  -6  HOTTEST  R6++ "
	"}"
	""
	"row53:"
	"{"
	"      38  TRAP8 "
	"}"
	""
	"row54:"
	"{"
	"     "
	"}"
	""
	"row55:"
	"{"
	"      sqrt  -38  HAS-NEIGHBOR  36  PEEK  -59  -50  R6  TRAP6  -26  41  ENERGY  55"
	"      R9 "
	"}"
	""
	"row56:"
	"{"
	"      27  53  64  -20 "
	"}"
	""
	"row57:"
	"{"
	"      -40  over  ?exit "
	"}"
	""
	"row58:"
	"{"
	"      75  11  ?loop  MOOD  rot "
	"}"
	""
	"row59:"
	"{"
	"      --R7  --R7  R3!  MAKE-SPORE  90  -93  -2  62  -95  -57  41  19  call  CMOVE"
	"      NEAREST  unpack2  -15 "
	"}"
  }

CELL 4   245 133
	0 0
	0 15 2
	{ 0 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 15
		17 6
	}
	{
		-19
		-1
		1
		-33
		0
		0
		-40
		5
	}

CELL 4   243 133
	0 0
	0 15 10
	{ 0 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 15
		17 6
	}
	{
		0
	}

CELL 4   242 132
	0 0
	0 15 10
	{ 0 0 0 0 0
	  1 0 0 0 0 }
	{
		0 1
		11 15
		17 6
	}
	{
		0
	}

CELL 4   242 131
	0 0
	0 8 13
	{ 0 0 0 0 0
	  0 0 0 0 0 }
	{
		0 1
		11 15
		17 15
		16 2
	}
	{
		-19
		-1
		-1
		-33
		0
		1
		-40
		-46
		16
		67
		1
		-47
		5
		2
		-2
		1
	}

CELL 4   244 132
	0 0
	0 15 4
	{ 0 0 0 0 0
	  1 0 0 0 0 }
	{
		0 1
		11 15
		17 6
	}
	{
		-19
		-1
		1
		-33
		0
		0
	}

ORGANISM 3  5 1 0   1713374905 1713374905  31147 1 8
  {  # program
	"main:"
	"{"
	"      11  call "
	"}"
	""
	"row1:"
	"{"
	"      1  BROADCAST  7  NEAREST  EAT  HALT "
	"}"
	""
	"row2:"
	"{"
	"      HALT "
	"}"
	""
	"row3:"
	"{"
	"     "
	"}"
	""
	"row4:"
	"{"
	"     "
	"}"
	""
	"row5:"
	"{"
	"     "
	"}"
	""
	"row6:"
	"{"
	"     "
	"}"
	""
	"row7:"
	"{"
	"     "
	"}"
	""
	"row8:"
	"{"
	"      DSLEN  58  >  ?exit  DSLEN  2  <  ?exit  2dup  1  5  10  SPAWN  -rot  2pop "
	"}"
	""
	"row9:"
	"{"
	"     "
	"}"
	""
	"row10:"
	"{"
	"      2dup  OMOVE  ?loop  2dup  EAT  pop  2dup  OMOVE  pop  2dup  EAT  pop  2dup"
	"      OMOVE  pop  2dup  EAT  pop  2negate  ENERGY  -rot  SEND-ENERGY  pop "
	"}"
	""
	"row11:"
	"{"
	"      -19  -9  CBLEN  -84  -12  GROW  -11  mod  -33  KEY-PRESS  -1  56  GROW  -40"
	"      17  call  77  2dup  OMOVE  R2!  EAT  -59  -91  -36  93  --R7  call  R5!  44"
	"      72  -96  18  GROW  53  -3  R2++  -29  31  POPULATION  <<  CBLEN  KEY-PRESS"
	"      CBLEN  -84  50 "
	"}"
	""
	"row12:"
	"{"
	"      DSLEN  ?loop  call  CMOVE "
	"}"
	""
	"row13:"
	"{"
	"      67  -18  35  59  *  HOTTEST  31  2  38  -99  FARTHEST  9  AGE  nop  21  GROW "
	"}"
	""
	"row14:"
	"{"
	"      --R7  --R7  R3!  OPCODE!  >=  -5  MAKE-SPORE  -45  -2  -2  -36  -57  NEAREST"
	"      unpack2  -15 "
	"}"
	""
	"row15:"
	"{"
	"      2dup  OMOVE  ?loop  EAT  EAT  or  ?loop  55  R9  GROW "
	"}"
	""
	"row16:"
	"{"
	"      -89  HOTTEST  TRAP8  -40  5  GROW  ENERGY  5  /  R0!  pop  ?loop  -1  0  R0"
	"      MAKE-SPORE  -40  0  R0  MAKE-SPORE  NUMBER!  R5!  -40  ?loop  ?exit  33  -3"
	"      TRAP9  --R3  swap  -3  HOTTEST  -98  -46  34  24  -81  -40  -34  SEND  5  -72"
	"      <>  -72  -65  0  G0!  75  R9!  12  90  40  CB  -76  ?NUMBER!  R2!  32  58  -33"
	"      -  -79  90  SHOUT  -53  MOOD  81  -33 "
	"}"
	""
	"row17:"
	"{"
	"      -46  16  13  call  R5!  15  call  CMOVE  -47  14  12  or  -61  OMOVE  16  call"
	"      -3  HOTTEST  call  -7  HOTTEST  TRAP8  50  NUM-CELLS  MOOD!  73  SMALLEST  R6"
	"      MOUSE-POS  R5  -81  -1  -16  69  -82  R6++  2/  53  -8  --R7  -86  R7  R0  MAKE-SPORE"
	"      NUMBER!  R5!  MIN_INT  -80  -12  34  R0++  DIST "
	"}"
	""
	"row18:"
	"{"
	"      11  ?loop  MOOD  rot "
	"}"
	""
	"row19:"
	"{"
	"      call  unpack2  SEND "
	"}"
	""
	"row20:"
	"{"
	"     "
	"}"
	""
	"row21:"
	"{"
	"     "
	"}"
	""
	"row22:"
	"{"
	"      R3  -62  42 "
	"}"
	""
	"row23:"
	"{"
	"     "
	"}"
	""
	"row24:"
	"{"
	"     "
	"}"
	""
	"row25:"
	"{"
	"      POKE  -59  80  KEY-PRESS  HOTTEST "
	"}"
	""
	"row26:"
	"{"
	"      -89  HOTTEST  TRAP8  -40  5  GROW  ENERGY  5  /  R0!  pop  ?loop  -1  0  R0"
	"      MAKE-SPORE  -40  0  R0  MAKE-SPORE  NUMBER!  R5!  -40  ?loop  ?exit  33  -3"
	"      TRAP9  --R3  swap  -3  HOTTEST  -98  -46  34  24  -81  -40  -34  SEND  5  -72"
	"      <>  -72  -65  0  G0!  75  R9!  12  90  40  CB  -76  ?NUMBER!  R2!  32  58  -79"
	"      90  SHOUT  -53  MOOD  81  -33 "
	"}"
	""
	"row27:"
	"{"
	"      -1  -84  -37  -  R6!  7 "
	"}"
	""
	"row28:"
	"{"
	"      -16  --R6  R8  MOUSE-POS  46  >>  OPCODE  TRAP8  call  CMOVE  or  -92  KEY-PRESS"
	"      -52  55  23  --R1  93  -88  -11  call  -1  89  HOTTEST  45  10  11  ?loop  45"
	"      NUM-CELLS  81  -9  -61  tuck  31  64  38  58  call  -48  R7!  <  COLDEST  R5!"
	"      MIN_INT  -75  31  G0  ROTATE  LISTEN  2  TRAP7  HOTTEST  31  sqrt  45  min"
	"      NEAREST  R6++ "
	"}"
	""
	"row29:"
	"{"
	"      SHOUT "
	"}"
	""
	"row30:"
	"{"
	"      71  OMOVE "
	"}"
	""
	"row31:"
	"{"
	"      20  --R6  R8  MOUSE-POS  -49  15  20  TRAP8  41  19  call  CMOVE  HAS-NEIGHBOR"
	"      36  PEEK  or  -57  2negate  20  --R1  99  -84  -15  call  -7  82  HOTTEST  47"
	"      10  16  ?loop  47  NUM-CELLS  81  -2  -67  tuck  27  68  45  -56  call  51"
	"      MIN_INT  -49  -77  34  G0  ROTATE  LISTEN  5  TRAP7  HOTTEST  34  sqrt  82"
	"      pop  44  min  NEAREST  R6++ "
	"}"
	""
	"row32:"
	"{"
	"      18  --R6  R8  MOUSE-POS  -47  R8++  TRAP1  -64  12  <=  43  22  call  CMOVE"
	"      10  SIZE  pop  ?NUMBER!  0  R2++  -59  OMOVE  12  <=  99  2+  -30  ?loop  85"
	"      -76  TRAP3  -19  MAKE-SPORE  59  -60  32  --R8  -31  -63  -80  -87  R7!  <"
	"      COLDEST  -92  -96  -40  NEAREST  56  TRAP7  R6++ "
	"}"
	""
	"row33:"
	"{"
	"      -38  87  87  58 "
	"}"
	""
	"row34:"
	"{"
	"      if  82  TRAP6  16  13  -6 "
	"}"
	""
	"row35:"
	"{"
	"     "
	"}"
	""
	"row36:"
	"{"
	"     "
	"}"
	""
	"row37:"
	"{"
	"      90 "
	"}"
	""
	"row38:"
	"{"
	"     "
	"}"
	""
	"row39:"
	"{"
	"      --R6  -29 "
	"}"
	""
	"row40:"
	"{"
	"      90 "
	"}"
	""
	"row41:"
	"{"
	"     "
	"}"
	""
	"row42:"
	"{"
	"      62  -95  -59  80  R2! "
	"}"
	""
	"row43:"
	"{"
	"     "
	"}"
	""
	"row44:"
	"{"
	"     "
	"}"
	""
	"row45:"
	"{"
	"      <>  -71  0  R6  -50  49  LISTEN  -56  rot "
	"}"
	""
	"row46:"
	"{"
	"      27  53  64  -20 "
	"}"
	""
	"row47:"
	"{"
	"      POKE  -59  80  KEY-PRESS  HOTTEST "
	"}"
	""
	"row48:"
	"{"
	"      min  GROW  52  over  +  -7  -21  -33  NEAREST  TRAP1  -70  R0++  27 "
	"}"
	""
	"row49:"
	"{"
	"      38  or  -65  min "
	"}"
	""
	"row50:"
	"{"
	"     "
	"}"
	""
	"row51:"
	"{"
	"      -16  --R6  R8  MOUSE-POS  46  16  13  TRAP8  call  CMOVE  or  -92  KEY-PRESS"
	"      -52  OMOVE  23  --R1  93  -88  -11  call  -1  89  HOTTEST  45  10  11  ?loop"
	"      45  NUM-CELLS  81  -9  -61  tuck  31  64  38  58  call  -48  R7!  <  COLDEST"
	"      R5!  MIN_INT  -75  31  G0  ROTATE  LISTEN  2  TRAP7  HOTTEST  31  sqrt  45"
	"      min  NEAREST  R6++ "
	"}"
	""
	"row52:"
	"{"
	"      --R7  -5  97  HAS-NEIGHBOR  TRAP6  >=  -5  MAKE-SPORE  90  71  36  90 "
	"}"
	""
	"row53:"
	"{"
	"      -16  --R6  R8  MOUSE-POS  46  16  13  TRAP8  40  -21  --R0  R9  GROW  -92  KEY-PRESS"
	"      -52  OMOVE  23  --R1  93  -88  -11  call  --R3  >=  -1  89  HOTTEST  45  10"
	"      11  ?loop  45  NUM-CELLS  81  -9  -61  tuck  31  64  call  58  call  -48  R7!"
	"      <  COLDEST  R5!  MIN_INT  -75  31  --R2  ROTATE  LISTEN  2  16  13  TRAP7  HOTTEST"
	"      31  sqrt  85  pop  45  14  EAT  NEIGHBORS  min  NEAREST  -39  -6  HOTTEST  R6++ "
	"}"
	""
	"row54:"
	"{"
	"      38  TRAP8 "
	"}"
	""
	"row55:"
	"{"
	"     "
	"}"
	""
	"row56:"
	"{"
	"      sqrt  -38  HAS-NEIGHBOR  36  PEEK  -59  -50  R6  TRAP6  -26  41  ENERGY  55"
	"      R9 "
	"}"
	""
	"row57:"
	"{"
	"      27  53  64  -20 "
	"}"
	""
	"row58:"
	"{"
	"      -40  over  ?exit "
	"}"
	""
	"row59:"
	"{"
	"      75  11  ?loop  MOOD  rot "
	"}"
	""
	"row60:"
	"{"
	"      --R7  --R7  R3!  MAKE-SPORE  90  -93  -2  62  -95  -57  41  19  call  CMOVE"
	"      NEAREST  unpack2  -15 "
	"}"
  }

CELL 3   61 173
	0 0
	0 10 2
	{ 80 0 0 0 0
	  0 0 0 0 0 }
	{
	}
	{
		0
		59
		1
	}

ORGANISM 2  0 5 0   1713797134 1713797134  31143 100000 94
  {  # program
	"main:"
	"{"
	"      11  call "
	"}"
	""
	"row1:"
	"{"
	"      1  BROADCAST  7  NEAREST  EAT  HALT "
	"}"
	""
	"row2:"
	"{"
	"      HALT "
	"}"
	""
	"row3:"
	"{"
	"     "
	"}"
	""
	"row4:"
	"{"
	"     "
	"}"
	""
	"row5:"
	"{"
	"     "
	"}"
	""
	"row6:"
	"{"
	"     "
	"}"
	""
	"row7:"
	"{"
	"     "
	"}"
	""
	"row8:"
	"{"
	"      DSLEN  58  >  ?exit  DSLEN  2  <  ?exit  2dup  1  5  10  SPAWN  -rot  2pop "
	"}"
	""
	"row9:"
	"{"
	"     "
	"}"
	""
	"row10:"
	"{"
	"      2dup  OMOVE  ?loop  2dup  EAT  pop  2dup  OMOVE  pop  2dup  EAT  pop  2dup"
	"      OMOVE  pop  2dup  EAT  pop  2negate  ENERGY  -rot  SEND-ENERGY  pop "
	"}"
	""
	"row11:"
	"{"
	"      -19  -9  CBLEN  -84  -12  GROW  -11  mod  -33  KEY-PRESS  -1  56  GROW  -40"
	"      17  call  77  2dup  OMOVE  R2!  EAT  -59  -91  -36  93  --R7  call  R5!  44"
	"      72  -96  18  GROW  53  -3  R2++  -29  31  POPULATION  <<  CBLEN  KEY-PRESS"
	"      CBLEN  -84  50 "
	"}"
	""
	"row12:"
	"{"
	"      DSLEN  ?loop  call  CMOVE "
	"}"
	""
	"row13:"
	"{"
	"      67  -18  35  59  *  HOTTEST  31  2  38  -99  FARTHEST  9  AGE  nop  21  GROW "
	"}"
	""
	"row14:"
	"{"
	"      --R7  --R7  R3!  OPCODE!  >=  -5  MAKE-SPORE  -45  -2  -2  -36  -57  NEAREST"
	"      unpack2  -15 "
	"}"
	""
	"row15:"
	"{"
	"      2dup  OMOVE  ?loop  EAT  EAT  or  ?loop  55  R9  GROW "
	"}"
	""
	"row16:"
	"{"
	"      -89  HOTTEST  TRAP8  -40  5  GROW  ENERGY  5  /  R0!  pop  ?loop  -1  0  R0"
	"      MAKE-SPORE  -40  0  R0  MAKE-SPORE  NUMBER!  R5!  -40  ?loop  ?exit  33  -3"
	"      TRAP9  --R3  swap  -3  HOTTEST  -98  -46  34  24  -81  -40  -34  SEND  5  -72"
	"      <>  -72  -65  0  G0!  75  R9!  12  90  40  CB  -76  ?NUMBER!  R2!  32  58  -33"
	"      -  -79  90  SHOUT  -53  MOOD  81  -33 "
	"}"
	""
	"row17:"
	"{"
	"      -46  16  13  call  R5!  15  call  CMOVE  -47  14  12  or  -61  OMOVE  16  call"
	"      -3  HOTTEST  call  -7  HOTTEST  TRAP8  50  NUM-CELLS  MOOD!  73  SMALLEST  R6"
	"      MOUSE-POS  R5  -81  -1  -16  69  -82  R6++  2/  53  -8  --R7  -86  R7  R0  MAKE-SPORE"
	"      NUMBER!  R5!  MIN_INT  -80  -12  34  R0++  DIST "
	"}"
	""
	"row18:"
	"{"
	"      11  ?loop  MOOD  rot "
	"}"
	""
	"row19:"
	"{"
	"      call  unpack2  SEND "
	"}"
	""
	"row20:"
	"{"
	"     "
	"}"
	""
	"row21:"
	"{"
	"     "
	"}"
	""
	"row22:"
	"{"
	"      R3  -62  42 "
	"}"
	""
	"row23:"
	"{"
	"     "
	"}"
	""
	"row24:"
	"{"
	"     "
	"}"
	""
	"row25:"
	"{"
	"      POKE  -59  80  KEY-PRESS  HOTTEST "
	"}"
	""
	"row26:"
	"{"
	"      -89  HOTTEST  TRAP8  -40  5  GROW  ENERGY  5  /  R0!  pop  ?loop  -1  0  R0"
	"      MAKE-SPORE  -40  0  R0  MAKE-SPORE  NUMBER!  R5!  -40  ?loop  ?exit  33  -3"
	"      TRAP9  --R3  swap  -3  HOTTEST  -98  -46  34  24  -81  -40  -34  SEND  5  -72"
	"      <>  -72  -65  0  G0!  75  R9!  12  90  40  CB  -76  ?NUMBER!  R2!  32  58  -79"
	"      90  SHOUT  -53  MOOD  81  -33 "
	"}"
	""
	"row27:"
	"{"
	"      -1  -84  -37  -2  -36  -57  -  R6!  7 "
	"}"
	""
	"row28:"
	"{"
	"      -16  --R6  R8  MOUSE-POS  46  >>  OPCODE  TRAP8  call  CMOVE  or  -92  KEY-PRESS"
	"      -52  OMOVE  23  --R1  93  -88  -11  call  -1  89  HOTTEST  45  10  11  ?loop"
	"      45  NUM-CELLS  81  -9  -61  tuck  31  61  42  62  call  -48  R7!  <  COLDEST"
	"      R5!  MIN_INT  -75  31  G0  ROTATE  LISTEN  2  TRAP7  HOTTEST  31  sqrt  45"
	"      min  NEAREST  R6++ "
	"}"
	""
	"row29:"
	"{"
	"      -32  30  6  SHOUT "
	"}"
	""
	"row30:"
	"{"
	"      71  55 "
	"}"
	""
	"row31:"
	"{"
	"      20  --R6  R8  MOUSE-POS  -49  15  20  TRAP8  41  19  call  CMOVE  HAS-NEIGHBOR"
	"      36  PEEK  or  -57  2negate  20  --R1  99  -84  -15  call  -7  82  HOTTEST  47"
	"      10  16  ?loop  47  NUM-CELLS  81  -2  -67  tuck  27  68  45  -56  call  51"
	"      MIN_INT  -49  -77  34  G0  ROTATE  LISTEN  5  TRAP7  HOTTEST  34  sqrt  82"
	"      pop  44  min  NEAREST  R6++ "
	"}"
	""
	"row32:"
	"{"
	"      18  --R6  R8  MOUSE-POS  -47  R8++  TRAP1  -64  12  <=  43  22  call  CMOVE"
	"      10  SIZE  pop  ?NUMBER!  0  R2++  -59  OMOVE  12  <=  99  2+  -30  ?loop  85"
	"      -76  TRAP3  -19  MAKE-SPORE  59  -60  32  --R8  -31  -63  -80  -87  R7!  <"
	"      COLDEST  -92  -96  -40  NEAREST  56  TRAP7  R6++ "
	"}"
	""
	"row33:"
	"{"
	"      -38  87  87  90 "
	"}"
	""
	"row34:"
	"{"
	"      if  82  TRAP6  16  13  -6 "
	"}"
	""
	"row35:"
	"{"
	"     "
	"}"
	""
	"row36:"
	"{"
	"     "
	"}"
	""
	"row37:"
	"{"
	"      90 "
	"}"
	""
	"row38:"
	"{"
	"     "
	"}"
	""
	"row39:"
	"{"
	"      --R6  -29 "
	"}"
	""
	"row40:"
	"{"
	"      58 "
	"}"
	""
	"row41:"
	"{"
	"     "
	"}"
	""
	"row42:"
	"{"
	"      62  -95  -59  80  R2! "
	"}"
	""
	"row43:"
	"{"
	"     "
	"}"
	""
	"row44:"
	"{"
	"     "
	"}"
	""
	"row45:"
	"{"
	"      <>  -71  0  R6  -50  49  LISTEN  -56  rot "
	"}"
	""
	"row46:"
	"{"
	"      27  53  64  -20 "
	"}"
	""
	"row47:"
	"{"
	"      POKE  -59  80  KEY-PRESS  HOTTEST "
	"}"
	""
	"row48:"
	"{"
	"      min  GROW  52  over  +  -7  -21  -33  NEAREST  TRAP1  -70  R0++  27 "
	"}"
	""
	"row49:"
	"{"
	"      38  or  -65  min "
	"}"
	""
	"row50:"
	"{"
	"     "
	"}"
	""
	"row51:"
	"{"
	"      -16  --R6  R8  MOUSE-POS  46  16  13  TRAP8  call  CMOVE  or  -92  KEY-PRESS"
	"      -52  OMOVE  23  --R1  93  -88  -11  call  -1  89  HOTTEST  45  10  11  ?loop"
	"      45  NUM-CELLS  81  -9  -61  tuck  31  64  38  58  call  -48  R7!  <  COLDEST"
	"      R5!  MIN_INT  -75  31  G0  ROTATE  LISTEN  2  TRAP7  HOTTEST  31  sqrt  45"
	"      min  NEAREST  R6++ "
	"}"
	""
	"row52:"
	"{"
	"      -16  --R6  R8  MOUSE-POS  46  16  13  TRAP8  40  -21  --R0  R9  GROW  -92  KEY-PRESS"
	"      -52  OMOVE  23  --R1  93  -88  -11  call  --R3  >=  -1  89  HOTTEST  45  10"
	"      11  ?loop  45  NUM-CELLS  81  -9  -61  tuck  31  64  call  58  call  -48  R7!"
	"      <  COLDEST  R5!  MIN_INT  -75  31  --R2  ROTATE  LISTEN  2  16  13  TRAP7  HOTTEST"
	"      31  sqrt  85  pop  45  14  EAT  NEIGHBORS  min  NEAREST  -39  -6  HOTTEST  R6++ "
	"}"
	""
	"row53:"
	"{"
	"      38  TRAP8 "
	"}"
	""
	"row54:"
	"{"
	"     "
	"}"
	""
	"row55:"
	"{"
	"      sqrt  -38  HAS-NEIGHBOR  36  PEEK  -59  -50  R6  TRAP6  -26  41  ENERGY  55"
	"      R9 "
	"}"
	""
	"row56:"
	"{"
	"      27  53  64  -20 "
	"}"
	""
	"row57:"
	"{"
	"      -40  over  ?exit "
	"}"
	""
	"row58:"
	"{"
	"      75  11  ?loop  MOOD  rot "
	"}"
	""
	"row59:"
	"{"
	"      --R7  --R7  R3!  MAKE-SPORE  90  -93  -2  62  -95  -57  41  19  call  CMOVE"
	"      NEAREST  unpack2  -15 "
	"}"
  }

CELL 2   45 242
	0 0
	0 15 2
	{ 0 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 15
		17 6
	}
	{
		-19
		-1
		1
		-33
		0
		0
		-40
		5
	}

CELL 2   43 242
	0 0
	0 15 10
	{ 0 0 0 0 0
	  -1 0 0 0 0 }
	{
		0 1
		11 15
		17 6
	}
	{
		0
	}

CELL 2   42 241
	0 0
	0 15 10
	{ 0 0 0 0 0
	  1 0 0 0 0 }
	{
		0 1
		11 15
		17 6
	}
	{
		0
	}

CELL 2   42 240
	0 0
	0 8 13
	{ 0 0 0 0 0
	  0 0 0 0 0 }
	{
		0 1
		11 15
		17 15
		16 2
	}
	{
		-19
		-1
		-1
		-33
		0
		1
		-40
		-46
		16
		67
		1
		-47
		5
		2
		-2
		1
	}

CELL 2   44 241
	0 0
	0 15 4
	{ 0 0 0 0 0
	  1 0 0 0 0 }
	{
		0 1
		11 15
		17 6
	}
	{
		-19
		-1
		1
		-33
		0
		0
	}

ORGANISM 1  0 6 0   1713659353 1713659353  31151 143 602
  {  # program
	"main:"
	"{"
	"      11  call "
	"}"
	""
	"row1:"
	"{"
	"      1  BROADCAST  7  NEAREST  EAT  HALT "
	"}"
	""
	"row2:"
	"{"
	"      HALT "
	"}"
	""
	"row3:"
	"{"
	"     "
	"}"
	""
	"row4:"
	"{"
	"     "
	"}"
	""
	"row5:"
	"{"
	"     "
	"}"
	""
	"row6:"
	"{"
	"     "
	"}"
	""
	"row7:"
	"{"
	"     "
	"}"
	""
	"row8:"
	"{"
	"      DSLEN  58  >  ?exit  DSLEN  2  <  ?exit  2dup  1  5  10  SPAWN  -rot  2pop "
	"}"
	""
	"row9:"
	"{"
	"     "
	"}"
	""
	"row10:"
	"{"
	"      2dup  OMOVE  ?loop  2dup  EAT  pop  2dup  OMOVE  pop  2dup  EAT  pop  2dup"
	"      OMOVE  pop  2dup  EAT  pop  2negate  ENERGY  -rot  SEND-ENERGY  pop "
	"}"
	""
	"row11:"
	"{"
	"      -19  -9  CBLEN  -84  -12  GROW  -11  mod  -33  KEY-PRESS  -1  56  GROW  -40"
	"      17  call  77  2dup  -91  -36  93  --R7  call  R5!  44  72  -96  18  GROW  53"
	"      -3  R2++  -29  31  POPULATION  <<  CBLEN  KEY-PRESS  CBLEN  -84  50 "
	"}"
	""
	"row12:"
	"{"
	"      90  --R4  -47  -25  -3 "
	"}"
	""
	"row13:"
	"{"
	"      67  -18  G0!  R7!  <  COLDEST  31  2  38  -99  FARTHEST  9  AGE  nop  21  GROW "
	"}"
	""
	"row14:"
	"{"
	"      --R7  --R7  R3!  OPCODE!  >=  -5  MAKE-SPORE  -47  -2  -2  -36  -57  NEAREST"
	"      unpack2  -15 "
	"}"
	""
	"row15:"
	"{"
	"      2dup  OMOVE  ?loop  EAT  EAT  or  ?loop  55  R9  GROW "
	"}"
	""
	"row16:"
	"{"
	"      -89  HOTTEST  TRAP8  -40  5  GROW  ENERGY  5  /  R0!  pop  ?loop  -1  0  R0"
	"      MAKE-SPORE  -40  0  R0  MAKE-SPORE  NUMBER!  R5!  -40  ?loop  ?exit  33  -3"
	"      TRAP9  --R3  swap  -3  HOTTEST  -98  -46  34  24  -81  -40  -34  SEND  5  -72"
	"      <>  -72  -65  0  G0!  75  R9!  12  90  40  CB  -76  ?NUMBER!  R2!  32  58  -33"
	"      -  CMOVE  or  -92  KEY-PRESS  MOOD  81  -33 "
	"}"
	""
	"row17:"
	"{"
	"      -46  16  13  call  R5!  15  call  CMOVE  -47  14  12  or  -61  OMOVE  16  call"
	"      -3  HOTTEST  call  -7  53  64  -20  HOTTEST  TRAP8  50  NUM-CELLS  MOOD!  73"
	"      SMALLEST  R6  MOUSE-POS  R5  -81  -1  -16  69  -82  R6++  2/  53  -8  --R7"
	"      -86  R7  R0  MAKE-SPORE  NUMBER!  R5!  MIN_INT  -80  -12  34  R0++  DIST "
	"}"
	""
	"row18:"
	"{"
	"     "
	"}"
	""
	"row19:"
	"{"
	"     "
	"}"
	""
	"row20:"
	"{"
	"     "
	"}"
	""
	"row21:"
	"{"
	"     "
	"}"
	""
	"row22:"
	"{"
	"      -18  TRAP3  MOUSE-POS  if  R3  -62  42 "
	"}"
	""
	"row23:"
	"{"
	"      TRAP8  47  -95 "
	"}"
	""
	"row24:"
	"{"
	"      R3++  55  MIN_INT "
	"}"
	""
	"row25:"
	"{"
	"      2-  37  R2 "
	"}"
	""
	"row26:"
	"{"
	"      -89  HOTTEST  TRAP8  -40  5  GROW  ENERGY  5  /  R0!  pop  ?loop  -1  0  R0"
	"      MAKE-SPORE  -40  0  R0  MAKE-SPORE  NUMBER!  R5!  -40  ?loop  ?exit  33  -3"
	"      TRAP9  --R3  swap  -3  HOTTEST  -98  -46  34  24  -81  -40  -34  SEND  5  -72"
	"      <>  -72  -65  0  G0!  75  R9!  12  90  40  CB  -76  ?NUMBER!  R2!  32  58  -33"
	"      -  -79  89  SHOUT  -53  MOOD  81  -33 "
	"}"
	""
	"row27:"
	"{"
	"      WRITE  NUMBER!  4 "
	"}"
	""
	"row28:"
	"{"
	"      -47  -25  -3  R3++  55  MIN_INT "
	"}"
	""
	"row29:"
	"{"
	"      -3  -7 "
	"}"
	""
	"row30:"
	"{"
	"      71  55 "
	"}"
	""
	"row31:"
	"{"
	"      20  --R6  R8  MOUSE-POS  -49  15  20  TRAP8  41  19  call  CMOVE  HAS-NEIGHBOR"
	"      36  PEEK  or  -57  2negate  20  --R1  99  -84  -15  call  -7  82  HOTTEST  47"
	"      10  16  ?loop  47  NUM-CELLS  81  -2  -67  tuck  27  68  45  -56  call  51"
	"      R7!  <  COLDEST  R5!  MIN_INT  -49  -30  -77  34  G0  ROTATE  LISTEN  5  TRAP7"
	"      HOTTEST  34  sqrt  82  pop  NUMBER!  4  44  min  NEAREST  R6++ "
	"}"
	""
	"row32:"
	"{"
	"      18  --R6  R8  MOUSE-POS  -47  R8++  TRAP2  72  TRAP1  -64  12  <=  43  22  call"
	"      CMOVE  10  SIZE  pop  ?NUMBER!  0  R2++  -59  OMOVE  12  <=  99  2+  -30  ?loop"
	"      85  -76  TRAP3  -19  MAKE-SPORE  59  -60  32  --R8  -31  -63  -80  -87  62"
	"      -95  R2!  -92  -96  -40  NEAREST  56  TRAP7  R6++ "
	"}"
	""
	"row33:"
	"{"
	"      -35  -11  call  -1 "
	"}"
	""
	"row34:"
	"{"
	"      --R9  if  83  TRAP6  R6!  EAT  -2 "
	"}"
	""
	"row35:"
	"{"
	"     "
	"}"
	""
	"row36:"
	"{"
	"      MOOD "
	"}"
	""
	"row37:"
	"{"
	"      -44  -43  71  POKE  15  TRAP6  --R2 "
	"}"
	""
	"row38:"
	"{"
	"      PEEK "
	"}"
	""
	"row39:"
	"{"
	"      -16  --R6  R8  MOUSE-POS  46  16  13  TRAP8  40  -21  --R0  R9  GROW  -92  KEY-PRESS"
	"      -52  OMOVE  23  --R1  93  -88  -11  call  --R3  >=  -1  89  HOTTEST  45  10"
	"      11  ?loop  45  NUM-CELLS  81  -9  -61  tuck  31  64  38  58  call  -48  R7!"
	"      <  COLDEST  R5!  MIN_INT  -75  31  --R2  ROTATE  LISTEN  2  16  13  TRAP7  HOTTEST"
	"      31  sqrt  85  pop  45  14  EAT  NEIGHBORS  min  NEAREST  -39  -6  HOTTEST  R6++ "
	"}"
	""
	"row40:"
	"{"
	"     "
	"}"
	""
	"row41:"
	"{"
	"      83  35  nop  swap  -44  FARTHEST  59  *  HOTTEST "
	"}"
	""
	"row42:"
	"{"
	"     "
	"}"
	""
	"row43:"
	"{"
	"      -16  --R6  R8  MOUSE-POS  46  16  13  TRAP8  call  CMOVE  or  -92  KEY-PRESS"
	"      -52  OMOVE  23  --R1  93  -88  86  91  57  89  not  43  14  10  ?loop  45  NUM-CELLS"
	"      81  -9  -61  tuck  31  64  38  58  call  -48  R7!  <  COLDEST  R5!  MIN_INT"
	"      -75  31  G0  ROTATE  LISTEN  2  TRAP7  HOTTEST  31  sqrt  45  min  NEAREST"
	"      R6++ "
	"}"
	""
	"row44:"
	"{"
	"      -50  49  LISTEN  -56  rot "
	"}"
	""
	"row45:"
	"{"
	"      64  -20 "
	"}"
	""
	"row46:"
	"{"
	"      -16  --R6  R8  MOUSE-POS  46  16  13  TRAP8  call  -79  90  SHOUT  -53  -52"
	"      NUMBER!  OMOVE  23  --R1  93  -88  -11  call  -1  89  HOTTEST  45  10  11  ?loop"
	"      45  NUM-CELLS  81  -9  -61  tuck  31  call  -48  R7!  <  R6  R5!  MIN_INT  -75"
	"      31  G0  ROTATE  LISTEN  2  TRAP7  HOTTEST  31  sqrt  49  pop  KEY-PRESS  CMOVE "
	"}"
	""
	"row47:"
	"{"
	"      min  -59  GROW  52  over  -7  -18  -31  R2  G0!  -70  R0++  27 "
	"}"
	""
	"row48:"
	"{"
	"      DIST  -68  min "
	"}"
	""
	"row49:"
	"{"
	"      -31 "
	"}"
	""
	"row50:"
	"{"
	"      POKE  -59  -79  -21  32  WRITE "
	"}"
	""
	"row51:"
	"{"
	"      --R7  -5  97  HAS-NEIGHBOR  TRAP6  >=  40  -5  MAKE-SPORE  90  71  36 "
	"}"
	""
	"row52:"
	"{"
	"      DSLEN  R2! "
	"}"
	""
	"row53:"
	"{"
	"      2-  37  R2 "
	"}"
	""
	"row54:"
	"{"
	"     "
	"}"
	""
	"row55:"
	"{"
	"      ?loop  15  14  <=  41  19  call  CMOVE  R0!  -57  55  90  R8!  23  OMOVE  20"
	"      TRAP8  2+  KEY-PRESS  42  2+  2negate  -89  ?loop  47  NUM-CELLS  R5  81  -2"
	"      23  -67  tuck  R7!  27  68  62  -65  -84  R7!  <  COLDEST  R5!  MIN_INT  -77"
	"      NEAREST  R3++  69  33  -15  call  -3  TRAP9  --R3  5  57  TRAP7  R6++ "
	"}"
	""
	"row56:"
	"{"
	"      sqrt  -38  36  PEEK  -59  -50  R6  TRAP6  -26  41  ENERGY  55  R9 "
	"}"
	""
	"row57:"
	"{"
	"      -40  over "
	"}"
	""
	"row58:"
	"{"
	"      rot "
	"}"
	""
	"row59:"
	"{"
	"      --R7  --R7  R3!  MAKE-SPORE  90  -93  -2  62  -95  -57  41  19  call  CMOVE"
	"      NEAREST  unpack2  -15 "
	"}"
  }

CELL 1   119 235
	0 0
	0 8 7
	{ 28 0 0 0 0
	  0 0 67 0 0 }
	{
		0 1
		11 15
		17 15
		16 2
	}
	{
		-18
		18
		0
	}

CELL 1   120 235
	0 0
	0 16 2
	{ 28 0 0 0 0
	  0 0 67 0 0 }
	{
		0 1
		11 15
		17 15
	}
	{
		0
		0
		-184
	}

CELL 1   120 233
	0 0
	0 8 7
	{ 28 0 0 0 0
	  0 0 67 0 0 }
	{
		0 1
		11 15
		17 15
		16 2
	}
	{
		0
		55
		55
		0
	}

CELL 1   121 234
	0 0
	0 16 2
	{ 28 0 0 0 0
	  0 0 67 0 0 }
	{
		0 1
		11 15
		17 15
	}
	{
		0
		2
		2
	}

CELL 1   119 233
	0 0
	0 16 2
	{ 28 0 0 0 0
	  0 0 67 0 0 }
	{
		0 1
		11 15
		17 15
	}
	{
		-51
		0
	}

CELL 1   120 234
	0 0
	0 8 15
	{ 26 0 0 0 0
	  0 0 67 0 0 }
	{
		0 1
		11 15
		17 15
		16 2
	}
	{
		0
	}


CELL_LIST {
	277 236
	276 235
	278 236
	277 235
	277 237
	276 237
	119 158
	118 157
	120 158
	119 157
	119 159
	118 159
	194 271
	192 270
	192 271
	193 272
	195 272
	244 132
	242 131
	242 132
	243 133
	245 133
	61 173
	44 241
	42 240
	42 241
	43 242
	45 242
	120 234
	119 233
	121 234
	120 233
	120 235
	119 235
}

